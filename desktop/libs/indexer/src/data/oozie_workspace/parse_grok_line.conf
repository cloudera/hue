# Licensed to Cloudera, Inc. under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  Cloudera, Inc. licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<%page args="format_settings, format_class"/>

{
  readLine{
    charset: UTF-8
  }
}

# rename field from message to file_line since message is ocassionally used by grok commands as an output field
{
  addValues {
    file_line : "@{message}"
  }
}
{
  removeFields {
    blacklist : ["literal:message"]
  }
}

{
  if{
    conditions : [
      # check if the grok will work and if it does then do it. Actions in conditions don't persist
      {
        grok {
          dictionaryFiles : ["grok_dictionaries"]

          expressions : {
            file_line: """${format_class.get_grok()}"""
          }
        }
      }
    ]
    then : [
      {
        grok {
          dictionaryFiles : ["grok_dictionaries"]

          expressions : {
            file_line: """${format_class.get_grok()}"""
          }
        }
      }
      { logInfo { format : "Successfuly grokked {}", args : ["@{}"] } }
    ]
    else : [
      { logInfo { format : "Ignoring record due to ungrokable format: {}", args : ["@{}"] } }
      { dropRecord {} }
    ]
  }
}
