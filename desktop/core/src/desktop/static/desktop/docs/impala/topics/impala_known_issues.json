{"body":"<div><div id=\"known_issues\"><div class=\"hue-doc-title\"><span class=\"hue-doc-ph\">Known Issues and Workarounds in Impala</span><span class=\"hue-doc-ph\">Apache Impala Known Issues</span></div><div><p>\n      The following sections describe known issues and workarounds in Impala, as of the current\n      production release. This page summarizes the most serious or frequently encountered issues\n      in the current release, to help you make planning decisions about installing and\n      upgrading. Any workarounds are listed here. The bug links take you to the Impala issues\n      site, where you can see the diagnosis and whether a fix is in the pipeline.\n    </p><div class=\"hue-doc-note\">      The online issue tracking system for Impala contains comprehensive information and is\n      updated in real time. To verify whether an issue you are experiencing has already been\n      reported, or which release an issue is fixed in, search on the\n      <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/\" target=\"_blank\">issues.apache.org\n      JIRA tracker</a>.\n    </div><p/><p>\n      For issues fixed in various Impala releases, see\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_fixed_issues.xml\" data-doc-anchor-id=\"fixed_issues\"><span class=\"hue-doc-ph\">Fixed Issues in Apache Impala</span><span class=\"hue-doc-ph\">Fixed Issues in Apache Impala</span></a>.\n    </p></div><div id=\"known_issues_startup\"><div class=\"hue-doc-title\">Impala Known Issues: Startup</div><div><p>\n        These issues can prevent one or more Impala-related daemons from starting properly.\n      </p></div><div id=\"IMPALA-4978\"><div class=\"hue-doc-title\">Impala requires FQDN from hostname command on Kerberized clusters</div><div><p>\n          The method Impala uses to retrieve the host name while constructing the Kerberos\n          principal is the <span class=\"hue-doc-codeph\">gethostname()</span> system call. This function might not\n          always return the fully qualified domain name, depending on the network configuration.\n          If the daemons cannot determine the FQDN, Impala does not start on a Kerberized\n          cluster.\n        </p><p><b>Workaround:</b> Test if a host is affected by checking whether the output of the\n          <span class=\"hue-doc-cmdname\">hostname</span> command includes the FQDN. On hosts where\n          <span class=\"hue-doc-cmdname\">hostname</span>, only returns the short name, pass the command-line flag\n          <span class=\"hue-doc-codeph\">‑‑hostname=<span class=\"hue-doc-varname\">fully_qualified_domain_name</span></span>\n          in the startup options of all Impala-related daemons.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-4978\" target=\"_blank\">IMPALA-4978</a></p></div></div></div><div id=\"known_issues_performance\"><div class=\"hue-doc-title\" id=\"ki_performance\">Impala Known Issues: Performance</div><div><p>\n        These issues involve the performance of operations such as queries or DDL statements.\n      </p></div><div id=\"impala-6671\"><div class=\"hue-doc-title\">Metadata operations block read-only operations on unrelated tables</div><div><p>\n          Metadata operations that change the state of a table, like <span class=\"hue-doc-codeph\">COMPUTE\n          STATS</span> or <span class=\"hue-doc-codeph\">ALTER RECOVER PARTITIONS</span>, may delay metadata\n          propagation of unrelated unloaded tables triggered by statements like\n          <span class=\"hue-doc-codeph\">DESCRIBE</span> or <span class=\"hue-doc-codeph\">SELECT</span> queries.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-6671\" target=\"_blank\">IMPALA-6671</a></p></div></div></div><div id=\"known_issues_drivers\"><div class=\"hue-doc-title\" id=\"ki_drivers\">Impala Known Issues: JDBC and ODBC Drivers</div><div><p>\n        These issues affect applications that use the JDBC or ODBC APIs, such as business\n        intelligence tools or custom-written applications in languages such as Java or C++.\n      </p></div><div id=\"IMPALA-1792\"><div class=\"hue-doc-title\">ImpalaODBC: Can not get the value in the SQLGetData(m-x th column) after the SQLBindCol(m th column)</div><div><p>\n          If the ODBC <span class=\"hue-doc-codeph\">SQLGetData</span> is called on a series of columns, the function\n          calls must follow the same order as the columns. For example, if data is fetched from\n          column 2 then column 1, the <span class=\"hue-doc-codeph\">SQLGetData</span> call for column 1 returns\n          <span class=\"hue-doc-codeph\">NULL</span>.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-1792\" target=\"_blank\">IMPALA-1792</a></p><p><b>Workaround:</b> Fetch columns in the same order they are defined in the table.\n        </p></div></div></div><div id=\"known_issues_security\"><div class=\"hue-doc-title\" id=\"ki_security\">Impala Known Issues: Security</div><div><p>\n        These issues are related to security features, such as Kerberos authentication, Sentry\n        authorization, encryption, auditing, and redaction.\n      </p></div><div id=\"impala-7072\"><div class=\"hue-doc-title\">Impala does not support Heimdal Kerberos</div><div><p>\n          Heimdal Kerberos is not supported in Impala.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-7072\" target=\"_blank\">IMPALA-7072</a></p><p><b>Affected Versions:</b> All versions of Impala\n        </p></div></div><div id=\"id_p1n_tbx_22b\"><div class=\"hue-doc-title\">Impala does not allow the use of insecure clusters with public IPs</div><div><p>\n          Starting in Impala 2.12, Impala, by default, will only allow\n          unencrypted or unauthenticated connections from trusted subnets:\n          <span class=\"hue-doc-codeph\">127.0.0.0/8</span>, <span class=\"hue-doc-codeph\">10.0.0.0/8</span>,\n          <span class=\"hue-doc-codeph\">172.16.0.0/12</span>, <span class=\"hue-doc-codeph\">192.168.0.0/16</span>,\n          <span class=\"hue-doc-codeph\">169.254.0.0/16</span>. Unencrypted or unauthenticated connections from\n          publicly routable IPs will be rejected.\n        </p><p>\n          The trusted subnets can be configured using the <span class=\"hue-doc-codeph\">--trusted_subnets</span>\n          flag. Set it to '<span class=\"hue-doc-codeph\">0.0.0.0/0</span>' to allow unauthenticated connections from\n          all remote IP addresses. However, if network access is not otherwise restricted by a\n          firewall, malicious users may be able to gain unauthorized access.\n        </p></div></div></div><div id=\"known_issues_resources\"><div class=\"hue-doc-title\" id=\"ki_resources\">Impala Known Issues: Resources</div><div><p>\n        These issues involve memory or disk usage, including out-of-memory conditions, the\n        spill-to-disk feature, and resource management features.\n      </p></div><div id=\"IMPALA-5605\"><div class=\"hue-doc-title\">Configuration to prevent crashes caused by thread resource limits</div><div><p>\n          Impala could encounter a serious error due to resource usage under very high\n          concurrency. The error message is similar to:\n        </p><div class=\"hue-doc-codeblock\">F0629 08:20:02.956413 29088 llvm-codegen.cc:111] LLVM hit fatal error: Unable to allocate section memory!\nterminate called after throwing an instance of 'boost::exception_detail::clone_impl&lt;boost::exception_detail::error_info_injector&lt;boost::thread_resource_error&gt; &gt;'\n</div><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-5605\" target=\"_blank\">IMPALA-5605</a></p><p><b>Severity:</b> High\n        </p><p><b>Workaround:</b> To prevent such errors, configure each host running an\n          <span class=\"hue-doc-cmdname\">impalad</span> daemon with the following settings:\n        </p><div class=\"hue-doc-codeblock\">echo 2000000 &gt; /proc/sys/kernel/threads-max\necho 2000000 &gt; /proc/sys/kernel/pid_max\necho 8000000 &gt; /proc/sys/vm/max_map_count\n</div><p>\n          Add the following lines in <span class=\"hue-doc-filepath\">/etc/security/limits.conf</span>:\n        </p><div class=\"hue-doc-codeblock\">impala soft nproc 262144\nimpala hard nproc 262144\n</div></div></div><div id=\"drop_table_purge_s3a\"><div class=\"hue-doc-title\"><b>Breakpad minidumps can be very large when the thread count is high</b></div><div><p>\n          The size of the breakpad minidump files grows linearly with the number of threads. By\n          default, each thread adds 8 KB to the minidump size. Minidump files could consume\n          significant disk space when the daemons have a high number of threads.\n        </p><p><b>Workaround:</b> Add\n          <span class=\"hue-doc-systemoutput\">--minidump_size_limit_hint_kb=size</span>\n          to set a soft upper limit on the size of each minidump file. If the minidump file\n          would exceed that limit, Impala reduces the amount of information for each thread from\n          8 KB to 2 KB. (Full thread information is captured for the first 20 threads, then 2 KB\n          per thread after that.) The minidump file can still grow larger than the \"hinted\"\n          size. For example, if you have 10,000 threads, the minidump file can be more than 20\n          MB.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.cloudera.org/browse/IMPALA-3509\" target=\"_blank\">IMPALA-3509</a></p></div></div><div id=\"IMPALA-691\"><div class=\"hue-doc-title\"><b>Process mem limit does not account for the JVM's memory usage</b></div><div><p>\n          Some memory allocated by the JVM used internally by Impala is not counted against the\n          memory limit for the impalad daemon.\n        </p><p><b>Workaround:</b> To monitor overall memory usage, use the top command, or add the\n          memory figures in the Impala web UI <b>/memz</b> tab to JVM memory usage shown on the\n          <b>/metrics</b> tab.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.cloudera.org/browse/IMPALA-691\" target=\"_blank\">IMPALA-691</a></p></div></div></div><div id=\"known_issues_correctness\"><div class=\"hue-doc-title\" id=\"ki_correctness\">Impala Known Issues: Correctness</div><div><p>\n        These issues can cause incorrect or unexpected results from queries. They typically only\n        arise in very specific circumstances.\n      </p></div><div id=\"IMPALA-3094\"><div class=\"hue-doc-title\">Incorrect result due to constant evaluation in query with outer join</div><div><p>\n          An <span class=\"hue-doc-codeph\">OUTER JOIN</span> query could omit some expected result rows due to a\n          constant such as <span class=\"hue-doc-codeph\">FALSE</span> in another join clause. For example:\n        </p><div class=\"hue-doc-codeblock\">explain SELECT 1 FROM alltypestiny a1\n  INNER JOIN alltypesagg a2 ON a1.smallint_col = a2.year AND false\n  RIGHT JOIN alltypes a3 ON a1.year = a1.bigint_col;\n+---------------------------------------------------------+\n| Explain String                                          |\n+---------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=1.00KB VCores=1 |\n|                                                         |\n| 00:EMPTYSET                                             |\n+---------------------------------------------------------+\n</div><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-3094\" target=\"_blank\">IMPALA-3094</a></p><p><b>Severity:</b> High\n        </p></div></div><div id=\"IMPALA-2422\"><div class=\"hue-doc-title\">% escaping does not work correctly when occurs at the end in a LIKE clause</div><div><p>\n          If the final character in the RHS argument of a <span class=\"hue-doc-codeph\">LIKE</span> operator is an\n          escaped <span class=\"hue-doc-codeph\">\\%</span> character, it does not match a <span class=\"hue-doc-codeph\">%</span> final\n          character of the LHS argument.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-2422\" target=\"_blank\">IMPALA-2422</a></p></div></div><div id=\"IMPALA-2603\"><div class=\"hue-doc-title\">Crash: impala::Coordinator::ValidateCollectionSlots</div><div><p>\n          A query could encounter a serious error if includes multiple nested levels of\n          <span class=\"hue-doc-codeph\">INNER JOIN</span> clauses involving subqueries.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-2603\" target=\"_blank\">IMPALA-2603</a></p></div></div></div><div id=\"known_issues_interop\"><div class=\"hue-doc-title\" id=\"ki_interop\">Impala Known Issues: Interoperability</div><div><p>\n        These issues affect the ability to interchange data between Impala and other database\n        systems. They cover areas such as data types and file formats.\n      </p></div><div id=\"hadoop-15720\"><div class=\"hue-doc-title\">Queries Stuck on Failed HDFS Calls and not Timing out</div><div><p> In Impala 3.2 and higher, if the following error appears multiple\n          times in a short duration while running a query, it would mean that\n          the connection between the <span class=\"hue-doc-codeph\">impalad</span> and the HDFS\n          NameNode is in a bad state and hence the <span class=\"hue-doc-codeph\">impalad</span>\n          would have to be restarted: </p><div class=\"hue-doc-codeblock\">\"hdfsOpenFile() for &lt;filename&gt; at backend &lt;hostname:port&gt; failed to finish before the &lt;hdfs_operation_timeout_sec&gt; second timeout \" </div><p>In Impala 3.1 and lower, the same issue would cause Impala to wait for\n          a long time or hang without showing the above error message.</p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HADOOP-15720\" target=\"_blank\">HADOOP-15720</a></p><p><b>Affected Versions:</b> All versions of Impala\n        </p><p><b>Workaround:</b> Restart the <span class=\"hue-doc-codeph\">impalad</span> in the bad state.\n        </p></div></div><div id=\"describe_formatted_avro\"><div class=\"hue-doc-title\">DESCRIBE FORMATTED gives error on Avro table</div><div><p>\n          This issue can occur either on old Avro tables (created prior to Hive 1.1) or when\n          changing the Avro schema file by adding or removing columns. Columns added to the\n          schema file will not show up in the output of the <span class=\"hue-doc-codeph\">DESCRIBE FORMATTED</span>\n          command. Removing columns from the schema file will trigger a\n          <span class=\"hue-doc-codeph\">NullPointerException</span>.\n        </p><p>\n          As a workaround, you can use the output of <span class=\"hue-doc-codeph\">SHOW CREATE TABLE</span> to drop\n          and recreate the table. This will populate the Hive metastore database with the\n          correct column definitions.\n        </p><div class=\"hue-doc-note\"><p>\n            Only use this for external tables, or Impala will remove the data files. In case of\n            an internal table, set it to external first:\n<div class=\"hue-doc-codeblock\">ALTER TABLE table_name SET TBLPROPERTIES('EXTERNAL'='TRUE');\n</div>\n            (The part in parentheses is case sensitive.) Make sure to pick the right choice\n            between internal and external when recreating the table. See\n            <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_tables.xml\" data-doc-anchor-id=\"tables\">Overview of Impala Tables</a> for the differences between internal and\n            external tables.\n          </p></div><p><b>Severity:</b> High\n        </p></div></div><div id=\"flume_writeformat_text\"><div class=\"hue-doc-title\">Configuration needed for Flume to be compatible with Impala</div><div><p>\n          For compatibility with Impala, the value for the Flume HDFS Sink\n          <span class=\"hue-doc-codeph\">hdfs.writeFormat</span> must be set to <span class=\"hue-doc-codeph\">Text</span>, rather than\n          its default value of <span class=\"hue-doc-codeph\">Writable</span>. The <span class=\"hue-doc-codeph\">hdfs.writeFormat</span>\n          setting must be changed to <span class=\"hue-doc-codeph\">Text</span> before creating data files with\n          Flume; otherwise, those files cannot be read by either Impala or Hive.\n        </p><p><b>Resolution:</b> This information has been requested to be added to the upstream\n          Flume documentation.\n        </p></div></div><div id=\"IMPALA-635\"><div class=\"hue-doc-title\">Avro Scanner fails to parse some schemas</div><div><p>\n          The default value in Avro schema must match type of first union type, e.g. if the\n          default value is <span class=\"hue-doc-codeph\">null</span>, then the first type in the\n          <span class=\"hue-doc-codeph\">UNION</span> must be <span class=\"hue-doc-codeph\">\"null\"</span>.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-635\" target=\"_blank\">IMPALA-635</a></p><p><b>Workaround:</b>Swap the order of the fields in the schema specification. For\n          example, use <span class=\"hue-doc-codeph\">[\"null\", \"string\"]</span> instead of <span class=\"hue-doc-codeph\">[\"string\",\n          \"null\"]</span>. Note that the files written with the problematic schema must be\n          rewritten with the new schema because Avro files have embedded schemas.\n        </p></div></div><div id=\"IMPALA-1024\"><div class=\"hue-doc-title\">Impala BE cannot parse Avro schema that contains a trailing semi-colon</div><div><p>\n          If an Avro table has a schema definition with a trailing semicolon, Impala encounters\n          an error when the table is queried.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-1024\" target=\"_blank\">IMPALA-1024</a></p><p><b>Severity:</b> Remove trailing semicolon from the Avro schema.\n        </p></div></div><div id=\"IMPALA-1652\"><div class=\"hue-doc-title\">Incorrect results with basic predicate on CHAR typed column</div><div><p>\n          When comparing a <span class=\"hue-doc-codeph\">CHAR</span> column value to a string literal, the literal\n          value is not blank-padded and so the comparison might fail when it should match.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-1652\" target=\"_blank\">IMPALA-1652</a></p><p><b>Workaround:</b> Use the <span class=\"hue-doc-codeph\">RPAD()</span> function to blank-pad literals\n          compared with <span class=\"hue-doc-codeph\">CHAR</span> columns to the expected length.\n        </p></div></div><div id=\"IMPALA-8953\"><div class=\"hue-doc-title\">Tables and databases sharing same name can cause query\n        failures</div><div><p>A table and a database that share the same name can cause a query\n          failure if the table is not readable by Impala, for example, the table\n          was created in Hive in the Open CSV Serde format. The following\n          exception will return:</p><div class=\"hue-doc-codeblock\">CAUSED BY: TableLoadingException: Unrecognized table type for table</div><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-8953\" target=\"_blank\">IMPALA-8953</a></p><p><b>Workaround:</b> Do not create databases and tables with the same\n          names.</p></div></div></div><div id=\"known_issues_limitations\"><div class=\"hue-doc-title\">Impala Known Issues: Limitations</div><div><p>\n        These issues are current limitations of Impala that require evaluation as you plan how\n        to integrate Impala into your data management workflow.\n      </p></div><div id=\"IMPALA-4551\"><div class=\"hue-doc-title\">Set limits on size of expression trees</div><div><p>\n          Very deeply nested expressions within queries can exceed internal Impala limits,\n          leading to excessive memory usage.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-4551\" target=\"_blank\">IMPALA-4551</a></p><p><b>Severity:</b> High\n        </p><p><b>Workaround:</b> Avoid queries with extremely large expression trees. Setting the\n          query option <span class=\"hue-doc-codeph\">disable_codegen=true</span> may reduce the impact, at a cost of\n          longer query runtime.\n        </p></div></div><div id=\"IMPALA-77\"><div class=\"hue-doc-title\">Impala does not support running on clusters with federated namespaces</div><div><p>\n          Impala does not support running on clusters with federated namespaces. The\n          <span class=\"hue-doc-codeph\">impalad</span> process will not start on a node running such a filesystem\n          based on the <span class=\"hue-doc-codeph\">org.apache.hadoop.fs.viewfs.ViewFs</span> class.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-77\" target=\"_blank\">IMPALA-77</a></p><p><b>Anticipated Resolution:</b> Limitation\n        </p><p><b>Workaround:</b> Use standard HDFS on all Impala nodes.\n        </p></div></div></div><div id=\"known_issues_misc\"><div class=\"hue-doc-title\">Impala Known Issues: Miscellaneous</div><div><p>\n        These issues do not fall into one of the above categories or have not been categorized\n        yet.\n      </p></div><div id=\"IMPALA-2005\"><div class=\"hue-doc-title\">A failed CTAS does not drop the table if the insert fails</div><div><p>\n          If a <span class=\"hue-doc-codeph\">CREATE TABLE AS SELECT</span> operation successfully creates the target\n          table but an error occurs while querying the source table or copying the data, the new\n          table is left behind rather than being dropped.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-2005\" target=\"_blank\">IMPALA-2005</a></p><p><b>Workaround:</b> Drop the new table manually after a failed <span class=\"hue-doc-codeph\">CREATE TABLE AS\n          SELECT</span>.\n        </p></div></div><div id=\"IMPALA-1821\"><div class=\"hue-doc-title\">Casting scenarios with invalid/inconsistent results</div><div><p>\n          Using a <span class=\"hue-doc-codeph\">CAST()</span> function to convert large literal values to smaller\n          types, or to convert special values such as <span class=\"hue-doc-codeph\">NaN</span> or\n          <span class=\"hue-doc-codeph\">Inf</span>, produces values not consistent with other database systems. This\n          could lead to unexpected results from queries.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-1821\" target=\"_blank\">IMPALA-1821</a></p></div></div><div id=\"IMPALA-532\"><div class=\"hue-doc-title\">Impala should tolerate bad locale settings</div><div><p>\n          If the <span class=\"hue-doc-codeph\">LC_*</span> environment variables specify an unsupported locale,\n          Impala does not start.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-532\" target=\"_blank\">IMPALA-532</a></p><p><b>Workaround:</b> Add <span class=\"hue-doc-codeph\">LC_ALL=\"C\"</span> to the environment settings for\n          both the Impala daemon and the Statestore daemon. See\n          <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_config_options.html#config_options\" target=\"_blank\">Modifying Impala Startup Options</a> for details about modifying\n          these environment settings.\n        </p><p><b>Resolution:</b> Fixing this issue would require an upgrade to Boost 1.47 in the\n          Impala distribution.\n        </p></div></div><div id=\"IMP-1203\"><div class=\"hue-doc-title\">Log Level 3 Not Recommended for Impala</div><div><p>\n          The extensive logging produced by log level 3 can cause serious performance overhead\n          and capacity issues.\n        </p><p><b>Workaround:</b> Reduce the log level to its default value of 1, that is,\n          <span class=\"hue-doc-codeph\">GLOG_v=1</span>. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_logging.xml\" data-doc-anchor-id=\"log_levels\">Setting Logging Levels</a> for\n          details about the effects of setting different logging levels.\n        </p></div></div></div><div id=\"known_issues_crash\"><div class=\"hue-doc-title\">Impala Known Issues: Crashes and Hangs</div><div><p>\n        These issues can cause Impala to quit or become unresponsive.\n      </p></div><div id=\"impala-6841\"><div class=\"hue-doc-title\">Unable to view large catalog objects in catalogd Web UI</div><div><p>\n          In <span class=\"hue-doc-codeph\">catalogd</span> Web UI, you can list metadata objects and view their\n          details. These details are accessed via a link and printed to a string formatted using\n          thrift's <span class=\"hue-doc-codeph\">DebugProtocol</span>. Printing large objects (&gt; 1 GB) in Web UI can\n          crash <span class=\"hue-doc-codeph\">catalogd</span>.\n        </p><p><b>Apache Issue:</b><a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-6841\" target=\"_blank\">IMPALA-6841</a></p></div></div></div></div></div>","title":"Known Issues and Workarounds in ImpalaApache Impala Known Issues"}