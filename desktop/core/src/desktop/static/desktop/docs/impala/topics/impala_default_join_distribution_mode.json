{"body":"<div><div id=\"default_join_distribution_mode\"><div class=\"hue-doc-title\">DEFAULT_JOIN_DISTRIBUTION_MODE Query Option</div><div><p>\n      This option determines the join distribution that Impala uses when any of the tables\n      involved in a join query is missing statistics.\n    </p><p>\n      Impala optimizes join queries based on the presence of table statistics,\n      which are produced by the Impala <span class=\"hue-doc-codeph\">COMPUTE STATS</span> statement.\n      By default, when a table involved in the join query does not have statistics,\n      Impala uses the <q>broadcast</q> technique that transmits the entire contents\n      of the table to all executor nodes participating in the query. If one table\n      involved in a join has statistics and the other does not, the table without\n      statistics is broadcast. If both tables are missing statistics, the table\n      that is referenced second in the join order is broadcast. This behavior\n      is appropriate when the table involved is relatively small, but can lead to\n      excessive network, memory, and CPU overhead if the table being broadcast is\n      large.\n    </p><p>\n      Because Impala queries frequently involve very large tables, and suboptimal\n      joins for such tables could result in spilling or out-of-memory errors,\n      the setting <span class=\"hue-doc-codeph\">DEFAULT_JOIN_DISTRIBUTION_MODE=SHUFFLE</span> lets you\n      override the default behavior. The shuffle join mechanism divides the corresponding rows\n      of each table involved in a join query using a hashing algorithm, and transmits\n      subsets of the rows to other nodes for processing. Typically, this kind of join is\n      more efficient for joins between large tables of similar size.\n    </p><p>\n      The setting <span class=\"hue-doc-codeph\">DEFAULT_JOIN_DISTRIBUTION_MODE=SHUFFLE</span> is\n      recommended when setting up and deploying new clusters, because it is less likely\n      to result in serious consequences such as spilling or out-of-memory errors if\n      the query plan is based on incomplete information. This setting is not the default,\n      to avoid changing the performance characteristics of join queries for clusters that\n      are already tuned for their existing workloads.\n    </p><p id=\"type_integer\"><b>Type:</b> integer\n      </p><p>\n      The allowed values are <span class=\"hue-doc-codeph\">BROADCAST</span> (equivalent to 0)\n      or <span class=\"hue-doc-codeph\">SHUFFLE</span> (equivalent to 1).\n    </p><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      The following examples demonstrate appropriate scenarios for each\n      setting of this query option.\n    </p><div class=\"hue-doc-codeblock\">-- Create a billion-row table.\ncreate table big_table stored as parquet\n  as select * from huge_table limit 1e9;\n\n-- For a big table with no statistics, the\n-- shuffle join mechanism is appropriate.\nset default_join_distribution_mode=shuffle;\n\n...join queries involving the big table...\n</div><div class=\"hue-doc-codeblock\">-- Create a hundred-row table.\ncreate table tiny_table stored as parquet\n  as select * from huge_table limit 100;\n\n-- For a tiny table with no statistics, the\n-- broadcast join mechanism is appropriate.\nset default_join_distribution_mode=broadcast;\n\n...join queries involving the tiny table...\n</div><div class=\"hue-doc-codeblock\">compute stats tiny_table;\ncompute stats big_table;\n\n-- Once the stats are computed, the query option has\n-- no effect on join queries involving these tables.\n-- Impala can determine the absolute and relative sizes\n-- of each side of the join query by examining the\n-- row size, cardinality, and so on of each table.\n\n...join queries involving both of these tables...\n</div><p id=\"related_info\"><b>Related information:</b></p><p><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_compute_stats.xml\" data-doc-anchor-id=\"compute_stats\">COMPUTE STATS Statement</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_joins.xml\" data-doc-anchor-id=\"joins\">Joins in Impala SELECT Statements</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_perf_joins.xml\" data-doc-anchor-id=\"perf_joins\">Performance Considerations for Join Queries</a></p></div></div></div>","title":"DEFAULT_JOIN_DISTRIBUTION_MODE Query Option"}