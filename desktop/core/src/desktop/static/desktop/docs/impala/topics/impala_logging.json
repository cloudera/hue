{"body":"<div><div id=\"logging\"><div class=\"hue-doc-title\">Using Impala Logging</div><div><p> The Impala logs record information about: </p><ul><li> Any errors Impala encountered. If Impala experienced a serious error during startup, you\n        must diagnose and troubleshoot that problem before you can do anything further with Impala. </li><li> How Impala is configured. </li><li> Jobs Impala has completed. </li></ul><div class=\"hue-doc-note\"><p> Formerly, the logs contained the query profile for each query, showing low-level details\n        of how the work is distributed among nodes and how intermediate and final results are\n        transmitted across the network. To save space, those query profiles are now stored in\n        zlib-compressed files in <span class=\"hue-doc-filepath\">/var/log/impala/profiles</span>. You can access them\n        through the Impala web user interface. For example, at\n            <span class=\"hue-doc-codeph\">http://<span class=\"hue-doc-varname\">impalad-node-hostname</span>:25000/queries</span>, each\n        query is followed by a <span class=\"hue-doc-codeph\">Profile</span> link leading to a page showing extensive\n        analytical data for the query execution. </p><p> The auditing feature introduced in Impala 1.1.1 produces a separate set of\n        audit log files when enabled. See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_auditing.html#auditing\" target=\"_blank\">Auditing Impala Operations</a> for details. </p><p> In Impala 2.9 and higher, you can control\n        how many audit event log files are kept on each host through the\n          <span class=\"hue-doc-codeph\">‑‑max_audit_event_log_files</span> startup option for the\n          <span class=\"hue-doc-cmdname\">impalad</span> daemon, similar to the\n          <span class=\"hue-doc-codeph\">‑‑max_log_files</span> option for regular log files. </p><p> The lineage feature introduced in Impala 2.2.0 produces a separate lineage log\n        file when enabled. See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_lineage.html#lineage\" target=\"_blank\">Viewing Lineage Information for Impala Data</a> for details. </p></div><p/></div><div id=\"logs_details\"><div class=\"hue-doc-title\">Locations and Names of Impala Log Files</div><div><ul><li> By default, the log files are under the directory <span class=\"hue-doc-filepath\">/var/log/impala</span>.\n          To change log file locations, modify the defaults file described in <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_processes.html#processes\" target=\"_blank\">Starting Impala</a>. </li><li> The significant files for the <span class=\"hue-doc-codeph\">impalad</span> process are\n            <span class=\"hue-doc-filepath\">impalad.INFO</span>, <span class=\"hue-doc-filepath\">impalad.WARNING</span>, and\n            <span class=\"hue-doc-filepath\">impalad.ERROR</span>. You might also see a file\n            <span class=\"hue-doc-filepath\">impalad.FATAL</span>, although this is only present in rare conditions. </li><li> The significant files for the <span class=\"hue-doc-codeph\">statestored</span> process are\n            <span class=\"hue-doc-filepath\">statestored.INFO</span>, <span class=\"hue-doc-filepath\">statestored.WARNING</span>, and\n            <span class=\"hue-doc-filepath\">statestored.ERROR</span>. You might also see a file\n            <span class=\"hue-doc-filepath\">statestored.FATAL</span>, although this is only present in rare\n          conditions. </li><li> The significant files for the <span class=\"hue-doc-codeph\">catalogd</span> process are\n            <span class=\"hue-doc-filepath\">catalogd.INFO</span>, <span class=\"hue-doc-filepath\">catalogd.WARNING</span>, and\n            <span class=\"hue-doc-filepath\">catalogd.ERROR</span>. You might also see a file\n            <span class=\"hue-doc-filepath\">catalogd.FATAL</span>, although this is only present in rare conditions. </li><li> Examine the <span class=\"hue-doc-codeph\">.INFO</span> files to see configuration settings for the\n          processes. </li><li> Examine the <span class=\"hue-doc-codeph\">.WARNING</span> files to see all kinds of problem information,\n          including such things as suboptimal settings and also serious runtime errors. </li><li> Examine the <span class=\"hue-doc-codeph\">.ERROR</span> and/or <span class=\"hue-doc-codeph\">.FATAL</span> files to see only\n          the most serious errors, if the processes crash, or queries fail to complete. These\n          messages are also in the <span class=\"hue-doc-codeph\">.WARNING</span> file. </li><li> A new set of log files is produced each time the associated daemon is restarted. These\n          log files have long names including a timestamp. The <span class=\"hue-doc-codeph\">.INFO</span>,\n            <span class=\"hue-doc-codeph\">.WARNING</span>, and <span class=\"hue-doc-codeph\">.ERROR</span> files are physically represented\n          as symbolic links to the latest applicable log files. </li></ul><p> Impala stores information using the <span class=\"hue-doc-codeph\">glog_v</span> logging system. You will see\n        some messages referring to C++ file names. Logging is affected by: </p><ul><li> The <span class=\"hue-doc-codeph\">GLOG_v</span> environment variable specifies which types of messages are\n          logged. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_logging.xml\" data-doc-anchor-id=\"log_levels\">Setting Logging Levels</a> for details. </li><li> The <span class=\"hue-doc-codeph\">‑‑logbuflevel</span> startup flag for the\n            <span class=\"hue-doc-cmdname\">impalad</span> daemon specifies how often the log information is written to\n          disk. The default is 0, meaning that the log is immediately flushed to disk when Impala\n          outputs an important messages such as a warning or an error, but less important messages\n          such as informational ones are buffered in memory rather than being flushed to disk\n          immediately. </li></ul></div></div><div id=\"logs_rotate\"><div class=\"hue-doc-title\">Rotating Impala Logs</div><div><p> Impala periodically switches the physical files representing the current log files, after\n        which it is safe to remove the old files if they are no longer needed. </p><p> Impala can automatically remove older unneeded log files, a feature known as <span class=\"hue-doc-term\">log\n          rotation</span>. </p><p> In Impala 2.2 and higher, the <span class=\"hue-doc-codeph\">‑‑max_log_files</span> configuration\n        option specifies how many log files to keep at each severity level (<span class=\"hue-doc-codeph\">INFO</span>,\n          <span class=\"hue-doc-codeph\">WARNING</span>, <span class=\"hue-doc-codeph\">ERROR</span>, and <span class=\"hue-doc-codeph\">FATAL</span>). You can\n        specify an appropriate setting for each Impala-related daemon (<span class=\"hue-doc-cmdname\">impalad</span>,\n          <span class=\"hue-doc-cmdname\">statestored</span>, and <span class=\"hue-doc-cmdname\">catalogd</span>). <ul><li> A value of 0 preserves all log files, in which case you would set up set up manual\n            log rotation using your Linux tool or technique of choice. </li><li> A value of 1 preserves only the very latest log file. </li><li> The default value is 10. </li></ul></p><p> Impala checks to see if any old logs need to be removed based on the interval specified in\n        the <span class=\"hue-doc-codeph\">‑‑logbufsecs</span> setting, every 5 seconds by default. </p><p> For some log levels, Impala logs are first temporarily buffered in memory and only written\n        to disk periodically. The <span class=\"hue-doc-codeph\">‑‑logbufsecs</span> setting controls the\n        maximum time that log messages are buffered for. For example, with the default value of 5\n        seconds, there may be up to a 5 second delay before a logged message shows up in the log\n        file. </p><p> It is not recommended that you set <span class=\"hue-doc-codeph\">‑‑logbufsecs</span> to 0 as the\n        setting makes the Impala daemon to spin in the thread that tries to delete old log files. </p></div></div><div id=\"dynamic_log_levels\"><div class=\"hue-doc-title\">Changing Log Levels Dynamically</div><div><p>For debugging purposes you may be adjusting the logging configuration for Catalog and\n        impalad servers. This required restarting the services. Impala supports adjusting the log\n        levels dynamically without the need to restart the server. There is a\n          <span class=\"hue-doc-codeph\">/log_level</span> tab in the debug page of all Impala servers. You can query the\n          <span class=\"hue-doc-codeph\">log4j</span> log level of <span class=\"hue-doc-codeph\">root</span> or\n          <span class=\"hue-doc-codeph\">org.apache.impala</span> by using the <span class=\"hue-doc-codeph\">Get Java Log Level</span>\n        button. Also you can change the <span class=\"hue-doc-codeph\">vlog/log4j</span> levels to any supported levels\n        of logging. You can select the log level using the <span class=\"hue-doc-codeph\">LOG LEVEL</span> drop down box.\n        You also have an option to restore the log levels to their original configuration by using\n        the <span class=\"hue-doc-codeph\">RESET</span> button.</p><p>Here is the format of a Glog:</p><div class=\"hue-doc-codeblock\">${level}${month}${day} HH:MM:SS.${us} ${thread-id} ${source-file}:${line}] ${query-id}] ${message}</div><p>where</p><ul id=\"ul_yqb_ynv_plb\"><li>${level} — Log Levels; displays the levels as <span class=\"hue-doc-codeph\">I</span> for\n            <span class=\"hue-doc-codeph\">INFO</span>, <span class=\"hue-doc-codeph\">W</span> for <span class=\"hue-doc-codeph\">WARNING</span>,\n            <span class=\"hue-doc-codeph\">E</span> for <span class=\"hue-doc-codeph\">ERROR</span>, <span class=\"hue-doc-codeph\">F</span> for\n            <span class=\"hue-doc-codeph\">FATAL.</span></li><li>${month}${day} — Month and Date. </li><li>HH:MM:SS — Hours, Minutes, Seconds. </li><li>${us} — Microseconds. </li><li>${thread-id} — TID of the thread. </li><li>${source-file}:${line}] — File name and line number. </li><li>${query-id}] — An unique id for each and every query that is run in Impala. </li><li>${message} — Actual log message.</li></ul></div></div><div id=\"logs_debug\"><div class=\"hue-doc-title\">Reviewing Impala Logs</div><div><p> By default, the Impala log is stored at <span class=\"hue-doc-codeph\">/var/log/impalad/</span>. The most\n        comprehensive log, showing informational, warning, and error messages, is in the file name\n          <span class=\"hue-doc-filepath\">impalad.INFO</span>. View log file contents by using the web interface or by\n        examining the contents of the log file. (When you examine the logs through the file system,\n        you can troubleshoot problems by reading the <span class=\"hue-doc-filepath\">impalad.WARNING</span> and/or\n          <span class=\"hue-doc-filepath\">impalad.ERROR</span> files, which contain the subsets of messages indicating\n        potential problems.) </p><div class=\"hue-doc-note\"><p> The web interface limits the amount of logging information displayed. To view every log\n          entry, access the log files directly through the file system. </p></div><p> You can view the contents of the <span class=\"hue-doc-codeph\">impalad.INFO</span> log file in the file\n        system. With the default configuration settings, the start of the log file appears as\n        follows: </p><div class=\"hue-doc-codeblock\">[user@example impalad]$ pwd\n/var/log/impalad\n[user@example impalad]$ more impalad.INFO\nLog file created at: 2013/01/07 08:42:12\nRunning on machine: impala.example.com\nLog line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg\nI0107 08:42:12.292155 14876 daemon.cc:34] impalad version 0.4 RELEASE (build 9d7fadca0461ab40b9e9df8cdb47107ec6b27cff)\nBuilt on Fri, 21 Dec 2012 12:55:19 PST\nI0107 08:42:12.292484 14876 daemon.cc:35] Using hostname: impala.example.com\nI0107 08:42:12.292706 14876 logging.cc:76] Flags (see also /varz are on debug webserver):\n--dump_ir=false\n--module_output=\n--be_port=22000\n--classpath=\n--hostname=impala.example.com</div><div class=\"hue-doc-note\"> The preceding example shows only a small part of the log file. Impala log files are\n        often several megabytes in size. </div></div></div><div id=\"log_format\"><div class=\"hue-doc-title\">Understanding Impala Log Contents</div><div><p> The logs store information about Impala startup options. This information appears once for\n        each time Impala is started and may include: </p><ul><li> Machine name. </li><li> Impala version number. </li><li> Flags used to start Impala. </li><li> CPU information. </li><li> The number of available disks. </li></ul></div></div><div id=\"log_levels\"><div class=\"hue-doc-title\">Setting Logging Levels</div><div><p> Impala uses the GLOG system, which supports three logging levels. You can adjust logging\n        levels by exporting variable settings. To change logging settings manually, use a command\n        similar to the following on each node before starting <span class=\"hue-doc-codeph\">impalad</span>: </p><div class=\"hue-doc-codeblock\">export GLOG_v=1</div><div class=\"hue-doc-note\"> For performance reasons, do not enable the most verbose logging level of 3 unless there\n        is no other alternative for troubleshooting. </div><p> For more information on how to configure GLOG, including how to set variable logging\n        levels for different system components, see <a class=\"hue-doc-external-link\" href=\"https://github.com/google/glog\" target=\"_blank\">documentation for the\n          glog project on github</a>. </p><div class=\"hue-doc-section\" id=\"loglevels_details\"><div class=\"hue-doc-title\">Understanding What is Logged at Different Logging Levels</div><p> As logging levels increase, the categories of information logged are cumulative. For\n          example, GLOG_v=2 records everything GLOG_v=1 records, as well as additional information. </p><p> Increasing logging levels imposes performance overhead and increases log size. Where\n          practical, use GLOG_v=1 for most cases: this level has minimal performance impact but\n          still captures useful troubleshooting information. </p><p> Additional information logged at each level is as follows: </p><ul><li> GLOG_v=1 - The default level. Logs information about each connection and query that\n            is initiated to an <span class=\"hue-doc-codeph\">impalad</span> instance, including runtime profiles. </li><li> GLOG_v=2 - Everything from the previous level plus information for each RPC\n            initiated. This level also records query execution progress information, including\n            details on each file that is read. </li><li> GLOG_v=3 - Everything from the previous level plus logging of every row that is read.\n            This level is only applicable for the most serious troubleshooting and tuning scenarios,\n            because it can produce exceptionally large and detailed log files, potentially leading\n            to its own set of performance and capacity problems. </li></ul></div></div></div><div id=\"redaction\"><div class=\"hue-doc-title\">Redacting Sensitive Information from Impala Log Files</div><div><p><span class=\"hue-doc-term\">Log redaction</span> is a security feature that prevents sensitive information from\n        being displayed in locations used by administrators for monitoring and troubleshooting, such\n        as log files and the Impala debug web user interface. You configure regular expressions that\n        match sensitive types of information processed by your system, such as credit card numbers\n        or tax IDs, and literals matching these patterns are obfuscated wherever they would normally\n        be recorded in log files or displayed in administration or debugging user interfaces. </p><p> In a security context, the log redaction feature is complementary to the Ranger\n        authorization framework. Ranger prevents unauthorized users from being able to directly\n        access table data. Redaction prevents administrators or support personnel from seeing the\n        smaller amounts of sensitive or personally identifying information (PII) that might appear\n        in queries issued by those authorized users. </p><p> See \n    the documentation for your Apache Hadoop distribution\n   for details about how to enable this feature and set up\n        the regular expressions to detect and redact sensitive information within SQL statement\n        text. </p></div></div></div></div>","title":"Using Impala Logging"}