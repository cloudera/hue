{"body":"<div><div id=\"with\"><div class=\"hue-doc-title\">WITH Clause</div><div><p>\n      A clause that can be added before a <span class=\"hue-doc-codeph\">SELECT</span> statement, to define aliases for complicated\n      expressions that are referenced multiple times within the body of the <span class=\"hue-doc-codeph\">SELECT</span>. Similar to\n      <span class=\"hue-doc-codeph\">CREATE VIEW</span>, except that the table and column names defined in the <span class=\"hue-doc-codeph\">WITH</span>\n      clause do not persist after the query finishes, and do not conflict with names used in actual tables or\n      views. Also known as <q>subquery factoring</q>.\n    </p><p>\n      You can rewrite a query using subqueries to work the same as with the <span class=\"hue-doc-codeph\">WITH</span> clause. The\n      purposes of the <span class=\"hue-doc-codeph\">WITH</span> clause are:\n    </p><ul><li>\n        Convenience and ease of maintenance from less repetition with the body of the query. Typically used with\n        queries involving <span class=\"hue-doc-codeph\">UNION</span>, joins, or aggregation functions where the similar complicated\n        expressions are referenced multiple times.\n      </li><li>\n        SQL code that is easier to read and understand by abstracting the most complex part of the query into a\n        separate block.\n      </li><li>\n        Improved compatibility with SQL from other database systems that support the same clause (primarily Oracle\n        Database).\n        <div class=\"hue-doc-note\"><p>\n            The Impala <span class=\"hue-doc-codeph\">WITH</span> clause does not support recursive queries in the\n            <span class=\"hue-doc-codeph\">WITH</span>, which is supported in some other database systems.\n          </p></div></li></ul><p id=\"sql1999\"><b>Standards compliance:</b> Introduced in\n        <a class=\"hue-doc-external-link\" href=\"http://en.wikipedia.org/wiki/SQL:1999\" target=\"_blank\">SQL:1999</a>.\n      </p><p id=\"example_blurb\"><b>Examples:</b></p><div class=\"hue-doc-codeblock\">-- Define 2 subqueries that can be referenced from the body of a longer query.\nwith t1 as (select 1), t2 as (select 2) insert into tab select * from t1 union all select * from t2;\n\n-- Define one subquery at the outer level, and another at the inner level as part of the\n-- initial stage of the UNION ALL query.\nwith t1 as (select 1) (with t2 as (select 2) select * from t2) union all select * from t1;</div></div></div></div>","title":"WITH Clause"}