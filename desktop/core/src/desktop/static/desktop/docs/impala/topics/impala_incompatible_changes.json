{"body":"<div><div id=\"incompatible_changes\"><div class=\"hue-doc-title\"><span class=\"hue-doc-ph\">Incompatible Changes and Limitations in\n      Apache Impala</span><span class=\"hue-doc-ph\">Apache Impala Incompatible\n      Changes and Limitations</span></div><div><p> The Impala version covered by this documentation library contains the\n      following incompatible changes. These are things such as file format\n      changes, removed features, or changes to implementation, default\n      configuration, dependencies, or prerequisites that could cause issues\n      during or after an Impala upgrade. </p><p> Even added SQL statements or clauses can produce incompatibilities, if\n      you have databases, tables, or columns whose names conflict with the new\n      keywords. </p><p/></div><div id=\"incompatible_changes_400x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 4.0.x</div><div><p> For the full list of incompatible changes introduced in this release,\n        see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/release-notes-4.0.html\" target=\"_blank\">release notes for Impala 4.0</a>.\n      </p></div></div><div id=\"incompatible_changes_340x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 3.4.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-3.4.html\" target=\"_blank\">changelog for Impala 3.4</a>. <ul><li>To optimize query performance, Impala planner uses the value of\n            the <span class=\"hue-doc-codeph\">fs.s3a.block.size</span> startup flag when calculating\n            the split size on non-block based stores, e.g. S3, ADLS, etc.\n            Starting in this release, Impala planner uses the\n              <span class=\"hue-doc-codeph\">PARQUET_OBJECT_STORE_SPLIT_SIZE</span> query option to\n            get the Parquet file format specific split size.<p>For Parquet\n              files, the <span class=\"hue-doc-codeph\">fs.s3a.block.size</span> startup flag is no\n              longer used.</p><p>The default value of the\n                <span class=\"hue-doc-codeph\">PARQUET_OBJECT_STORE_SPLIT_SIZE</span> query option is\n              256 MB.</p></li></ul></p></div></div><div id=\"incompatible_changes_330x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 3.3.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-3.3.html\" target=\"_blank\">changelog for Impala 3.3</a>. <ul><li>Default file format changed to Parquet<p>When you create a table,\n              the default format for that table data is now Parquet.</p><p>For\n              backward compatibility, you can use the DEFAULT_FILE_FORMAT query\n              option to set the default file format to the previous default,\n              text, or other formats.</p></li></ul></p></div></div><div id=\"incompatible_changes_320x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 3.2.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-3.2.html\" target=\"_blank\">changelog for Impala 3.2</a>. </p><ul><li>The Port change for the <span class=\"hue-doc-codeph\">SHUTDOWN</span> command<p>The\n              <span class=\"hue-doc-codeph\">SHUTDOWN</span> command for shutting down a remote\n            server used the backend port in Impala 3.1. Starting in Impala 3.2,\n            the command uses the KRPC port, e.g.<span class=\"hue-doc-codeph\">\n              :shutdown('host100:27000')</span>.</p></li></ul></div></div><div id=\"incompatible_changes_310x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 3.1.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-3.1.html\" target=\"_blank\">changelog for Impala 3.1</a>. </p></div></div><div id=\"incompatible_changes_300x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 3.0.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-3.0.html\" target=\"_blank\">changelog for Impala 3.0</a>. </p></div></div><div id=\"incompatible_changes_212x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.12.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-2.12.html\" target=\"_blank\">changelog for Impala 2.12</a>. </p></div></div><div id=\"incompatible_changes_211x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.11.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-2.11.html\" target=\"_blank\">changelog for Impala 2.11</a>. </p></div></div><div id=\"incompatible_changes_210x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.10.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-2.10.html\" target=\"_blank\">changelog for Impala 2.10</a>. </p></div></div><div id=\"incompatible_changes_29x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.9.x</div><div><p> For the full list of issues closed in this release, including any that\n        introduce behavior changes or incompatibilities, see the <a class=\"hue-doc-external-link\" href=\"https://impala.apache.org/docs/changelog-2.9.html\" target=\"_blank\">changelog for Impala 2.9</a>. </p></div></div><div id=\"incompatible_changes_28x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.8.x</div><div><ul><li><p> Llama support is removed completely from Impala.\n            Related flags (<span class=\"hue-doc-codeph\">--enable_rm</span>) and query options (such\n            as <span class=\"hue-doc-codeph\">V_CPU_CORES</span>) remain but do not have any effect. </p><p> If <span class=\"hue-doc-codeph\">--enable_rm</span> is passed to\n            Impala, a warning is printed to the log on startup. </p></li><li><p> The syntax related to Kudu tables includes a number of\n            new reserved words, such as <span class=\"hue-doc-codeph\">COMPRESSION</span>,\n              <span class=\"hue-doc-codeph\">DEFAULT</span>, and <span class=\"hue-doc-codeph\">ENCODING</span>, that\n            might conflict with names of existing tables, columns, or other\n            identifiers from older Impala versions. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_reserved_words.xml\" data-doc-anchor-id=\"reserved_words\">Impala Reserved Words</a> for the full\n            list of reserved words. </p></li><li><p> The DDL syntax for Kudu tables, particularly in the\n              <span class=\"hue-doc-codeph\">CREATE TABLE</span> statement, is different from the\n            special <span class=\"hue-doc-codeph\">impala_next</span> fork that was previously used\n            for accessing Kudu tables from Impala: </p><ul><li><p> The <span class=\"hue-doc-codeph\">DISTRIBUTE BY</span> clause is now\n                  <span class=\"hue-doc-codeph\">PARTITIONED BY</span>. </p></li><li><p> The <span class=\"hue-doc-codeph\">INTO <span class=\"hue-doc-varname\">N</span> BUCKETS</span> clause\n                is now <span class=\"hue-doc-codeph\">PARTITIONS <span class=\"hue-doc-varname\">N</span></span>. </p></li><li><p> The <span class=\"hue-doc-codeph\">SPLIT ROWS</span> clause is replaced by\n                different syntax for specifying the ranges covered by each\n                partition. </p></li></ul></li><li><p> The <span class=\"hue-doc-codeph\">DESCRIBE</span> output for Kudu tables includes\n            several extra columns. </p></li><li><p> Non-primary-key columns can contain\n              <span class=\"hue-doc-codeph\">NULL</span> values by default. The <span class=\"hue-doc-codeph\">SHOW CREATE\n              TABLE</span> output for these columns displays the\n              <span class=\"hue-doc-codeph\">NULL</span> attribute. There was a period during early\n            experimental versions of Impala + Kudu where non-primary-key columns\n            had the <span class=\"hue-doc-codeph\">NOT NULL</span> attribute by default. </p></li><li><p> The <span class=\"hue-doc-codeph\">IGNORE</span> keyword that\n            was present in early experimental versions of Impala + Kudu is no\n            longer present. The behavior of the <span class=\"hue-doc-codeph\">IGNORE</span> keyword\n            is now the default: DML statements continue with warnings, instead\n            of failing with errors, if they encounter conditions such as\n              <q>primary key already exists</q> for an <span class=\"hue-doc-codeph\">INSERT</span>\n            statement or <q>primary key already deleted</q> for a\n              <span class=\"hue-doc-codeph\">DELETE</span> statement. </p></li><li><p> The replication factor for Kudu tables must be\n            an odd number. </p></li><li><p> A UDF compiled into an LLVM IR bitcode module\n              (<span class=\"hue-doc-codeph\">.bc</span>) might encounter a runtime error when native\n            code generation is turned off by setting the query option\n              <span class=\"hue-doc-codeph\">DISABLE_CODEGEN=1</span>. This issue also applies when\n            running a built-in or native UDF with more than 20 arguments. See\n              <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-4432\" target=\"_blank\">IMPALA-4432</a> for details. As a\n            workaround, either turn native code generation back on with the\n            query option <span class=\"hue-doc-codeph\">DISABLE_CODEGEN=0</span>, or use the regular\n            UDF compilation path that does not produce an IR module. </p></li></ul></div></div><div id=\"incompatible_changes_27x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.7.x</div><div><ul><li><p> Bug fixes related to parsing of\n            floating-point values (IMPALA-1731 and IMPALA-3868) can change the\n            results of casting strings that represent invalid floating-point\n            values. For example, formerly a string value beginning or ending\n            with <span class=\"hue-doc-codeph\">inf</span>, such as <span class=\"hue-doc-codeph\">1.23inf</span> or\n              <span class=\"hue-doc-codeph\">infinite</span>, now are converted to\n              <span class=\"hue-doc-codeph\">NULL</span> when interpreted as a floating-point value.\n            Formerly, they were interpreted as the special <q>infinity</q> value\n            when converting from string to floating-point. Similarly, now only\n            the string <span class=\"hue-doc-codeph\">NaN</span> (case-sensitive) is interpreted as\n            the special <q>not a number</q> value. String values containing\n            multiple dots, such as <span class=\"hue-doc-codeph\">3..141</span> or\n              <span class=\"hue-doc-codeph\">3.1.4.1</span>, are now interpreted as\n              <span class=\"hue-doc-codeph\">NULL</span> rather than being converted to valid\n            floating-point values. </p></li></ul></div></div><div id=\"incompatible_changes_26x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.6.x</div><div><ul><li><p> The default for the <span class=\"hue-doc-codeph\">RUNTIME_FILTER_MODE</span>\n            query option is changed to <span class=\"hue-doc-codeph\">GLOBAL</span> (the highest\n            setting). </p></li><li><p> The <span class=\"hue-doc-codeph\">RUNTIME_BLOOM_FILTER_SIZE</span> setting is now only\n            used as a fallback if statistics are not available; otherwise,\n            Impala uses the statistics to estimate the appropriate size to use\n            for each filter. </p></li><li><p> Admission control and dynamic resource pools are\n            enabled by default. When upgrading from an earlier release, you must\n            turn on these settings yourself if they are not already enabled. See\n              <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_admission.xml\" data-doc-anchor-id=\"admission_control\">Admission Control and Query Queuing</a> for details\n            about admission control. </p></li><li><p> Impala reserves some new keywords, in preparation for support for\n            Kudu syntax: <span class=\"hue-doc-codeph\">buckets</span>, <span class=\"hue-doc-codeph\">delete</span>,\n              <span class=\"hue-doc-codeph\">distribute</span>, <span class=\"hue-doc-codeph\">hash</span>,\n              <span class=\"hue-doc-codeph\">ignore</span>, <span class=\"hue-doc-codeph\">split</span>, and\n              <span class=\"hue-doc-codeph\">update</span>. </p></li><li><p> For Kerberized clusters, the Catalog service now\n            uses the Kerberos principal instead of the operating sytem user that\n            runs the <span class=\"hue-doc-cmdname\">catalogd</span> daemon. This eliminates the\n            requirement to configure a\n              <span class=\"hue-doc-codeph\">hadoop.user.group.static.mapping.overrides</span>\n            setting to put the OS user into the Sentry administrative group, on\n            clusters where the principal and the OS user name for this user are\n            different. </p></li><li><p> The mechanism for interpreting <span class=\"hue-doc-codeph\">DECIMAL</span> literals\n            is improved, no longer going through an intermediate conversion step\n            to <span class=\"hue-doc-codeph\">DOUBLE</span>: </p><ul><li><p> Casting a <span class=\"hue-doc-codeph\">DECIMAL</span> value to\n                  <span class=\"hue-doc-codeph\">TIMESTAMP</span><span class=\"hue-doc-codeph\">DOUBLE</span> produces a more precise value for the\n                  <span class=\"hue-doc-codeph\">TIMESTAMP</span> than formerly. </p></li><li><p> Certain function calls involving\n                  <span class=\"hue-doc-codeph\">DECIMAL</span> literals now succeed, when formerly\n                they failed due to lack of a function signature with a\n                  <span class=\"hue-doc-codeph\">DOUBLE</span> argument. </p></li></ul></li><li><p> Improved type accuracy for <span class=\"hue-doc-codeph\">CASE</span>\n            return values. If all <span class=\"hue-doc-codeph\">WHEN</span> clauses of the\n              <span class=\"hue-doc-codeph\">CASE</span> expression are of <span class=\"hue-doc-codeph\">CHAR</span>\n            type, the final result is also <span class=\"hue-doc-codeph\">CHAR</span> instead of\n            being converted to <span class=\"hue-doc-codeph\">STRING</span>. </p></li><li><p id=\"IMPALA-3662\">\n        The initial release of Impala 2.5 sometimes has a higher peak\n        memory usage than in previous releases while reading Parquet files. The following query\n        options might help to reduce memory consumption in the Parquet scanner:\n        <ul><li>\n            Reduce the number of scanner threads, for example: <span class=\"hue-doc-codeph\">set\n            num_scanner_threads=30</span></li><li>\n            Reduce the batch size, for example: <span class=\"hue-doc-codeph\">set batch_size=512</span></li><li>\n            Increase the memory limit, for example: <span class=\"hue-doc-codeph\">set mem_limit=64g</span></li></ul>\n        You can track the status of the fix for this issue at\n        <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-3662\" target=\"_blank\">IMPALA-3662</a>.\n      </p></li><li><p> The <span class=\"hue-doc-codeph\">S3_SKIP_INSERT_STAGING</span> query option, which is\n            enabled by default, increases the speed of <span class=\"hue-doc-codeph\">INSERT</span>\n            operations for S3 tables. The speedup applies to regular\n              <span class=\"hue-doc-codeph\">INSERT</span>, but not <span class=\"hue-doc-codeph\">INSERT\n            OVERWRITE</span>. The tradeoff is the possibility of inconsistent\n            output files left behind if a node fails during\n              <span class=\"hue-doc-codeph\">INSERT</span> execution. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_s3_skip_insert_staging.xml\" data-doc-anchor-id=\"s3_skip_insert_staging\">S3_SKIP_INSERT_STAGING Query Option (Impala 2.6 or higher only)</a>\n            for details. </p></li></ul><p> Certain features are turned off by default, to avoid regressions or\n        unexpected behavior following an upgrade. Consider turning on these\n        features after suitable testing: </p><ul><li><p> Impala now recognizes the\n              <span class=\"hue-doc-codeph\">auth_to_local</span> setting, specified through the HDFS\n            configuration setting\n            <span class=\"hue-doc-codeph\">hadoop.security.auth_to_local</span>. This feature is\n            disabled by default; to enable it, specify\n              <span class=\"hue-doc-codeph\">--load_auth_to_local_rules=true</span> in the\n              <span class=\"hue-doc-cmdname\">impalad</span> configuration settings. </p></li><li><p> A new query option,\n              <span class=\"hue-doc-codeph\">PARQUET_ANNOTATE_STRINGS_UTF8</span>, makes Impala\n            include the <span class=\"hue-doc-codeph\">UTF-8</span> annotation metadata for\n              <span class=\"hue-doc-codeph\">STRING</span>, <span class=\"hue-doc-codeph\">CHAR</span>, and\n              <span class=\"hue-doc-codeph\">VARCHAR</span> columns in Parquet files created by\n              <span class=\"hue-doc-codeph\">INSERT</span> or <span class=\"hue-doc-codeph\">CREATE TABLE AS SELECT</span>\n            statements. </p></li><li><p> A new query option,\n              <span class=\"hue-doc-codeph\">PARQUET_FALLBACK_SCHEMA_RESOLUTION</span>, lets Impala\n            locate columns within Parquet files based on column name rather than\n            ordinal position. This enhancement improves interoperability with\n            applications that write Parquet files with a different order or\n            subset of columns than are used in the Impala table. </p></li></ul></div></div><div id=\"incompatible_changes_25x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.5.x</div><div><ul><li><p> The admission control default limit for concurrent queries (the\n              <div class=\"hue-doc-uicontrol\">max requests</div> setting) is now unlimited\n            instead of 200. </p></li><li><p> Multiplying a mixture of\n              <span class=\"hue-doc-codeph\">DECIMAL</span> and <span class=\"hue-doc-codeph\">FLOAT</span> or\n              <span class=\"hue-doc-codeph\">DOUBLE</span> values now returns <span class=\"hue-doc-codeph\">DOUBLE</span>\n            rather than <span class=\"hue-doc-codeph\">DECIMAL</span>. This change avoids some cases\n            where an intermediate value would underflow or overflow and become\n              <span class=\"hue-doc-codeph\">NULL</span> unexpectedly. The results of multiplying\n              <span class=\"hue-doc-codeph\">DECIMAL</span> and <span class=\"hue-doc-codeph\">FLOAT</span> or\n              <span class=\"hue-doc-codeph\">DOUBLE</span> might now be slightly less precise than\n            before. Previously, the intermediate types and thus the final result\n            depended on the exact order of the values of different types being\n            multiplied, which made the final result values difficult to reason\n            about. </p></li><li><p> Previously, the <span class=\"hue-doc-codeph\">_</span> and <span class=\"hue-doc-codeph\">%</span> wildcard\n            characters for the <span class=\"hue-doc-codeph\">LIKE</span> operator would not match\n            characters on the second or subsequent lines of multi-line string\n            values. The fix for issue <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-2204\" target=\"_blank\">IMPALA-2204</a> causes the wildcard matching to apply to the\n            entire string for values containing embedded <span class=\"hue-doc-codeph\">\\n</span>\n            characters. This could cause different results than in previous\n            Impala releases for identical queries on identical data. </p></li><li><p> Formerly, all Impala UDFs and UDAs required running the\n              <span class=\"hue-doc-codeph\">CREATE FUNCTION</span> statements to re-create them\n            after each <span class=\"hue-doc-cmdname\">catalogd</span> restart. In Impala 2.5 and higher, functions written in C++ are\n            persisted across restarts, and the requirement to re-create\n            functions only applies to functions written in Java. Adapt any\n            function-reloading logic that you have added to your Impala\n            environment. </p></li><li><p><span class=\"hue-doc-codeph\">CREATE TABLE LIKE</span> no longer inherits HDFS caching\n            settings from the source table. </p></li><li><p> The <span class=\"hue-doc-codeph\">SHOW DATABASES</span> statement\n            now returns two columns rather than one. The second column includes\n            the associated comment string, if any, for each database. Adjust any\n            application code that examines the list of databases and assumes the\n            result set contains only a single column. </p></li><li><p> The output of the <span class=\"hue-doc-codeph\">SHOW FUNCTIONS</span> statement\n            includes two new columns, showing the kind of the function (for\n            example, <span class=\"hue-doc-codeph\">BUILTIN</span>) and whether or not the function\n            persists across catalog server restarts. For example, the\n              <span class=\"hue-doc-codeph\">SHOW FUNCTIONS</span> output for the\n              <span class=\"hue-doc-codeph\">_impala_builtins</span> database starts with: </p><div class=\"hue-doc-codeblock\">+--------------+-------------------------------------------------+-------------+---------------+\n| return type  | signature                                       | binary type | is persistent |\n+--------------+-------------------------------------------------+-------------+---------------+\n| BIGINT       | abs(BIGINT)                                     | BUILTIN     | true          |\n| DECIMAL(*,*) | abs(DECIMAL(*,*))                               | BUILTIN     | true          |\n| DOUBLE       | abs(DOUBLE)                                     | BUILTIN     | true          |\n...\n</div></li></ul></div></div><div id=\"incompatible_changes_24x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.4.x</div><div><p> Other than support for DSSD storage, the Impala feature set for\n          Impala 2.4 is the same as for Impala 2.3. Therefore, there are no incompatible changes for\n        Impala introduced in Impala 2.4. </p></div></div><div id=\"incompatible_changes_23x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.3.x</div><div><div class=\"hue-doc-note\" id=\"impala_llama_obsolete\"><p>\n          The use of the Llama component for integrated resource management within YARN is no\n          longer supported with Impala 2.3 and higher. The Llama support\n          code is removed entirely in Impala 2.8 and higher.\n        </p><p>\n          For clusters running Impala alongside other data management components, you define\n          static service pools to define the resources available to Impala and other components.\n          Then within the area allocated for Impala, you can create dynamic service pools, each\n          with its own settings for the Impala admission control feature.\n        </p></div><ul><li><p> If Impala encounters a Parquet file that is invalid because of an\n            incorrect magic number, the query skips the file. This change is\n            caused by the fix for issue <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-2130\" target=\"_blank\">IMPALA-2130</a>. Previously, Impala would attempt to read the\n            file despite the possibility that the file was corrupted. </p></li><li><p> Previously, calls to overloaded built-in functions could treat\n            parameters as <span class=\"hue-doc-codeph\">DOUBLE</span> or <span class=\"hue-doc-codeph\">FLOAT</span> when\n            no overload had a signature that matched the exact argument types.\n            Now Impala prefers the function signature with\n              <span class=\"hue-doc-codeph\">DECIMAL</span> parameters in this case. This change\n            avoids a possible loss of precision in function calls such as\n              <span class=\"hue-doc-codeph\">greatest(0, 99999.8888)</span>; now both parameters are\n            treated as <span class=\"hue-doc-codeph\">DECIMAL</span> rather than\n              <span class=\"hue-doc-codeph\">DOUBLE</span>, avoiding any loss of precision in the\n            fractional value. This could cause slightly different results than\n            in previous Impala releases for certain function calls. </p></li><li><p> Formerly, adding or subtracting a large interval value to a\n              <span class=\"hue-doc-codeph\">TIMESTAMP</span> could produce a nonsensical result. Now\n            when the result goes outside the range of <span class=\"hue-doc-codeph\">TIMESTAMP</span>\n            values, Impala returns <span class=\"hue-doc-codeph\">NULL</span>. </p></li><li><p> Formerly, it was possible to accidentally create a table with\n            identical row and column delimiters. This could happen\n            unintentionally, when specifying one of the delimiters and using the\n            default value for the other. Now an attempt to use identical\n            delimiters still succeeds, but displays a warning message. </p></li><li><p> Formerly, Impala could include snippets of table data in log files\n            by default, for example when reporting conversion errors for data\n            values. Now any such log messages are only produced at higher\n            logging levels that you would enable only during debugging. </p></li></ul></div></div><div id=\"incompatible_changes_22x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.2.x</div><div><div class=\"hue-doc-section\" id=\"files_220\"><div class=\"hue-doc-title\"> Changes to File Handling </div><p id=\"ignore_file_extensions\">\n        Impala queries ignore files with extensions commonly used for temporary work files by\n        Hadoop tools. Any files with extensions <span class=\"hue-doc-codeph\">.tmp</span> or\n        <span class=\"hue-doc-codeph\">.copying</span> are not considered part of the Impala table. The suffix\n        matching is case-insensitive, so for example Impala ignores both\n        <span class=\"hue-doc-codeph\">.copying</span> and <span class=\"hue-doc-codeph\">.COPYING</span> suffixes.\n      </p><p> The log rotation feature in Impala 2.2.0 and higher means that older\n          log files are now removed by default. The default is to preserve the\n          latest 10 log files for each severity level, for each Impala-related\n          daemon. If you have set up your own log rotation processes that expect\n          older files to be present, either adjust your procedures or change the\n          Impala <span class=\"hue-doc-codeph\">-max_log_files</span> setting. </p></div><div class=\"hue-doc-section\" id=\"prereqs_210\"><div class=\"hue-doc-title\"> Changes to Prerequisites </div><p id=\"cpu_prereq\">\n        The prerequisite for CPU architecture has been relaxed in Impala 2.2.0 and higher. From\n        this release onward, Impala works on CPUs that have the SSSE3 instruction set. The SSE4\n        instruction set is no longer required. This relaxed requirement simplifies the upgrade\n        planning from Impala 1.x releases, which also worked on SSSE3-enabled processors.\n      </p></div></div></div><div id=\"incompatible_changes_21x\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.1.x</div><div><div class=\"hue-doc-section\" id=\"prereqs_210\"><div class=\"hue-doc-title\"> Changes to Prerequisites </div><p> Currently, Impala 2.1.x does not function on CPUs without the\n          SSE4.1 instruction set. This minimum CPU requirement is higher than in\n          previous versions, which relied on the older SSSE3 instruction set.\n          Check the CPU level of the hosts in your cluster before upgrading to\n            Impala 2.1. </p></div><div class=\"hue-doc-section\" id=\"output_format_210\"><div class=\"hue-doc-title\"> Changes to Output Format </div><p> The <q>small query</q> optimization feature introduces some new\n          information in the <span class=\"hue-doc-codeph\">EXPLAIN</span> plan, which you might need\n          to account for if you parse the text of the plan output. </p></div><div class=\"hue-doc-section\" id=\"reserved_words_210\"><div class=\"hue-doc-title\"> New Reserved Words </div><p> New SQL syntax introduces additional reserved words:\n            <span class=\"hue-doc-codeph\">FOR</span>, <span class=\"hue-doc-codeph\">GRANT</span>,\n            <span class=\"hue-doc-codeph\">REVOKE</span>, <span class=\"hue-doc-codeph\">ROLE</span>,\n            <span class=\"hue-doc-codeph\">ROLES</span>, <span class=\"hue-doc-codeph\">INCREMENTAL</span>. </p></div></div></div><div id=\"incompatible_changes_205\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.5</div><div><p> No incompatible changes. </p></div></div><div id=\"incompatible_changes_204\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.4</div><div><p> No incompatible changes. </p></div></div><div id=\"incompatible_changes_203\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.3</div><div/></div><div id=\"incompatible_changes_202\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.2</div><div><p> No incompatible changes. </p></div></div><div id=\"incompatible_changes_201\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.1</div><div><ul><li><p id=\"insert_hidden_work_directory\">\n        The <span class=\"hue-doc-codeph\">INSERT</span> statement has always left behind a hidden work directory\n        inside the data directory of the table. Formerly, this hidden work directory was named\n        <span class=\"hue-doc-filepath\">.impala_insert_staging</span> . In Impala 2.0.1 and later, this directory\n        name is changed to <span class=\"hue-doc-filepath\">_impala_insert_staging</span> . (While HDFS tools are\n        expected to treat names beginning either with underscore and dot as hidden, in practice\n        names beginning with an underscore are more widely supported.) If you have any scripts,\n        cleanup jobs, and so on that rely on the name of this work directory, adjust them to use\n        the new name.\n      </p></li><li><p> The <span class=\"hue-doc-codeph\">abs()</span> function now takes a broader range of\n            numeric types as arguments, and the return type is the same as the\n            argument type. </p></li><li><p> Shorthand notation for character classes in regular expressions,\n            such as <span class=\"hue-doc-codeph\">\\d</span> for digit, are now available again in\n            regular expression operators and functions such as\n              <span class=\"hue-doc-codeph\">regexp_extract()</span> and\n              <span class=\"hue-doc-codeph\">regexp_replace()</span>. Some other differences in\n            regular expression behavior remain between Impala 1.x and Impala 2.x\n            releases. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_incompatible_changes.xml\" data-doc-anchor-id=\"incompatible_changes_200\">Incompatible Changes Introduced in Impala 2.0.0</a>\n            for details. </p></li></ul></div></div><div id=\"incompatible_changes_200\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 2.0.0</div><div><div class=\"hue-doc-section\" id=\"prereqs_200\"><div class=\"hue-doc-title\"> Changes to Prerequisites </div><p> Currently, Impala 2.0.x does not function on CPUs without the\n          SSE4.1 instruction set. This minimum CPU requirement is higher than in\n          previous versions, which relied on the older SSSE3 instruction set.\n          Check the CPU level of the hosts in your cluster before upgrading to\n            Impala 2.0. </p></div><div class=\"hue-doc-section\" id=\"queries_200\"><div class=\"hue-doc-title\"> Changes to Query Syntax </div><p> The new syntax where query hints are allowed in comments causes some\n          changes in the way comments are parsed in the\n            <span class=\"hue-doc-cmdname\">impala-shell</span> interpreter. Previously, you could\n          end a <span class=\"hue-doc-codeph\">--</span> comment line with a semicolon and\n            <span class=\"hue-doc-cmdname\">impala-shell</span> would treat that as a no-op\n          statement. Now, a comment line ending with a semicolon is passed as an\n          empty statement to the Impala daemon, where it is flagged as an error. </p><p> Impala 2.0 and later uses a different support library for regular\n          expression parsing than in earlier Impala versions. Now, Impala uses\n          the <a class=\"hue-doc-external-link\" href=\"https://code.google.com/p/re2/\" target=\"_blank\">Google RE2 library</a> rather than Boost for\n          evaluating regular expressions. This implementation change causes some\n          differences in the allowed regular expression syntax, and in the way\n          certain regex operators are interpreted. The following are some of the\n          major differences (not necessarily a complete list): </p><ul><li><p><span class=\"hue-doc-codeph\">.*?</span> notation for non-greedy matches is now\n              supported, where it was not in earlier Impala releases. </p></li><li><p> By default, <span class=\"hue-doc-codeph\">^</span> and <span class=\"hue-doc-codeph\">$</span> now match\n              only begin/end of buffer, not begin/end of each line. This\n              behavior can be overridden in the regex itself using the\n                <span class=\"hue-doc-codeph\">m</span> flag. </p></li><li><p> By default, <span class=\"hue-doc-codeph\">.</span> does not match newline. This\n              behavior can be overridden in the regex itself using the\n                <span class=\"hue-doc-codeph\">s</span> flag. </p></li><li><p><span class=\"hue-doc-codeph\">\\Z</span> is not supported. </p></li><li><p><span class=\"hue-doc-codeph\">&lt;</span> and <span class=\"hue-doc-codeph\">&gt;</span> for start of word\n              and end of word are not supported. </p></li><li><p> Lookahead and lookbehind are not supported. </p></li><li><p> Shorthand notation for character classes, such as\n                <span class=\"hue-doc-codeph\">\\d</span> for digit, is not recognized. (This\n              restriction is lifted in Impala 2.0.1, which restores the\n              shorthand notation.) </p></li></ul></div><div class=\"hue-doc-section\" id=\"output_format_210\"><div class=\"hue-doc-title\"> Changes to Output Format </div><p id=\"user_kerberized\">\n        In Impala 2.0 and later, <span class=\"hue-doc-codeph\">user()</span> returns the full Kerberos principal\n        string, such as <span class=\"hue-doc-codeph\">user@example.com</span>, in a Kerberized environment.\n      </p><p> The changed format for the user name in secure environments is also\n          reflected where the user name is displayed in the output of the\n            <span class=\"hue-doc-codeph\">PROFILE</span> command. </p><p> In the output from <span class=\"hue-doc-codeph\">SHOW FUNCTIONS</span>, <span class=\"hue-doc-codeph\">SHOW\n            AGGREGATE FUNCTIONS</span>, and <span class=\"hue-doc-codeph\">SHOW ANALYTIC\n            FUNCTIONS</span>, arguments and return types of arbitrary\n            <span class=\"hue-doc-codeph\">DECIMAL</span> scale and precision are represented as\n            <span class=\"hue-doc-codeph\">DECIMAL(*,*)</span>. Formerly, these items were displayed\n          as <span class=\"hue-doc-codeph\">DECIMAL(-1,-1)</span>. </p></div><div class=\"hue-doc-section\" id=\"query_options_200\"><div class=\"hue-doc-title\"> Changes to Query Options </div><p> The <span class=\"hue-doc-codeph\">PARQUET_COMPRESSION_CODEC</span> query option has been\n          replaced by the <span class=\"hue-doc-codeph\">COMPRESSION_CODEC</span> query option. </p></div><div class=\"hue-doc-section\" id=\"config_options_200\"><div class=\"hue-doc-title\"> Changes to Configuration Options </div><p> The meaning of the <span class=\"hue-doc-codeph\">--idle_query_timeout</span>\n          configuration option is changed, to accommodate the new\n            <span class=\"hue-doc-codeph\">QUERY_TIMEOUT_S</span> query option. Rather than setting\n          an absolute timeout period that applies to all queries, it now sets a\n          maximum timeout period, which can be adjusted downward for individual\n          queries by specifying a value for the <span class=\"hue-doc-codeph\">QUERY_TIMEOUT_S</span>\n          query option. In sessions where no <span class=\"hue-doc-codeph\">QUERY_TIMEOUT_S</span>\n          query option is specified, the <span class=\"hue-doc-codeph\">--idle_query_timeout</span>\n          timeout period applies the same as in earlier versions. </p><p> The <span class=\"hue-doc-codeph\">--strict_unicode</span> option of\n            <span class=\"hue-doc-cmdname\">impala-shell</span> was removed. To avoid problems with\n          Unicode values in <span class=\"hue-doc-cmdname\">impala-shell</span>, define the\n          following locale setting before running\n            <span class=\"hue-doc-cmdname\">impala-shell</span>: </p><div class=\"hue-doc-codeblock\">export LC_CTYPE=en_US.UTF-8\n</div></div><div class=\"hue-doc-section\" id=\"reserved_words_210\"><div class=\"hue-doc-title\"> New Reserved Words </div><p> Some new SQL syntax requires the addition of new reserved words:\n            <span class=\"hue-doc-codeph\">ANTI</span>, <span class=\"hue-doc-codeph\">ANALYTIC</span>,\n            <span class=\"hue-doc-codeph\">OVER</span>, <span class=\"hue-doc-codeph\">PRECEDING</span>,\n            <span class=\"hue-doc-codeph\">UNBOUNDED</span>, <span class=\"hue-doc-codeph\">FOLLOWING</span>,\n            <span class=\"hue-doc-codeph\">CURRENT</span>, <span class=\"hue-doc-codeph\">ROWS</span>,\n            <span class=\"hue-doc-codeph\">RANGE</span>, <span class=\"hue-doc-codeph\">CHAR</span>,\n            <span class=\"hue-doc-codeph\">VARCHAR</span>. </p></div><div class=\"hue-doc-section\" id=\"output_files_200\"><div class=\"hue-doc-title\"> Changes to Data Files </div><p id=\"parquet_block_size\"> The default Parquet block size for Impala is\n          changed from 1 GB to 256 MB. This change could have implications for\n          the sizes of Parquet files produced by <span class=\"hue-doc-codeph\">INSERT</span> and\n            <span class=\"hue-doc-codeph\">CREATE TABLE AS SELECT</span> statements. </p><p> Although older Impala releases typically produced files that were\n          smaller than the old default size of 1 GB, now the file size matches\n          more closely whatever value is specified for the\n            <span class=\"hue-doc-codeph\">PARQUET_FILE_SIZE</span> query option. Thus, if you use a\n          non-default value for this setting, the output files could be larger\n          than before. They still might be somewhat smaller than the specified\n          value, because Impala makes conservative estimates about the space\n          needed to represent each column as it encodes the data. </p><p> When you do not specify an explicit value for the\n            <span class=\"hue-doc-codeph\">PARQUET_FILE_SIZE</span> query option, Impala tries to\n          keep the file size within the 256 MB default size, but Impala might\n          adjust the file size to be somewhat larger if needed to accommodate\n          the layout for <span class=\"hue-doc-term\">wide</span> tables, that is, tables with hundreds\n          or thousands of columns. </p><p> This change is unlikely to affect memory usage while writing Parquet\n          files, because Impala does not pre-allocate the memory needed to hold\n          the entire Parquet block. </p></div></div></div><div id=\"incompatible_changes_144\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.4.4</div><div><p> No incompatible changes. </p></div></div><div id=\"incompatible_changes_143\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.4.3</div><div><p> No incompatible changes. The TLS/SSL security fix does not require any\n        change in the way you interact with Impala. </p></div></div><div id=\"incompatible_changes_142\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.4.2</div><div><p> None. Impala 1.4.2 is purely a bug-fix release. It does not include\n        any incompatible changes. </p></div></div><div id=\"incompatible_changes_141\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.4.1</div><div><p> None. Impala 1.4.1 is purely a bug-fix release. It does not include\n        any incompatible changes. </p></div></div><div id=\"incompatible_changes_140\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.4.0</div><div><ul><li><p> There is a slight change to required security privileges in the\n            Sentry framework. To create a new object, now you need the\n              <span class=\"hue-doc-codeph\">ALL</span> privilege on the parent object. For example,\n            to create a new table, view, or function requires having the\n              <span class=\"hue-doc-codeph\">ALL</span> privilege on the database containing the new\n            object. See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_authorization.html\" target=\"_blank\">Impala Authorization</a> for a full list\n            of operations and associated privileges. </p></li><li><p> With the ability of <span class=\"hue-doc-codeph\">ORDER BY</span> queries to process\n            unlimited amounts of data with no <span class=\"hue-doc-codeph\">LIMIT</span> clause, the\n            query options <span class=\"hue-doc-codeph\">DEFAULT_ORDER_BY_LIMIT</span> and\n              <span class=\"hue-doc-codeph\">ABORT_ON_DEFAULT_LIMIT_EXCEEDED</span> are now\n            deprecated and have no effect. </p></li><li><p> There are some changes to the list of reserved words.  The following keywords are new: </p><ul><li><span class=\"hue-doc-codeph\">API_VERSION</span></li><li><span class=\"hue-doc-codeph\">BINARY</span></li><li><span class=\"hue-doc-codeph\">CACHED</span></li><li><span class=\"hue-doc-codeph\">CLASS</span></li><li><span class=\"hue-doc-codeph\">PARTITIONS</span></li><li><span class=\"hue-doc-codeph\">PRODUCED</span></li><li><span class=\"hue-doc-codeph\">UNCACHED</span></li></ul><p> The following were formerly reserved keywords, but are no longer\n            reserved: </p><ul><li><span class=\"hue-doc-codeph\">COUNT</span></li><li><span class=\"hue-doc-codeph\">GROUP_CONCAT</span></li><li><span class=\"hue-doc-codeph\">NDV</span></li><li><span class=\"hue-doc-codeph\">SUM</span></li></ul></li><li><p> The fix for issue <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/IMPALA-973\" target=\"_blank\">IMPALA-973</a>\n            changes the behavior of the <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span>\n            statement regarding nonexistent tables. In Impala 1.4.0 and higher,\n            the statement returns an error if the specified table is not in the\n            metastore database at all. It completes successfully if the\n            specified table is in the metastore database but not yet recognized\n            by Impala, for example if the table was created through Hive.\n            Formerly, you could issue this statement for a completely\n            nonexistent table, with no error. </p></li></ul></div></div><div id=\"incompatible_changes_133\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.3.3</div><div><p> No incompatible changes. The TLS/SSL security fix does not require any\n        change in the way you interact with Impala. </p></div></div><div id=\"incompatible_changes_132\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.3.2</div><div><p> With the fix for IMPALA-1019, you can use HDFS caching for files that\n        are accessed by Impala. </p></div></div><div id=\"incompatible_changes_131\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.3.1</div><div><ul><li><p id=\"regexp_matching\">\n        In Impala 1.3.1 and higher, the <span class=\"hue-doc-codeph\">REGEXP</span> and <span class=\"hue-doc-codeph\">RLIKE</span>\n        operators now match a regular expression string that occurs anywhere inside the target\n        string, the same as if the regular expression was enclosed on each side by\n        <span class=\"hue-doc-codeph\">.*</span>. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_operators.xml\" data-doc-anchor-id=\"regexp\">REGEXP Operator</a> for\n        examples. Previously, these operators only succeeded when the regular expression matched\n        the entire target string. This change improves compatibility with the regular expression\n        support for popular database systems. There is no change to the behavior of the\n        <span class=\"hue-doc-codeph\">regexp_extract()</span> and <span class=\"hue-doc-codeph\">regexp_replace()</span> built-in\n        functions.\n      </p></li><li><p> The result set for the <span class=\"hue-doc-codeph\">SHOW FUNCTIONS</span> statement\n            includes a new first column, with the data type of the return value.\n              </p></li></ul></div></div><div id=\"incompatible_changes_130\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.3.0</div><div><ul><li><p> The <span class=\"hue-doc-codeph\">EXPLAIN_LEVEL</span> query option now accepts\n            numeric options from 0 (most concise) to 3 (most verbose), rather\n            than only 0 or 1. If you formerly used <span class=\"hue-doc-codeph\">SET\n              EXPLAIN_LEVEL=1</span> to get detailed explain plans, switch to\n              <span class=\"hue-doc-codeph\">SET EXPLAIN_LEVEL=3</span>. If you used the mnemonic\n            keyword (<span class=\"hue-doc-codeph\">SET EXPLAIN_LEVEL=verbose</span>), you do not\n            need to change your code because now level 3 corresponds to\n              <span class=\"hue-doc-codeph\">verbose</span>. </p></li><li><p> The keyword <span class=\"hue-doc-codeph\">DECIMAL</span> is now a reserved word. If\n            you have any databases, tables, columns, or other objects already\n            named <span class=\"hue-doc-codeph\">DECIMAL</span>, quote any references to them using\n            backticks (<span class=\"hue-doc-codeph\">``</span>) to avoid name conflicts with the\n            keyword. <div class=\"hue-doc-note\"> Although the <span class=\"hue-doc-codeph\">DECIMAL</span> keyword is a\n              reserved word, currently Impala does not support\n                <span class=\"hue-doc-codeph\">DECIMAL</span> as a data type for columns. </div></p></li><li><p> The query option formerly named <span class=\"hue-doc-codeph\">YARN_POOL</span> is now\n            named <span class=\"hue-doc-codeph\">REQUEST_POOL</span> to reflect its broader use with\n            the Impala admission control feature. </p></li><li><p> There are some changes to the list of reserved words. </p><ul><li><p> The names of aggregate functions are no longer reserved words,\n                so you can have databases, tables, columns, or other objects\n                named <span class=\"hue-doc-codeph\">AVG</span>, <span class=\"hue-doc-codeph\">MIN</span>, and so on\n                without any name conflicts. </p></li><li><p> The internal function names <span class=\"hue-doc-codeph\">DISTINCTPC</span> and\n                  <span class=\"hue-doc-codeph\">DISTINCTPCSA</span> are no longer reserved words,\n                although <span class=\"hue-doc-codeph\">DISTINCT</span> is still a reserved word.\n              </p></li><li><p> The keywords <span class=\"hue-doc-codeph\">CLOSE_FN</span> and\n                  <span class=\"hue-doc-codeph\">PREPARE_FN</span> are now reserved words. </p></li></ul></li><li><p> The HDFS property\n              <span class=\"hue-doc-codeph\">dfs.client.file-block-storage-locations.timeout</span>\n            was renamed to\n              <span class=\"hue-doc-codeph\">dfs.client.file-block-storage-locations.timeout.millis</span>,\n            to emphasize that the unit of measure is milliseconds, not seconds.\n            Impala requires a timeout of at least 10 seconds, making the minimum\n            value for this setting 10000. If you are not using cluster\n            management software, you might need to edit the\n              <span class=\"hue-doc-filepath\">hdfs-site.xml</span> file in the Impala\n            configuration directory for the new name and minimum value. </p></li></ul></div></div><div id=\"incompatible_changes_124\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.2.4</div><div><p> There are no incompatible changes introduced in Impala 1.2.4. </p><p> Previously, after creating a table in Hive, you had to issue the\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statement with no table name, a\n        potentially expensive operation on clusters with many databases, tables,\n        and partitions. Starting in Impala 1.2.4, you can issue the statement\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA <span class=\"hue-doc-varname\">table_name</span></span> for\n        a table newly created through Hive. Loading the metadata for only this\n        one table is faster and involves less network overhead. Therefore, you\n        might revisit your setup DDL scripts to add the table name to\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements, in cases where you\n        create and populate the tables through Hive before querying them through\n        Impala. </p></div></div><div id=\"incompatible_changes_123\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.2.3</div><div><p> Because the feature set of Impala 1.2.3 is identical to Impala 1.2.2,\n        there are no new incompatible changes. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_incompatible_changes.xml\" data-doc-anchor-id=\"incompatible_changes_122\">Incompatible Changes Introduced in Impala 1.2.2</a> if\n        you are upgrading from Impala 1.2.1 or 1.1.x. </p></div></div><div id=\"incompatible_changes_122\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.2.2</div><div><p> The following changes to SQL syntax and semantics in Impala 1.2.2\n        could require updates to your SQL code, or schema objects such as tables\n        or views: </p><ul><li><p> With the addition of the <span class=\"hue-doc-codeph\">CROSS JOIN</span> keyword, you\n            might need to rewrite any queries that refer to a table named\n              <span class=\"hue-doc-codeph\">CROSS</span> or use the name <span class=\"hue-doc-codeph\">CROSS</span> as a\n            table alias: </p><div class=\"hue-doc-codeblock\">-- Formerly, 'cross' in this query was an alias for t1\n-- and it was a normal join query.\n-- In 1.2.2 and higher, CROSS JOIN is a keyword, so 'cross'\n-- is not interpreted as a table alias, and the query\n-- uses the special CROSS JOIN processing rather than a\n-- regular join.\nselect * from t1 cross join t2...\n\n-- Now if CROSS is used in other context such as a table or column name,\n-- use backticks to escape it.\ncreate table `cross` (x int);\nselect * from `cross`;</div></li><li><p> Formerly, a <span class=\"hue-doc-codeph\">DROP DATABASE</span> statement in Impala\n            would not remove the top-level HDFS directory for that database. The\n              <span class=\"hue-doc-codeph\">DROP DATABASE</span> has been enhanced to remove that\n            directory. (You still need to drop all the tables inside the\n            database first; this change only applies to the top-level directory\n            for the entire database.) </p></li><li> The keyword <span class=\"hue-doc-codeph\">PARQUET</span> is introduced as a synonym for\n            <span class=\"hue-doc-codeph\">PARQUETFILE</span> in the <span class=\"hue-doc-codeph\">CREATE TABLE</span>\n          and <span class=\"hue-doc-codeph\">ALTER TABLE</span> statements, because that is the\n          common name for the file format. (As opposed to SequenceFile and\n          RCFile where the <q>File</q> suffix is part of the name.)\n          Documentation examples have been changed to prefer the new shorter\n          keyword. The <span class=\"hue-doc-codeph\">PARQUETFILE</span> keyword is still available\n          for backward compatibility with older Impala versions. </li><li> New overloads are available for several operators and built-in\n          functions, allowing you to insert their result values into smaller\n          numeric columns such as <span class=\"hue-doc-codeph\">INT</span>,\n            <span class=\"hue-doc-codeph\">SMALLINT</span>, <span class=\"hue-doc-codeph\">TINYINT</span>, and\n            <span class=\"hue-doc-codeph\">FLOAT</span> without using a <span class=\"hue-doc-codeph\">CAST()</span> call.\n          If you remove the <span class=\"hue-doc-codeph\">CAST()</span> calls from\n            <span class=\"hue-doc-codeph\">INSERT</span> statements, those statements might not work\n          with earlier versions of Impala. </li></ul><p> Because many users are likely to upgrade straight from Impala 1.x to\n        Impala 1.2.2, also read <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_incompatible_changes.xml\" data-doc-anchor-id=\"incompatible_changes_121\">Incompatible Changes Introduced in Impala 1.2.1</a> for\n        things to note about upgrading to Impala 1.2.x in general. </p></div></div><div id=\"incompatible_changes_121\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.2.1</div><div><p> The following changes to SQL syntax and semantics in Impala 1.2.1\n        could require updates to your SQL code, or schema objects such as tables\n        or views: </p><ul><li><p id=\"null_sorting_change\">\n        In Impala 1.2.1 and higher, all <span class=\"hue-doc-codeph\">NULL</span> values come at the end of the\n        result set for <span class=\"hue-doc-codeph\">ORDER BY ... ASC</span> queries, and at the beginning of the\n        result set for <span class=\"hue-doc-codeph\">ORDER BY ... DESC</span> queries. In effect,\n        <span class=\"hue-doc-codeph\">NULL</span> is considered greater than all other values for sorting purposes.\n        The original Impala behavior always put <span class=\"hue-doc-codeph\">NULL</span> values at the end, even\n        for <span class=\"hue-doc-codeph\">ORDER BY ... DESC</span> queries. The new behavior in Impala 1.2.1 makes\n        Impala more compatible with other popular database systems. In Impala 1.2.1 and higher,\n        you can override or specify the sorting behavior for <span class=\"hue-doc-codeph\">NULL</span> by adding the\n        clause <span class=\"hue-doc-codeph\">NULLS FIRST</span> or <span class=\"hue-doc-codeph\">NULLS LAST</span> at the end of the\n        <span class=\"hue-doc-codeph\">ORDER BY</span> clause.\n      </p></li></ul><p> The new <span class=\"hue-doc-cmdname\">catalogd</span> service might require changes to\n        any user-written scripts that stop, start, or restart Impala services,\n        install or upgrade Impala packages, or issue <span class=\"hue-doc-codeph\">REFRESH</span> or\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements: </p><ul id=\"catalogd_xrefs\"><li><p>\n            See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_install.html#install\" target=\"_blank\"><span class=\"hue-doc-ph\">Installing Impala</span><span class=\"hue-doc-ph\">Impala Installation</span></a>,\n            <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_upgrading.html#upgrading\" target=\"_blank\">Upgrading Impala</a> and\n            <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_processes.html#processes\" target=\"_blank\">Starting Impala</a>, for usage information for\n            the <span class=\"hue-doc-cmdname\">catalogd</span> daemon.\n          </p></li><li><p>\n            The <span class=\"hue-doc-codeph\">REFRESH</span> and <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements are\n            no longer needed when the <span class=\"hue-doc-codeph\">CREATE TABLE</span>, <span class=\"hue-doc-codeph\">INSERT</span>, or\n            other table-changing or data-changing operation is performed through Impala. These\n            statements are still needed if such operations are done through Hive or by\n            manipulating data files directly in HDFS, but in those cases the statements only\n            need to be issued on one Impala node rather than on all nodes. See\n            <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_refresh.xml\" data-doc-anchor-id=\"refresh\">REFRESH Statement</a> and\n            <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_invalidate_metadata.xml\" data-doc-anchor-id=\"invalidate_metadata\">INVALIDATE METADATA Statement</a> for the\n            latest usage information for those statements.\n          </p></li><li><p>\n            See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_components.html#intro_catalogd\" target=\"_blank\">The Impala Catalog Service</a> for background\n            information on the <span class=\"hue-doc-cmdname\">catalogd</span> service.\n          </p></li></ul></div></div><div id=\"incompatible_changes_120\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.2.0 (Beta)</div><div><p> There are no incompatible changes to SQL syntax in Impala 1.2.0\n        (beta). </p><p> The new <span class=\"hue-doc-cmdname\">catalogd</span> service might require changes to\n        any user-written scripts that stop, start, or restart Impala services,\n        install or upgrade Impala packages, or issue <span class=\"hue-doc-codeph\">REFRESH</span> or\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements: </p><ul id=\"catalogd_xrefs\"><li><p>\n            See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_install.html#install\" target=\"_blank\"><span class=\"hue-doc-ph\">Installing Impala</span><span class=\"hue-doc-ph\">Impala Installation</span></a>,\n            <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_upgrading.html#upgrading\" target=\"_blank\">Upgrading Impala</a> and\n            <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_processes.html#processes\" target=\"_blank\">Starting Impala</a>, for usage information for\n            the <span class=\"hue-doc-cmdname\">catalogd</span> daemon.\n          </p></li><li><p>\n            The <span class=\"hue-doc-codeph\">REFRESH</span> and <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements are\n            no longer needed when the <span class=\"hue-doc-codeph\">CREATE TABLE</span>, <span class=\"hue-doc-codeph\">INSERT</span>, or\n            other table-changing or data-changing operation is performed through Impala. These\n            statements are still needed if such operations are done through Hive or by\n            manipulating data files directly in HDFS, but in those cases the statements only\n            need to be issued on one Impala node rather than on all nodes. See\n            <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_refresh.xml\" data-doc-anchor-id=\"refresh\">REFRESH Statement</a> and\n            <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_invalidate_metadata.xml\" data-doc-anchor-id=\"invalidate_metadata\">INVALIDATE METADATA Statement</a> for the\n            latest usage information for those statements.\n          </p></li><li><p>\n            See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_components.html#intro_catalogd\" target=\"_blank\">The Impala Catalog Service</a> for background\n            information on the <span class=\"hue-doc-cmdname\">catalogd</span> service.\n          </p></li></ul><p> The new resource management feature interacts with both YARN and Llama\n        services. </p></div></div><div id=\"incompatible_changes_111\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.1.1</div><div><p> There are no incompatible changes in Impala 1.1.1. </p><p> Previously, it was not possible to create Parquet data through Impala\n        and reuse that table within Hive. Now that Parquet support is available\n        for Hive 10, reusing existing Impala Parquet data files in Hive requires\n        updating the table metadata. Use the following command if you are\n        already running Impala 1.1.1: </p><div class=\"hue-doc-codeblock\">ALTER TABLE <span class=\"hue-doc-varname\">table_name</span> SET FILEFORMAT PARQUETFILE;\n</div><p> If you are running a level of Impala that is older than 1.1.1, do the\n        metadata update through Hive: </p><div class=\"hue-doc-codeblock\">ALTER TABLE <span class=\"hue-doc-varname\">table_name</span> SET SERDE 'parquet.hive.serde.ParquetHiveSerDe';\nALTER TABLE <span class=\"hue-doc-varname\">table_name</span> SET FILEFORMAT\n  INPUTFORMAT \"parquet.hive.DeprecatedParquetInputFormat\"\n  OUTPUTFORMAT \"parquet.hive.DeprecatedParquetOutputFormat\";\n</div><p> Impala 1.1.1 and higher can reuse Parquet data files created by Hive,\n        without any action required. </p><p> As usual, make sure to upgrade the Impala LZO package to the latest\n        level at the same time as you upgrade the Impala server. </p></div></div><div id=\"incompatible_changes_11\"><div class=\"hue-doc-title\">Incompatible Change Introduced in Impala 1.1</div><div><ul><li><p> The <span class=\"hue-doc-codeph\">REFRESH</span> statement now requires a table name;\n            in Impala 1.0, the table name was optional. This syntax change is\n            part of the internal rework to make <span class=\"hue-doc-codeph\">REFRESH</span> a true\n            Impala SQL statement so that it can be called through the JDBC and\n            ODBC APIs. <span class=\"hue-doc-codeph\">REFRESH</span> now reloads the metadata\n            immediately, rather than marking it for update the next time any\n            affected table is accessed. The previous behavior, where omitting\n            the table name caused a refresh of the entire Impala metadata\n            catalog, is available through the new <span class=\"hue-doc-codeph\">INVALIDATE\n              METADATA</span> statement. <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span>\n            can be specified with a table name to affect a single table, or\n            without a table name to affect the entire metadata catalog; the\n            relevant metadata is reloaded the next time it is requested during\n            the processing for a SQL statement. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_refresh.xml\" data-doc-anchor-id=\"refresh\">REFRESH Statement</a> and <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_invalidate_metadata.xml\" data-doc-anchor-id=\"invalidate_metadata\">INVALIDATE METADATA Statement</a> for\n            the latest details about these statements. </p></li></ul></div></div><div id=\"incompatible_changes_10\"><div class=\"hue-doc-title\">Incompatible Changes Introduced in Impala 1.0</div><div><ul><li> If you use LZO-compressed text files, when you upgrade Impala to\n          version 1.0, also update the Impala LZO package to the latest level.\n          See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_txtfile.xml\" data-doc-anchor-id=\"lzo\">Using LZO-Compressed Text Files</a> for details. </li></ul></div></div></div></div>","title":"Incompatible Changes and Limitations in       Apache ImpalaApache Impala Incompatible       Changes and Limitations"}