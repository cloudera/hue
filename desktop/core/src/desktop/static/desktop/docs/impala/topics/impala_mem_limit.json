{"body":"<div><div id=\"mem_limit\"><div class=\"hue-doc-title\">MEM_LIMIT Query Option</div><div><p>\n      The MEM_LIMIT query option defines the maximum amount of memory a query can allocate on\n      each node. The total memory that can be used by a query is the <span class=\"hue-doc-codeph\">MEM_LIMIT</span>\n      times the number of nodes.\n    </p><p>\n      There are two levels of memory limit for Impala. The\n      <span class=\"hue-doc-codeph\">‑‑mem_limit</span> startup option sets an overall limit for the\n      <span class=\"hue-doc-cmdname\">impalad</span> process (which handles multiple queries concurrently). That\n      process memory limit can be expressed either as a percentage of RAM available to the\n      process such as <span class=\"hue-doc-codeph\">‑‑mem_limit=70%</span> or as a fixed amount of\n      memory, such as <span class=\"hue-doc-codeph\">100gb</span>. The memory available to the process is based on\n      the host's physical memory and, since Impala 3.2, memory limits from Linux Control Groups.\n      E.g. if an <span class=\"hue-doc-cmdname\">impalad</span> process is running in a Docker container on a host\n      with 100GB of memory, the memory available is 100GB or the Docker container's memory\n      limit, whichever is less.\n    </p><p>\n      The <span class=\"hue-doc-codeph\">MEM_LIMIT</span> query option, which you set through\n      <span class=\"hue-doc-cmdname\">impala-shell</span> or the <span class=\"hue-doc-codeph\">SET</span> statement in a JDBC or ODBC\n      application, applies to each individual query. The <span class=\"hue-doc-codeph\">MEM_LIMIT</span> query option\n      is usually expressed as a fixed size such as <span class=\"hue-doc-codeph\">10gb</span>, and must always be\n      less than the <span class=\"hue-doc-cmdname\">impalad</span> memory limit.\n    </p><p>\n      If query processing approaches the specified memory limit on any node, either the\n      per-query limit or the impalad limit, then the SQL operations will start to reduce\n      their memory consumption, for example by writing the temporary data to disk (known as spilling to disk).\n      The result is a query that completes successfully, rather than failing with an out-of-memory error.\n      The tradeoff is decreased performance due to the extra disk I/O to write the temporary data and\n      read it back in. The slowdown could potentially be significant. Thus, while this feature improves\n      reliability, you should optimize your queries, system parameters, and hardware configuration to\n      make this spilling a rare occurrence.\n    </p><p><b>Type:</b> numeric\n    </p><p><b>Units:</b> A numeric argument represents memory size in bytes; you can also use a\n      suffix of <span class=\"hue-doc-codeph\">m</span> or <span class=\"hue-doc-codeph\">mb</span> for megabytes, or more commonly\n      <span class=\"hue-doc-codeph\">g</span> or <span class=\"hue-doc-codeph\">gb</span> for gigabytes. If you specify a value with\n      unrecognized formats, subsequent queries fail with an error.\n    </p><p><b>Default:</b> 0 (unlimited)\n    </p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      The <span class=\"hue-doc-codeph\">MEM_LIMIT</span> setting is primarily useful for production workloads.\n      Impala's Admission Controller can be configured to automatically assign memory limits to\n      queries and limit memory consumption of resource pools. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_admission.xml\" data-doc-anchor-id=\"admission_concurrency\">Concurrent Queries and Admission Control</a>\n      and <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_admission.xml\" data-doc-anchor-id=\"admission_memory\">Memory Limits and Admission Control</a> for more information on configuring\n      the resource usage through admission control.\n    </p><p>\n      Use the output of the <span class=\"hue-doc-codeph\">SUMMARY</span> command in <span class=\"hue-doc-cmdname\">impala-shell</span>\n      to get a report of memory used for each phase of your most heavyweight queries on each\n      node, and then set a <span class=\"hue-doc-codeph\">MEM_LIMIT</span> somewhat higher than that. See\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_explain_plan.xml\" data-doc-anchor-id=\"perf_summary\">Using the SUMMARY Report for Performance Tuning</a> for usage information about the\n      <span class=\"hue-doc-codeph\">SUMMARY</span> command.\n    </p><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      The following examples show how to set the <span class=\"hue-doc-codeph\">MEM_LIMIT</span> query option using a\n      fixed number of bytes, or suffixes representing gigabytes or megabytes.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; set mem_limit=3000000000;\nMEM_LIMIT set to 3000000000\n[localhost:21000] &gt; select 5;\nQuery: select 5\n+---+\n| 5 |\n+---+\n| 5 |\n+---+\n\n[localhost:21000] &gt; set mem_limit=3g;\nMEM_LIMIT set to 3g\n[localhost:21000] &gt; select 5;\nQuery: select 5\n+---+\n| 5 |\n+---+\n| 5 |\n+---+\n\n[localhost:21000] &gt; set mem_limit=3gb;\nMEM_LIMIT set to 3gb\n[localhost:21000] &gt; select 5;\n+---+\n| 5 |\n+---+\n| 5 |\n+---+\n\n[localhost:21000] &gt; set mem_limit=3m;\nMEM_LIMIT set to 3m\n[localhost:21000] &gt; select 5;\n+---+\n| 5 |\n+---+\n| 5 |\n+---+\n[localhost:21000] &gt; set mem_limit=3mb;\nMEM_LIMIT set to 3mb\n[localhost:21000] &gt; select 5;\n+---+\n| 5 |\n+---+\n</div><p>\n      The following examples show how unrecognized <span class=\"hue-doc-codeph\">MEM_LIMIT</span> values lead to\n      errors for subsequent queries.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; set mem_limit=3pb;\nMEM_LIMIT set to 3pb\n[localhost:21000] &gt; select 5;\nERROR: Failed to parse query memory limit from '3pb'.\n\n[localhost:21000] &gt; set mem_limit=xyz;\nMEM_LIMIT set to xyz\n[localhost:21000] &gt; select 5;\nQuery: select 5\nERROR: Failed to parse query memory limit from 'xyz'.\n</div><p>\n      The following examples shows the automatic query cancellation when the\n      <span class=\"hue-doc-codeph\">MEM_LIMIT</span> value is exceeded on any host involved in the Impala query.\n      First it runs a successful query and checks the largest amount of memory used on any node\n      for any stage of the query. Then it sets an artificially low <span class=\"hue-doc-codeph\">MEM_LIMIT</span>\n      setting so that the same query cannot run.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; select count(*) from customer;\nQuery: select count(*) from customer\n+----------+\n| count(*) |\n+----------+\n| 150000   |\n+----------+\n\n[localhost:21000] &gt; select count(distinct c_name) from customer;\nQuery: select count(distinct c_name) from customer\n+------------------------+\n| count(distinct c_name) |\n+------------------------+\n| 150000                 |\n+------------------------+\n\n[localhost:21000] &gt; summary;\n+--------------+--------+--------+----------+----------+---------+------------+----------+---------------+---------------+\n| Operator     | #Hosts | #Inst  | Avg Time | Max Time | #Rows   | Est. #Rows | Peak Mem | Est. Peak Mem | Detail        |\n+--------------+--------+--------+----------+----------+---------+------------+----------+---------------+---------------+\n| 06:AGGREGATE | 1      | 1      | 230.00ms | 230.00ms | 1       | 1          | 16.00 KB | -1 B          | FINALIZE      |\n| 05:EXCHANGE  | 1      | 1      | 43.44us  | 43.44us  | 1       | 1          | 0 B      | -1 B          | UNPARTITIONED |\n| 02:AGGREGATE | 1      | 1      | 227.14ms | 227.14ms | 1       | 1          | 12.00 KB | 10.00 MB      |               |\n| 04:AGGREGATE | 1      | 1      | 126.27ms | 126.27ms | 150.00K | 150.00K    | 15.17 MB | 10.00 MB      |               |\n| 03:EXCHANGE  | 1      | 1      | 44.07ms  | 44.07ms  | 150.00K | 150.00K    | 0 B      | 0 B           | HASH(c_name)  |\n<b>| 01:AGGREGATE | 1      | 1      | 361.94ms | 361.94ms | 150.00K | 150.00K    | 23.04 MB | 10.00 MB      |               |</b>\n| 00:SCAN HDFS | 1      | 1      | 43.64ms  | 43.64ms  | 150.00K | 150.00K    | 24.19 MB | 64.00 MB      | tpch.customer |\n+--------------+--------+--------+----------+----------+---------+------------+----------+---------------+---------------+\n\n[localhost:21000] &gt; set mem_limit=15mb;\nMEM_LIMIT set to 15mb\n[localhost:21000] &gt; select count(distinct c_name) from customer;\nQuery: select count(distinct c_name) from customer\nERROR:\nRejected query from pool default-pool: minimum memory reservation is greater than memory available to the query\nfor buffer reservations. Memory reservation needed given the current plan: 38.00 MB. Adjust either the mem_limit\nor the pool config (max-query-mem-limit, min-query-mem-limit) for the query to allow the query memory limit to be\nat least 70.00 MB. Note that changing the mem_limit may also change the plan. See the query profile for more\ninformation about the per-node memory requirements.</div></div></div></div>","title":"MEM_LIMIT Query Option"}