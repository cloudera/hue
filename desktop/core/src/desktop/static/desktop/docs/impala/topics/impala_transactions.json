{"body":"<div><div id=\"transactions\"><div class=\"hue-doc-title\">Impala Transactions</div><div><p>\n      A transaction is a single logical operation on the data. Impala supports transactions that\n      satisfy a level of consistency that improves the integrity and reliability of the data\n      before and after a transaction.\n    </p><p>\n      Specifically, Impala provides atomicity and isolation of insert operations on\n      transactional tables. A single table insert is either committed in full or not committed,\n      and the results of the insert operation are not visible to other query operations until\n      the operation is committed.\n    </p><p>\n      For single table, the inserts are ordered, so if Impala doesn't see a committed insert, it\n      won't see any insert committed after it.\n    </p><p>\n      For insert-only transactional tables, you can perform the following statements:\n      <span class=\"hue-doc-codeph\">CREATE TABLE</span>, <span class=\"hue-doc-codeph\">DROP TABLE</span>, <span class=\"hue-doc-codeph\">TRUNCATE</span>,\n      <span class=\"hue-doc-codeph\">INSERT</span>, <span class=\"hue-doc-codeph\">SELECT</span></p><p>\n      All transactions in Impala automatically commit at the end of the statement. Currently,\n      Impala does not support multi-statement transactions.\n    </p><p>\n      Insert-only tables must be the managed and file-format based tables, such as Parquet,\n      Avro, and text.\n    </p><div class=\"hue-doc-note\">      Impala does not support changing transactional properties of tables. For example, you\n      cannot alter a transactional table to a non-transactional table.\n    </div></div></div></div>","title":"Impala Transactions"}