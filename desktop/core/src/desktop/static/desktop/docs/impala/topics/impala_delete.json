{"body":"<div><div id=\"delete\"><div class=\"hue-doc-title\">DELETE Statement (Impala 2.8 or higher only)</div><div><p>\n      Deletes an arbitrary number of rows from a Kudu table.\n      This statement only works for Impala tables that use the Kudu storage engine.\n    </p><p id=\"syntax_blurb\"><b>Syntax:</b></p><div class=\"hue-doc-codeblock\">DELETE [FROM] [<span class=\"hue-doc-varname\">database_name</span>.]<span class=\"hue-doc-varname\">table_name</span> [ WHERE <span class=\"hue-doc-varname\">where_conditions</span> ]\n\nDELETE <span class=\"hue-doc-varname\">table_ref</span> FROM [<span class=\"hue-doc-varname\">joined_table_refs</span>] [ WHERE <span class=\"hue-doc-varname\">where_conditions</span> ]\n</div><p>\n      The first form evaluates rows from one table against an optional\n      <span class=\"hue-doc-codeph\">WHERE</span> clause, and deletes all the rows that\n      match the <span class=\"hue-doc-codeph\">WHERE</span> conditions, or all rows if\n      <span class=\"hue-doc-codeph\">WHERE</span> is omitted.\n    </p><p>\n      The second form evaluates one or more join clauses, and deletes\n      all matching rows from one of the tables. The join clauses can\n      include non-Kudu tables, but the table from which the rows\n      are deleted must be a Kudu table. The <span class=\"hue-doc-codeph\">FROM</span>\n      keyword is required in this case, to separate the name of\n      the table whose rows are being deleted from the table names\n      of the join clauses.\n    </p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      The conditions in the <span class=\"hue-doc-codeph\">WHERE</span> clause are the same ones allowed\n      for the <span class=\"hue-doc-codeph\">SELECT</span> statement. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_select.xml\" data-doc-anchor-id=\"select\">SELECT Statement</a>\n      for details.\n    </p><p>\n      The conditions in the <span class=\"hue-doc-codeph\">WHERE</span> clause can refer to\n      any combination of primary key columns or other columns. Referring to\n      primary key columns in the <span class=\"hue-doc-codeph\">WHERE</span> clause is more efficient\n      than referring to non-primary key columns.\n    </p><p>\n      If the <span class=\"hue-doc-codeph\">WHERE</span> clause is omitted, all rows are removed from the table.\n    </p><p>\n      Because Kudu currently does not enforce strong consistency during concurrent DML operations,\n      be aware that the results after this statement finishes might be different than you\n      intuitively expect:\n    </p><ul><li><p>\n          If some rows cannot be deleted because their\n          some primary key columns are not found, due to their being deleted\n          by a concurrent <span class=\"hue-doc-codeph\">DELETE</span> operation,\n          the statement succeeds but returns a warning.\n        </p></li><li><p>\n          A <span class=\"hue-doc-codeph\">DELETE</span> statement might also overlap with\n          <span class=\"hue-doc-codeph\">INSERT</span>, <span class=\"hue-doc-codeph\">UPDATE</span>,\n          or <span class=\"hue-doc-codeph\">UPSERT</span> statements running concurrently on the same table.\n          After the statement finishes, there might be more or fewer rows than expected in the table\n          because it is undefined whether the <span class=\"hue-doc-codeph\">DELETE</span> applies to rows that are\n          inserted or updated while the <span class=\"hue-doc-codeph\">DELETE</span> is in progress.\n        </p></li></ul><p>\n      The number of affected rows is reported in an <span class=\"hue-doc-cmdname\">impala-shell</span> message\n      and in the query profile.\n    </p><p id=\"dml_blurb_kudu\"><b>Statement type:</b> DML\n      </p><div class=\"hue-doc-note\" id=\"compute_stats_next\">        After adding or replacing data in a table used in performance-critical queries, issue a\n        <span class=\"hue-doc-codeph\">COMPUTE STATS</span> statement to make sure all statistics are up-to-date.\n        Consider updating statistics for a table after any <span class=\"hue-doc-codeph\">INSERT</span>, <span class=\"hue-doc-codeph\">LOAD\n        DATA</span>, or <span class=\"hue-doc-codeph\">CREATE TABLE AS SELECT</span> statement in Impala, or after\n        loading data through Hive and doing a <span class=\"hue-doc-codeph\">REFRESH\n        <span class=\"hue-doc-varname\">table_name</span></span> in Impala. This technique is especially important\n        for tables that are very large, used in join queries, or both.\n      </div><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      The following examples show how to delete rows from a specified\n      table, either all rows or rows that match a <span class=\"hue-doc-codeph\">WHERE</span>\n      clause:\n    </p><div class=\"hue-doc-codeblock\">-- Deletes all rows. The FROM keyword is optional.\nDELETE FROM kudu_table;\nDELETE kudu_table;\n\n-- Deletes 0, 1, or more rows.\n-- (If c1 is a single-column primary key, the statement could only\n-- delete 0 or 1 rows.)\nDELETE FROM kudu_table WHERE c1 = 100;\n\n-- Deletes all rows that match all the WHERE conditions.\nDELETE FROM kudu_table WHERE\n  (c1 &gt; c2 OR c3 IN ('hello','world')) AND c4 IS NOT NULL;\nDELETE FROM t1 WHERE\n  (c1 IN (1,2,3) AND c2 &gt; c3) OR c4 IS NOT NULL;\nDELETE FROM time_series WHERE\n  year = 2016 AND month IN (11,12) AND day &gt; 15;\n\n-- WHERE condition with a subquery.\nDELETE FROM t1 WHERE\n  c5 IN (SELECT DISTINCT other_col FROM other_table);\n\n-- Does not delete any rows, because the WHERE condition is always false.\nDELETE FROM kudu_table WHERE 1 = 0;\n</div><p>\n      The following examples show how to delete rows that are part\n      of the result set from a join:\n    </p><div class=\"hue-doc-codeblock\">-- Remove _all_ rows from t1 that have a matching X value in t2.\nDELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x;\n\n-- Remove _some_ rows from t1 that have a matching X value in t2.\nDELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x\n  WHERE t1.y = FALSE and t2.z &gt; 100;\n\n-- Delete from a Kudu table based on a join with a non-Kudu table.\nDELETE t1 FROM kudu_table t1 JOIN non_kudu_table t2 ON t1.x = t2.x;\n\n-- The tables can be joined in any order as long as the Kudu table\n-- is specified as the deletion target.\nDELETE t2 FROM non_kudu_table t1 JOIN kudu_table t2 ON t1.x = t2.x;\n</div><p id=\"related_info\"><b>Related information:</b></p><p><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_kudu.xml\" data-doc-anchor-id=\"impala_kudu\">Using Impala to Query Kudu Tables</a>, <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_insert.xml\" data-doc-anchor-id=\"insert\">INSERT Statement</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_update.xml\" data-doc-anchor-id=\"update\">UPDATE Statement (Impala 2.8 or higher only)</a>, <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_upsert.xml\" data-doc-anchor-id=\"upsert\">UPSERT Statement (Impala 2.8 or higher only)</a></p></div></div></div>","title":"DELETE Statement (Impala 2.8 or higher only)"}