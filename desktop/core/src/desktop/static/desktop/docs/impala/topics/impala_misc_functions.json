{"body":"<div><div id=\"misc_functions\"><div class=\"hue-doc-title\">Impala Miscellaneous Functions</div><div><p>\n      Impala supports the following utility functions that do not operate on a particular column\n      or data type:\n    </p><ul><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/current_database\">CURRENT_DATABASE</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/effective_user\">EFFECTIVE_USER</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/logged_in_user\">LOGGED_IN_USER</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/pid\">PID</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/sleep\">SLEEP</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/user\">USER</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/uuid\">UUID</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/version\">VERSION</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_misc_functions.xml\" data-doc-anchor-id=\"misc_functions/coordinator\">COORDINATOR</a></li></ul><dl><dt id=\"current_database\">\n          CURRENT_DATABASE()\n        </dt><dd><b>Purpose:</b> Returns the database that the session is currently using, either\n          <span class=\"hue-doc-codeph\">default</span> if no database has been selected, or whatever database the\n          session switched to through a <span class=\"hue-doc-codeph\">USE</span> statement or the\n          <span class=\"hue-doc-cmdname\">impalad</span><span class=\"hue-doc-codeph\">-d</span> option.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p></dd><dt id=\"effective_user\">\n          EFFECTIVE_USER()\n        </dt><dd><b>Purpose:</b> Typically returns the same value as <span class=\"hue-doc-codeph\">USER()</span>. If\n          delegation is enabled, it returns the ID of the delegated user.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p><p><b>Added in:</b>Impala 2.2.5</p></dd><dt id=\"logged_in_user\">\n          LOGGED_IN_USER()\n        </dt><dd><b>Purpose:</b> Typically returns the same value as <span class=\"hue-doc-codeph\">USER()</span>. If\n          delegation is enabled, it returns the ID of the delegated user.\n          <p><span class=\"hue-doc-codeph\">LOGGED_IN_USER()</span> is an alias of <span class=\"hue-doc-codeph\">EFFECTIVE_USER()</span>.\n          </p><p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p><p><b>Added in:</b>Impala 3.1</p></dd><dt id=\"pid\">\n          PID()\n        </dt><dd><b>Purpose:</b> Returns the process ID of the <span class=\"hue-doc-cmdname\">impalad</span> daemon that\n          the session is connected to. You can use it during low-level debugging, to issue Linux\n          commands that trace, show the arguments, and so on the <span class=\"hue-doc-cmdname\">impalad</span>\n          process.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">INT</span></p></dd><dt id=\"sleep\">\n          SLEEP(INT ms)\n        </dt><dd><b>Purpose:</b> Pauses the query for a specified number of milliseconds. For slowing\n          down queries with small result sets enough to monitor runtime execution, memory usage,\n          or other factors that otherwise would be difficult to capture during the brief\n          interval of query execution. When used in the <span class=\"hue-doc-codeph\">SELECT</span> list, it is\n          called once for each row in the result set; adjust the number of milliseconds\n          accordingly. For example, a query <span class=\"hue-doc-codeph\">SELECT *, SLEEP(5) FROM\n          table_with_1000_rows</span> would take at least 5 seconds to complete (5\n          milliseconds * 1000 rows in result set). To avoid an excessive number of concurrent\n          queries, use this function for troubleshooting on test and development systems, not\n          for production queries.\n          <p><b>Return type:</b> N/A\n          </p></dd><dt id=\"user\">\n          USER()\n        </dt><dd><b>Purpose:</b> Returns the username of the Linux user who is connected to the\n          <span class=\"hue-doc-cmdname\">impalad</span> daemon. Typically called a single time, in a query without\n          any <span class=\"hue-doc-codeph\">FROM</span> clause, to understand how authorization settings apply in a\n          security context; once you know the logged-in username, you can check which groups\n          that user belongs to, and from the list of groups you can check which roles are\n          available to those groups through the authorization policy file.\n          <p id=\"user_kerberized\">\n        In Impala 2.0 and later, <span class=\"hue-doc-codeph\">user()</span> returns the full Kerberos principal\n        string, such as <span class=\"hue-doc-codeph\">user@example.com</span>, in a Kerberized environment.\n      </p><p>\n            When delegation is enabled, consider calling the <span class=\"hue-doc-codeph\">EFFECTIVE_USER()</span>\n            function instead.\n          </p><p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p></dd><dt id=\"uuid\">\n          UUID()\n        </dt><dd><b>Purpose:</b> Returns a\n          <a class=\"hue-doc-external-link\" href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" target=\"_blank\">universal\n          unique identifier</a>, a 128-bit value encoded as a string with groups of\n          hexadecimal digits separated by dashes.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p><p id=\"added_in_250\"><b>Added in:</b>Impala 2.5.0</p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n            Ascending numeric sequences of type <span class=\"hue-doc-codeph\">BIGINT</span> are often used as\n            identifiers within a table, and as join keys across multiple tables. The\n            <span class=\"hue-doc-codeph\">UUID()</span> value is a convenient alternative that does not require\n            storing or querying the highest sequence number. For example, you can use it to\n            quickly construct new unique identifiers during a data import job, or to combine\n            data from different tables without the likelihood of ID collisions.\n          </p><p id=\"example_blurb\"><b>Examples:</b></p><div class=\"hue-doc-codeblock\">-- Each call to uuid() produces a new arbitrary value.\nselect uuid();\n+--------------------------------------+\n| uuid()                               |\n+--------------------------------------+\n| c7013e25-1455-457f-bf74-a2046e58caea |\n+--------------------------------------+\n\n-- If you get a UUID for each row of a result set, you can use it as a\n-- unique identifier within a table, or even a unique ID across tables.\nselect uuid() from four_row_table;\n+--------------------------------------+\n| uuid()                               |\n+--------------------------------------+\n| 51d3c540-85e5-4cb9-9110-604e53999e2e |\n| 0bb40071-92f6-4a59-a6a4-60d46e9703e2 |\n| 5e9d7c36-9842-4a96-862d-c13cd0457c02 |\n| cae29095-0cc0-4053-a5ea-7fcd3c780861 |\n+--------------------------------------+\n</div></dd><dt id=\"version\">\n          VERSION()\n        </dt><dd><b>Purpose:</b> Returns information such as the precise version number and build date\n          for the <span class=\"hue-doc-codeph\">impalad</span> daemon that you are currently connected to. Typically\n          used to confirm that you are connected to the expected level of Impala to use a\n          particular feature, or to connect to several nodes and confirm they are all running\n          the same level of <span class=\"hue-doc-cmdname\">impalad</span>.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span> (with one or more embedded newlines)\n          </p></dd><dt id=\"coordinator\">\n          COORDINATOR()\n        </dt><dd><b>Purpose:</b> Returns the name of the host which is running the\n          <span class=\"hue-doc-codeph\">impalad</span> daemon that is acting as the <span class=\"hue-doc-codeph\">coordinator</span> for\n          the current query.\n          <p><b>Return type:</b><span class=\"hue-doc-codeph\">STRING</span></p><p><b>Added in:</b>Impala 3.1</p></dd></dl></div></div></div>","title":"Impala Miscellaneous Functions"}