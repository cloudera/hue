{"body":"<div><div><div class=\"hue-doc-title\">Data Types</div><div><p>\n      Impala supports a set of data types that you can use for table columns, expression values, and function\n      arguments and return values.\n    </p><div class=\"hue-doc-note\">\n      Currently, Impala supports only scalar types, not composite or nested types. Accessing a table containing any\n      columns with unsupported types causes an error.\n    </div><div><div>Continue reading:</div><ul><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_array.xml\">ARRAY Complex Type (Impala 2.3 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_bigint.xml\">BIGINT Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_boolean.xml\">BOOLEAN Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_char.xml\">CHAR Data Type (Impala 2.0 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_decimal.xml\">DECIMAL Data Type (Impala 1.4 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_double.xml\">DOUBLE Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_float.xml\">FLOAT Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_int.xml\">INT Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_map.xml\">MAP Complex Type (Impala 2.3 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_real.xml\">REAL Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_smallint.xml\">SMALLINT Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_string.xml\">STRING Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_struct.xml\">STRUCT Complex Type (Impala 2.3 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_timestamp.xml\">TIMESTAMP Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_tinyint.xml\">TINYINT Data Type</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_varchar.xml\">VARCHAR Data Type (Impala 2.0 or higher only)</a></li><li><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_complex_types.xml\">Complex Types (Impala 2.3 or higher only)</a></li></ul></div><p>\n      For the notation to write literals of each of these data types, see\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_literals.xml\" data-doc-anchor-id=\"literals\">Literals</a>.\n    </p><p>\n      See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_langref_unsupported.xml\" data-doc-anchor-id=\"langref_hiveql_delta\">SQL Differences Between Impala and Hive</a> for differences between Impala and\n      Hive data types.\n    </p></div></div></div>","title":"Data Types"}