{"body":"<div><div id=\"create_view\"><div class=\"hue-doc-title\">CREATE VIEW Statement</div><div><p>\n      The <span class=\"hue-doc-codeph\">CREATE VIEW</span> statement lets you create a shorthand abbreviation for a\n      more complicated query. The base query can involve joins, expressions, reordered columns,\n      column aliases, and other SQL features that can make a query hard to understand or\n      maintain.\n    </p><p>\n      Because a view is purely a logical construct (an alias for a query) with no physical data\n      behind it, <span class=\"hue-doc-codeph\">ALTER VIEW</span> only involves changes to metadata in the metastore\n      database, not any data files in HDFS.\n    </p><p id=\"syntax_blurb\"><b>Syntax:</b></p><div class=\"hue-doc-codeblock\">CREATE VIEW [IF NOT EXISTS] <span class=\"hue-doc-varname\">view_name</span>\n    [(<span class=\"hue-doc-varname\">column_name</span> [COMMENT '<span class=\"hue-doc-varname\">column_comment</span>'][, ...])]\n    [COMMENT '<span class=\"hue-doc-varname\">view_comment</span>']\n  AS <span class=\"hue-doc-varname\">select_statement</span></div><p id=\"ddl_blurb\"><b>Statement type:</b> DDL\n      </p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      The <span class=\"hue-doc-codeph\">CREATE VIEW</span> statement can be useful in scenarios such as the\n      following:\n    </p><ul><li>\n        To turn even the most lengthy and complicated SQL query into a one-liner. You can issue\n        simple queries against the view from applications, scripts, or interactive queries in\n        <span class=\"hue-doc-cmdname\">impala-shell</span>. For example:\n<div class=\"hue-doc-codeblock\">select * from <span class=\"hue-doc-varname\">view_name</span>;\nselect * from <span class=\"hue-doc-varname\">view_name</span> order by c1 desc limit 10;</div>\n        The more complicated and hard-to-read the original query, the more benefit there is to\n        simplifying the query using a view.\n      </li><li>\n        To hide the underlying table and column names, to minimize maintenance problems if those\n        names change. In that case, you re-create the view using the new names, and all queries\n        that use the view rather than the underlying tables keep running with no changes.\n      </li><li>\n        To experiment with optimization techniques and make the optimized queries available to\n        all applications. For example, if you find a combination of <span class=\"hue-doc-codeph\">WHERE</span>\n        conditions, join order, join hints, and so on that works the best for a class of\n        queries, you can establish a view that incorporates the best-performing techniques.\n        Applications can then make relatively simple queries against the view, without repeating\n        the complicated and optimized logic over and over. If you later find a better way to\n        optimize the original query, when you re-create the view, all the applications\n        immediately take advantage of the optimized base query.\n      </li><li>\n        To simplify a whole class of related queries, especially complicated queries involving\n        joins between multiple tables, complicated expressions in the column list, and other SQL\n        syntax that makes the query difficult to understand and debug. For example, you might\n        create a view that joins several tables, filters using several <span class=\"hue-doc-codeph\">WHERE</span>\n        conditions, and selects several columns from the result set. Applications might issue\n        queries against this view that only vary in their <span class=\"hue-doc-codeph\">LIMIT</span>, <span class=\"hue-doc-codeph\">ORDER\n        BY</span>, and similar simple clauses.\n      </li></ul><p>\n      For queries that require repeating complicated clauses over and over again, for example in\n      the select list, <span class=\"hue-doc-codeph\">ORDER BY</span>, and <span class=\"hue-doc-codeph\">GROUP BY</span> clauses, you can\n      use the <span class=\"hue-doc-codeph\">WITH</span> clause as an alternative to creating a view.\n    </p><p>\n      You can optionally specify the table-level and the column-level comments as in the\n      <span class=\"hue-doc-codeph\">CREATE TABLE</span> statement.\n    </p><p id=\"complex_types_blurb\"><b>Complex type considerations:</b></p><p id=\"complex_types_views\">\n        For tables containing complex type columns (<span class=\"hue-doc-codeph\">ARRAY</span>,\n        <span class=\"hue-doc-codeph\">STRUCT</span>, or <span class=\"hue-doc-codeph\">MAP</span>), you typically use join queries to\n        refer to the complex values. You can use views to hide the join notation, making such\n        tables seem like traditional denormalized tables, and making those tables queryable by\n        business intelligence tools that do not have built-in support for those complex types.\n        See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_complex_types.xml\" data-doc-anchor-id=\"complex_types_views\">Accessing Complex Type Data in Flattened Form Using Views</a> for details.\n      </p><p id=\"complex_types_views_caveat\">\n        Because you cannot directly issue <span class=\"hue-doc-codeph\">SELECT <span class=\"hue-doc-varname\">col_name</span></span>\n        against a column of complex type, you cannot use a view or a <span class=\"hue-doc-codeph\">WITH</span>\n        clause to <q>rename</q> a column by selecting it with a column alias.\n      </p><p id=\"sync_ddl_blurb\">\n        If you connect to different Impala nodes within an <span class=\"hue-doc-cmdname\">impala-shell</span>\n        session for load-balancing purposes, you can enable the <span class=\"hue-doc-codeph\">SYNC_DDL</span> query\n        option to make each DDL statement wait before returning, until the new or changed\n        metadata has been received by all the Impala nodes. See\n        <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_sync_ddl.xml\" data-doc-anchor-id=\"sync_ddl\">SYNC_DDL Query Option</a> for details.\n      </p><p id=\"security_blurb\"><b>Security considerations:</b></p><p id=\"redaction_yes\">\n        If these statements in your environment contain sensitive literal values such as credit\n        card numbers or tax identifiers, Impala can redact this sensitive information when\n        displaying the statements in log files and other administrative contexts. See\n        \n    the documentation for your Apache Hadoop distribution\n   for details.\n      </p><p id=\"cancel_blurb_no\"><b>Cancellation:</b> Cannot be cancelled.\n      </p><p id=\"permissions_blurb_no\"><b>HDFS permissions:</b> This statement does not touch any HDFS files or directories,\n        therefore no HDFS permissions are required.\n      </p><p id=\"example_blurb\"><b>Examples:</b></p><div class=\"hue-doc-codeblock\">-- Create a view that is exactly the same as the underlying table.\nCREATE VIEW v1 AS SELECT * FROM t1;\n\n-- Create a view that includes only certain columns from the underlying table.\nCREATE VIEW v2 AS SELECT c1, c3, c7 FROM t1;\n\n-- Create a view that filters the values from the underlying table.\nCREATE VIEW v3 AS SELECT DISTINCT c1, c3, c7 FROM t1 WHERE c1 IS NOT NULL AND c5 &gt; 0;\n\n-- Create a view that that reorders and renames columns from the underlying table.\nCREATE VIEW v4 AS SELECT c4 AS last_name, c6 AS address, c2 AS birth_date FROM t1;\n\n-- Create a view that runs functions to convert or transform certain columns.\nCREATE VIEW v5 AS SELECT c1, CAST(c3 AS STRING) c3, CONCAT(c4,c5) c5, TRIM(c6) c6, \"Constant\" c8 FROM t1;\n\n-- Create a view that hides the complexity of a view query.\nCREATE VIEW v6 AS SELECT t1.c1, t2.c2 FROM t1 JOIN t2 ON t1.id = t2.id;\n\n-- Create a view with a column comment and a table comment.\nCREATE VIEW v7 (c1 COMMENT 'Comment for c1', c2) COMMENT 'Comment for v7' AS SELECT t1.c1, t1.c2 FROM t1;\n</div><p id=\"related_info\"><b>Related information:</b></p><p><a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_views.xml\" data-doc-anchor-id=\"views\">Overview of Impala Views</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_alter_view.xml\" data-doc-anchor-id=\"alter_view\">ALTER VIEW Statement</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_drop_view.xml\" data-doc-anchor-id=\"drop_view\">DROP VIEW Statement</a></p></div></div></div>","title":"CREATE VIEW Statement"}