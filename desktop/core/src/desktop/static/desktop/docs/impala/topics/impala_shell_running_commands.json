{"body":"<div><div id=\"shell_running_commands\"><div class=\"hue-doc-title\">Running Commands and SQL Statements in impala-shell</div><div><p>\n      The following are a few of the key syntax and usage rules for running commands and SQL\n      statements in <span class=\"hue-doc-codeph\">impala-shell</span>.\n    </p><ul><li>\n        To see the full set of available commands, press <b>TAB</b> twice.\n      </li><li>\n        To cycle through and edit previous commands, click the up-arrow and down-arrow keys.\n      </li><li>\n        Use the standard set of keyboard shortcuts in GNU Readline library for editing and\n        cursor movement, such as <b>Ctrl-A</b> for the beginning of line and <b>Ctrl-E</b> for\n        the end of line.\n      </li><li>\n        Commands and SQL statements must be terminated by a semi-colon.\n      </li><li>\n        Commands and SQL statements can span multiple lines.\n      </li><li>\n        Use <span class=\"hue-doc-codeph\">--</span> to denote a single-line comment and /* */ to\n        denote a multi-line comment.\n\n        <p> A comment is considered part of the\n          statement it precedes, so when you enter a <span class=\"hue-doc-codeph\">--</span> or\n            <span class=\"hue-doc-codeph\">/* */</span> comment, you get a continuation prompt until\n          you finish entering a statement ending with a semicolon. For example:\n        </p><div class=\"hue-doc-codeblock\">[impala] &gt; -- This is a test comment\n                  &gt; SHOW TABLES LIKE 't*';\n</div></li><li>\n        If a comment contains the\n          <span class=\"hue-doc-codeph\">${<span class=\"hue-doc-varname\">variable_name</span>}</span> and it is not for\n        a variable substitution, the <span class=\"hue-doc-codeph\">$</span> character must be\n        escaped, e.g. <span class=\"hue-doc-codeph\">-- \\${hello}</span>.\n      </li></ul><p>\n      For information on available <span class=\"hue-doc-codeph\">impala-shell</span> commands, see\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_shell_commands.xml\" data-doc-anchor-id=\"shell_commands\">impala-shell Command Reference</a>.\n    </p></div><div id=\"impala-shell_variable\"><div class=\"hue-doc-title\">Variable Substitution in impala-shell</div><div><p>\n        In Impala 2.5 and higher, you can define substitution variables\n        to be used within SQL statements processed by <span class=\"hue-doc-cmdname\">impala-shell</span>.\n        <ol><li>\n            You specify the variable and its value as below.\n            <ul><li>\n                On the command line, you specify the option\n                <span class=\"hue-doc-codeph\">--var=<span class=\"hue-doc-varname\">variable_name</span>=<span class=\"hue-doc-varname\">value</span></span></li><li>\n                Within an interactive session or a script file processed by the\n                <span class=\"hue-doc-codeph\">-f</span> option, use the <span class=\"hue-doc-codeph\">SET\n                VAR:<span class=\"hue-doc-varname\">variable_name</span>=<span class=\"hue-doc-varname\">value</span></span> command.\n              </li></ul></li><li>\n            Use the above variable in SQL statements in the <span class=\"hue-doc-codeph\">impala-shell</span>\n            session using the notation:\n            <span class=\"hue-doc-codeph\">${VAR:<span class=\"hue-doc-varname\">variable_name</span>}</span>.\n          </li></ol></p><div class=\"hue-doc-note\">        Because this feature is part of <span class=\"hue-doc-cmdname\">impala-shell</span> rather than the\n        <span class=\"hue-doc-cmdname\">impalad</span> backend, make sure the client system you are connecting from\n        has the most recent <span class=\"hue-doc-cmdname\">impala-shell</span>. You can use this feature with a new\n        <span class=\"hue-doc-cmdname\">impala-shell</span> connecting to an older <span class=\"hue-doc-cmdname\">impalad</span>, but\n        not the reverse.\n      </div><p>\n        For example, here are some <span class=\"hue-doc-cmdname\">impala-shell</span> commands that define\n        substitution variables and then use them in SQL statements executed through the\n        <span class=\"hue-doc-codeph\">-q</span> and <span class=\"hue-doc-codeph\">-f</span> options. Notice how the <span class=\"hue-doc-codeph\">-q</span>\n        argument strings are single-quoted to prevent shell expansion of the\n        <span class=\"hue-doc-codeph\">${var:value}</span> notation, and any string literals within the queries are\n        enclosed by double quotation marks.\n      </p><div class=\"hue-doc-codeblock\">$ impala-shell --var=tname=table1 --var=colname=x --var=coltype=string -q 'CREATE TABLE ${var:tname} (${var:colname} ${var:coltype}) STORED AS PARQUET'\nQuery: CREATE TABLE table1 (x STRING) STORED AS PARQUET\n</div><p>\n        The below example shows a substitution variable passed in by the <span class=\"hue-doc-codeph\">--var</span>\n        option, and then referenced by statements issued interactively. Then the variable is\n        reset with the <span class=\"hue-doc-codeph\">SET</span> command.\n      </p><div class=\"hue-doc-codeblock\">$ impala-shell --quiet --var=tname=table1\n\n[impala] &gt; SELECT COUNT(*) FROM ${var:tname};\n\n[impala] &gt; SET VAR:tname=table2;\n[impala] &gt; SELECT COUNT(*) FROM ${var:tname};\n</div></div></div></div></div>","title":"Running Commands and SQL Statements in impala-shell"}