{"body":"<div><div id=\"variance\"><div class=\"hue-doc-title\">VARIANCE, VARIANCE_SAMP, VARIANCE_POP, VAR_SAMP, VAR_POP Functions</div><div><p>\n      An aggregate function that returns the\n      <a class=\"hue-doc-external-link\" href=\"http://en.wikipedia.org/wiki/Variance\" target=\"_blank\">variance</a> of a set of\n      numbers. This is a mathematical property that signifies how far the values spread apart from the mean. The\n      return value can be zero (if the input is a single value, or a set of identical values), or a positive number\n      otherwise.\n    </p><p id=\"syntax_blurb\"><b>Syntax:</b></p><div class=\"hue-doc-codeblock\">{ VARIANCE | VAR[IANCE]_SAMP | VAR[IANCE]_POP } ([DISTINCT | ALL] <span class=\"hue-doc-varname\">expression</span>)</div><p>\n      This function works with any numeric data type.\n    </p><p id=\"former_odd_return_type_string\"><b>Return type:</b><span class=\"hue-doc-codeph\">DOUBLE</span> in Impala 2.0 and higher;\n        <span class=\"hue-doc-codeph\">STRING</span> in earlier releases\n      </p><p>\n      This function is typically used in mathematical formulas related to probability distributions.\n    </p><p>\n      The <span class=\"hue-doc-codeph\">VARIANCE_SAMP()</span> and <span class=\"hue-doc-codeph\">VARIANCE_POP()</span> functions compute the sample\n      variance and population variance, respectively, of the input values. (<span class=\"hue-doc-codeph\">VARIANCE()</span> is an alias\n      for <span class=\"hue-doc-codeph\">VARIANCE_SAMP()</span>.) Both functions evaluate all input rows matched by the query. The\n      difference is that <span class=\"hue-doc-codeph\">STDDEV_SAMP()</span> is scaled by <span class=\"hue-doc-codeph\">1/(N-1)</span> while\n      <span class=\"hue-doc-codeph\">STDDEV_POP()</span> is scaled by <span class=\"hue-doc-codeph\">1/N</span>.\n    </p><p>\n      The functions <span class=\"hue-doc-codeph\">VAR_SAMP()</span> and <span class=\"hue-doc-codeph\">VAR_POP()</span> are the same as\n      <span class=\"hue-doc-codeph\">VARIANCE_SAMP()</span> and <span class=\"hue-doc-codeph\">VARIANCE_POP()</span>, respectively. These aliases are\n      available in Impala 2.0 and later.\n    </p><p>\n      If no input rows match the query, the result of any of these functions is <span class=\"hue-doc-codeph\">NULL</span>. If a single\n      input row matches the query, the result of any of these functions is <span class=\"hue-doc-codeph\">\"0.0\"</span>.\n    </p><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      This example demonstrates how <span class=\"hue-doc-codeph\">VARIANCE()</span> and <span class=\"hue-doc-codeph\">VARIANCE_SAMP()</span> return the\n      same result, while <span class=\"hue-doc-codeph\">VARIANCE_POP()</span> uses a slightly different calculation to reflect that the\n      input data is considered part of a larger <q>population</q>.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; select variance(score) from test_scores;\n+-----------------+\n| variance(score) |\n+-----------------+\n| 812.25          |\n+-----------------+\n[localhost:21000] &gt; select variance_samp(score) from test_scores;\n+----------------------+\n| variance_samp(score) |\n+----------------------+\n| 812.25               |\n+----------------------+\n[localhost:21000] &gt; select variance_pop(score) from test_scores;\n+---------------------+\n| variance_pop(score) |\n+---------------------+\n| 811.438             |\n+---------------------+\n</div><p>\n      This example demonstrates that, because the return value of these aggregate functions is a\n      <span class=\"hue-doc-codeph\">STRING</span>, you convert the result with <span class=\"hue-doc-codeph\">CAST</span> if you need to do further\n      calculations as a numeric value.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; create table score_stats as select cast(stddev(score) as decimal(7,4)) `standard_deviation`, cast(variance(score) as decimal(7,4)) `variance` from test_scores;\n+-------------------+\n| summary           |\n+-------------------+\n| Inserted 1 row(s) |\n+-------------------+\n[localhost:21000] &gt; desc score_stats;\n+--------------------+--------------+---------+\n| name               | type         | comment |\n+--------------------+--------------+---------+\n| standard_deviation | decimal(7,4) |         |\n| variance           | decimal(7,4) |         |\n+--------------------+--------------+---------+\n</div><p id=\"restrictions_blurb\"><b>Restrictions:</b></p><p id=\"analytic_not_allowed_caveat\">\n        This function cannot be used in an analytic context. That is, the\n        <span class=\"hue-doc-codeph\">OVER()</span> clause is not allowed at all with this function.\n      </p><p id=\"related_info\"><b>Related information:</b></p><p>\n      The <span class=\"hue-doc-codeph\">STDDEV()</span>, <span class=\"hue-doc-codeph\">STDDEV_POP()</span>, and <span class=\"hue-doc-codeph\">STDDEV_SAMP()</span> functions\n      compute the standard deviation (square root of the variance) based on the results of\n      <span class=\"hue-doc-codeph\">VARIANCE()</span>, <span class=\"hue-doc-codeph\">VARIANCE_POP()</span>, and <span class=\"hue-doc-codeph\">VARIANCE_SAMP()</span>\n      respectively. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_stddev.xml\" data-doc-anchor-id=\"stddev\">STDDEV, STDDEV_SAMP, STDDEV_POP Functions</a> for details about the standard deviation property.\n    </p></div></div></div>","title":"VARIANCE, VARIANCE_SAMP, VARIANCE_POP, VAR_SAMP, VAR_POP Functions"}