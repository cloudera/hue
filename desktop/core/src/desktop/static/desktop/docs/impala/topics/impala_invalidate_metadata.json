{"body":"<div><div id=\"invalidate_metadata\"><div class=\"hue-doc-title\">INVALIDATE METADATA Statement</div><div><p>\n      The <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statement marks the metadata for one or all\n      tables as stale. The next time the Impala service performs a query against a table whose\n      metadata is invalidated, Impala reloads the associated metadata before the query proceeds.\n      As this is a very expensive operation compared to the incremental metadata update done by\n      the <span class=\"hue-doc-codeph\">REFRESH</span> statement, when possible, prefer <span class=\"hue-doc-codeph\">REFRESH</span>\n      rather than <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span>.\n    </p><p><span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> is required when the following changes are made\n      outside of Impala, in Hive and other Hive client, such as SparkSQL:\n      <ul><li>\n          Metadata of existing tables changes.\n        </li><li>\n          New tables are added, and Impala will use the tables.\n        </li><li>\n          The <span class=\"hue-doc-codeph\">SERVER</span> or <span class=\"hue-doc-codeph\">DATABASE</span> level Ranger privileges are\n          changed.\n        </li><li>\n          Block metadata changes, but the files remain the same (HDFS rebalance).\n        </li><li>\n          UDF jars change.\n        </li><li>\n          Some tables are no longer queried, and you want to remove their metadata from the\n          catalog and coordinator caches to reduce memory requirements.\n        </li></ul></p><p>\n      No <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> is needed when the changes are made by\n      <span class=\"hue-doc-codeph\">impalad</span>.\n    </p><p>\n      See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_hadoop.html#intro_metastore\" target=\"_blank\">Overview of Impala Metadata and the Metastore</a> for the information about the way\n      Impala uses metadata and how it shares the same metastore database as Hive.\n    </p><p>\n      Once issued, the <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statement cannot be cancelled.\n    </p><p id=\"syntax_blurb\"><b>Syntax:</b></p><div class=\"hue-doc-codeblock\">INVALIDATE METADATA [[<span class=\"hue-doc-varname\">db_name</span>.]<span class=\"hue-doc-varname\">table_name</span>]</div><p>\n      If there is no table specified, the cached metadata for all tables is flushed and synced\n      with Hive Metastore (HMS). If tables were dropped from the HMS, they will be removed from\n      the catalog, and if new tables were added, they will show up in the catalog.\n    </p><p>\n      If you specify a table name, only the metadata for that one table is flushed and synced\n      with the HMS.\n    </p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      To return accurate query results, Impala need to keep the metadata current for the\n      databases and tables queried. Therefore, if some other entity modifies information used by\n      Impala in the metastore, the information cached by Impala must be updated via\n      <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> or <span class=\"hue-doc-codeph\">REFRESH</span>.\n    </p><p id=\"refresh_vs_invalidate\"><span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> and <span class=\"hue-doc-codeph\">REFRESH</span> are counterparts:\n        <ul><li><span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> is an asynchronous operations that simply\n            discards the loaded metadata from the catalog and coordinator caches. After that\n            operation, the catalog and all the Impala coordinators only know about the existence\n            of databases and tables and nothing more. Metadata loading for tables is triggered\n            by any subsequent queries.\n          </li><li><span class=\"hue-doc-codeph\">REFRESH</span> reloads the metadata synchronously.\n            <span class=\"hue-doc-codeph\">REFRESH</span> is more lightweight than doing a full metadata load after a\n            table has been invalidated. <span class=\"hue-doc-codeph\">REFRESH</span> cannot detect changes in block\n            locations triggered by operations like HDFS balancer, hence causing remote reads\n            during query execution with negative performance implications.\n          </li></ul></p><p>\n      Use <span class=\"hue-doc-codeph\">REFRESH</span> after invalidating a specific table to separate the metadata\n      load from the first query that's run against that table.\n    </p><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      This example illustrates creating a new database and new table in Hive, then doing an\n      <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statement in Impala using the fully qualified table\n      name, after which both the new table and the new database are visible to Impala.\n    </p><p>\n      Before the <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statement was issued, Impala would give a\n      <q>not found</q> error if you tried to refer to those database or table names.\n    </p><div class=\"hue-doc-codeblock\">$ hive\nhive&gt; CREATE DATABASE new_db_from_hive;\nhive&gt; CREATE TABLE new_db_from_hive.new_table_from_hive (x INT);\nhive&gt; quit;\n\n$ impala-shell\n&gt; REFRESH new_db_from_hive.new_table_from_hive;\nERROR: AnalysisException: Database does not exist: new_db_from_hive\n\n&gt; INVALIDATE METADATA new_db_from_hive.new_table_from_hive;\n\n&gt; SHOW DATABASES LIKE 'new*';\n+--------------------+\n| new_db_from_hive   |\n+--------------------+\n\n&gt; SHOW TABLES IN new_db_from_hive;\n+---------------------+\n| new_table_from_hive |\n+---------------------+</div><p>\n      Use the <span class=\"hue-doc-codeph\">REFRESH</span> statement for incremental metadata update.\n    </p><div class=\"hue-doc-codeblock\">&gt; REFRESH new_table_from_hive;\n</div><p>\n      For more examples of using <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> with a combination of\n      Impala and Hive operations, see\n      <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_tutorial.html#tutorial_impala_hive\" target=\"_blank\">Switching Back and Forth Between Impala and Hive</a>.\n    </p><p id=\"hdfs_blurb\"><b>HDFS considerations:</b></p><p>\n      By default, the <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> command checks HDFS permissions of\n      the underlying data files and directories, caching this information so that a statement\n      can be cancelled immediately if for example the <span class=\"hue-doc-codeph\">impala</span> user does not have\n      permission to write to the data directory for the table. (This checking does not apply\n      when the <span class=\"hue-doc-cmdname\">catalogd</span> configuration option\n      <span class=\"hue-doc-codeph\">--load_catalog_in_background</span> is set to <span class=\"hue-doc-codeph\">false</span>, which it\n      is by default.) Impala reports any lack of write permissions as an <span class=\"hue-doc-codeph\">INFO</span>\n      message in the log file.\n    </p><p>\n      If you change HDFS permissions to make data readable or writeable by the Impala user,\n      issue another <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> to make Impala aware of the change.\n    </p><p id=\"kudu_blurb\"><b>Kudu considerations:</b></p><p id=\"kudu_metadata_intro\">By default, much of the metadata\n        for Kudu tables is handled by the underlying storage layer. Kudu tables\n        have less reliance on the Metastore database, and require less metadata\n        caching on the Impala side. For example, information about partitions in\n        Kudu tables is managed by Kudu, and Impala does not cache any block\n        locality metadata for Kudu tables. If the Kudu service is not integrated\n        with the Hive Metastore, Impala will manage Kudu table metadata in the\n        Hive Metastore.</p><p id=\"kudu_metadata_details\">\n        The <span class=\"hue-doc-codeph\">REFRESH</span> and <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> statements are\n        needed less frequently for Kudu tables than for HDFS-backed tables. Neither statement is\n        needed when data is added to, removed, or updated in a Kudu table, even if the changes\n        are made directly to Kudu through a client program using the Kudu API. Run\n        <span class=\"hue-doc-codeph\">REFRESH <span class=\"hue-doc-varname\">table_name</span></span> or <span class=\"hue-doc-codeph\">INVALIDATE METADATA\n        <span class=\"hue-doc-varname\">table_name</span></span> for a Kudu table only after making a change to\n        the Kudu table schema, such as adding or dropping a column.\n      </p><p id=\"related_info\"><b>Related information:</b></p><p><a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_hadoop.html#intro_metastore\" target=\"_blank\">Overview of Impala Metadata and the Metastore</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_refresh.xml\" data-doc-anchor-id=\"refresh\">REFRESH Statement</a></p></div></div></div>","title":"INVALIDATE METADATA Statement"}