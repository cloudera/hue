{"body":"<div><div id=\"impala_metadata\"><div class=\"hue-doc-title\">Metadata Management</div><div><p>\n      This topic describes various knobs you can use to control how Impala manages its metadata\n      in order to improve performance and scalability.\n    </p><p/></div><div id=\"on_demand_metadata\"><div class=\"hue-doc-title\">On-demand Metadata</div><div><p>\n        In previous versions of Impala, every coordinator kept a replica of all the cache in\n        <span class=\"hue-doc-codeph\">catalogd</span>, consuming large memory on each coordinator with no option to\n        evict. Metadata always propagated through the <span class=\"hue-doc-codeph\">statestored</span> and suffers\n        from head-of-line blocking, for example, one user loading a big table blocking another\n        user loading a small table.\n      </p><p>\n        With this new feature, the coordinators pull metadata as needed from\n        <span class=\"hue-doc-codeph\">catalogd</span> and cache it locally. The cached metadata gets evicted\n        automatically under memory pressure.\n      </p><p>\n        The granularity of on-demand metadata fetches is now at the partition level between the\n        coordinator and <span class=\"hue-doc-codeph\">catalogd</span>. Common use cases like add/drop partitions do\n        not trigger unnecessary serialization/deserialization of large metadata.\n      </p><p>\n        This feature is disabled by default.\n      </p><p>\n        The feature can be used in either of the following modes.\n        <dl><dt>\n              Metadata on-demand mode\n            </dt><dd>\n              In this mode, all coordinators use the metadata on-demand.\n            </dd><dd>\n              Set the following on <span class=\"hue-doc-codeph\">catalogd</span>:\n<div class=\"hue-doc-codeblock\">--catalog_topic_mode=minimal</div></dd><dd>\n              Set the following on all <span class=\"hue-doc-codeph\">impalad</span> coordinators:\n<div class=\"hue-doc-codeblock\">--use_local_catalog=true</div></dd><dt>\n              Mixed mode\n            </dt><dd>\n              In this mode, only some coordinators are enabled to use the metadata on-demand.\n            </dd><dd>\n              We recommend that you use the mixed mode only for testing local catalog’s impact\n              on heap usage.\n            </dd><dd>\n              Set the following on <span class=\"hue-doc-codeph\">catalogd</span>:\n<div class=\"hue-doc-codeblock\">--catalog_topic_mode=mixed</div></dd><dd>\n              Set the following on <span class=\"hue-doc-codeph\">impalad</span> coordinators with metdadata\n              on-demand:\n<div class=\"hue-doc-codeblock\">--use_local_catalog=true </div></dd><dt>Flags related to <span class=\"hue-doc-codeph\">use_local_catalog</span></dt><dd>When <span class=\"hue-doc-codeph\">use_local_catalog</span> is enabled or set to <span class=\"hue-doc-codeph\">True</span> on the impalad\n              coordinators the following list of flags configure various parameters as described below. It is not\n              recommended to change the default values on these flags.\n            </dd><dd><ul><li>The flag <span class=\"hue-doc-codeph\">local_catalog_cache_mb</span> (defaults to -1) configures the\n                  size of the catalog cache within each coordinator. With the default set to -1, the\n                  cache is auto-configured to 60% of the configured Java heap size. Note that the\n                  Java heap size is distinct from and typically smaller than the overall Impala\n                  memory limit.</li><li>The flag <span class=\"hue-doc-codeph\">local_catalog_cache_expiration_s</span> (defaults to 3600) configures the\n                  expiration time of the catalog cache within each impalad. Even if the configured\n                  cache capacity has not been reached, items are removed from the cache if they have not\n                  been accessed in the defined amount of time.</li><li>The flag <span class=\"hue-doc-codeph\">local_catalog_max_fetch_retries</span> (defaults to 40) configures\n                  the maximum number of retries needed for queries to fetch a metadata object from the impalad\n                  coordinator's local catalog cache.</li></ul></dd></dl></p></div></div><div id=\"auto_invalidate_metadata\"><div class=\"hue-doc-title\">Automatic Invalidation of Metadata Cache</div><div><p>\n        To keep the size of metadata bounded, <span class=\"hue-doc-codeph\">catalogd</span> periodically scans all\n        the tables and invalidates those not recently used. There are two types of\n        configurations for <span class=\"hue-doc-codeph\">catalogd</span> and <span class=\"hue-doc-codeph\">impalad</span>.\n      </p><dl><dt>\n            Time-based cache invalidation\n          </dt><dd><span class=\"hue-doc-codeph\">Catalogd</span> invalidates tables that are not recently used in the\n            specified time period (in seconds).\n          </dd><dd>\n            The <span class=\"hue-doc-codeph\">‑‑invalidate_tables_timeout_s</span> flag needs to be\n            applied to both <span class=\"hue-doc-codeph\">impalad</span> and <span class=\"hue-doc-codeph\">catalogd</span>.\n          </dd><dt>\n            Memory-based cache invalidation\n          </dt><dd>\n            When the memory pressure reaches 60% of JVM heap size after a Java garbage\n            collection in <span class=\"hue-doc-codeph\">catalogd</span>, Impala invalidates 10% of the least\n            recently used tables.\n          </dd><dd>\n            The <span class=\"hue-doc-codeph\">‑‑invalidate_tables_on_memory_pressure</span> flag needs\n            to be applied to both <span class=\"hue-doc-codeph\">impalad</span> and <span class=\"hue-doc-codeph\">catalogd</span>.\n          </dd></dl><p>\n        Automatic invalidation of metadata provides more stability with lower chances of running\n        out of memory, but the feature could potentially cause performance issues and may\n        require tuning.\n      </p></div></div><div id=\"auto_poll_hms_notification\"><div class=\"hue-doc-title\">Automatic Invalidation/Refresh of Metadata</div><div><p>\n        When tools such as Hive and Spark are used to process the raw data ingested into Hive\n        tables, new HMS metadata (database, tables, partitions) and filesystem metadata (new\n        files in existing partitions/tables) is generated. In previous versions of Impala, in\n        order to pick up this new information, Impala users needed to manually issue an\n        <span class=\"hue-doc-codeph\">INVALIDATE</span> or <span class=\"hue-doc-codeph\">REFRESH</span> commands.\n      </p><p>\n        When automatic invalidate/refresh of metadata is enabled, <span class=\"hue-doc-codeph\">catalogd</span>\n        polls Hive Metastore (HMS) notification events at a configurable interval and processes\n        the following changes:\n      </p><div class=\"hue-doc-note\">\t      This is a preview feature in Impala 3.3 and Impala 4.0\n\t      It is generally available and enabled by default from Impala 4.1 onwards.\n      </div><ul><li>\n          Invalidates the tables when it receives the <span class=\"hue-doc-codeph\">ALTER TABLE</span> event.\n        </li><li>\n          Refreshes the partition when it receives the <span class=\"hue-doc-codeph\">ALTER</span>,\n          <span class=\"hue-doc-codeph\">ADD</span>, or <span class=\"hue-doc-codeph\">DROP</span> partitions.\n        </li><li>\n          Adds the tables or databases when it receives the <span class=\"hue-doc-codeph\">CREATE TABLE</span> or\n          <span class=\"hue-doc-codeph\">CREATE DATABASE</span> events.\n        </li><li>\n          Removes the tables from <span class=\"hue-doc-codeph\">catalogd</span> when it receives the <span class=\"hue-doc-codeph\">DROP\n          TABLE</span> or <span class=\"hue-doc-codeph\">DROP DATABASE</span> events.\n        </li><li>\n          Refreshes the table and partitions when it receives the <span class=\"hue-doc-codeph\">INSERT</span>\n          events.\n          <p>\n            If the table is not loaded at the time of processing the <span class=\"hue-doc-codeph\">INSERT</span>\n            event, the event processor does not need to refresh the table and skips it.\n          </p></li><li>\n          Changes the database and updates <span class=\"hue-doc-codeph\">catalogd</span> when it receives the\n          <span class=\"hue-doc-codeph\">ALTER DATABASE</span> events. The following changes are supported. This\n          event does not invalidate the tables in the database.\n          <ul><li>\n              Change the database properties\n            </li><li>\n              Change the comment on the database\n            </li><li>\n              Change the owner of the database\n            </li><li>\n              Change the default location of the database\n              <p>\n                Changing the default location of the database does not move the tables of that\n                database to the new location. Only the new tables which are created subsequently\n                use the default location of the database in case it is not provided in the\n                create table statement.\n              </p></li></ul></li></ul><p>\n        This feature is controlled by the\n        <span class=\"hue-doc-codeph\">‑‑hms_event_polling_interval_s</span> flag. Start the\n        <span class=\"hue-doc-codeph\">catalogd</span> with the <span class=\"hue-doc-codeph\">‑‑hms_event_polling_interval_s</span>\n        flag set to a positive integer to enable the feature and set the polling frequency in\n        seconds. We recommend the value to be less than 5 seconds.\n      </p><p>\n        The following use cases are not supported:\n      </p><ul><li>\n          When you bypass HMS and add or remove data into table by adding files directly on the\n          filesystem, HMS does not generate the <span class=\"hue-doc-codeph\">INSERT</span> event, and the event\n          processor will not invalidate the corresponding table or refresh the corresponding\n          partition.\n          <p>\n            It is recommended that you use the <span class=\"hue-doc-codeph\">LOAD DATA</span> command to do the data\n            load in such cases, so that event processor can act on the events generated by the\n            <span class=\"hue-doc-codeph\">LOAD</span> command.\n          </p></li><li>\n          The Spark API that saves data to a specified location does not generate events in HMS,\n          thus is not supported. For example:\n<div class=\"hue-doc-codeblock\">Seq((1, 2)).toDF(\"i\", \"j\").write.save(\"/user/hive/warehouse/spark_etl.db/customers/date=01012019\")</div></li></ul><p>\n        This feature is turned off by default with the\n        <span class=\"hue-doc-codeph\">‑‑hms_event_polling_interval_s</span> flag set to\n        <span class=\"hue-doc-codeph\">0</span>.\n      </p></div><div id=\"configure_event_based_metadata_sync\"><div class=\"hue-doc-title\">Configure HMS for Event Based Automatic Metadata Sync</div><div><p>\n          To use the HMS event based metadata sync:\n        </p><ol><li>\n            Add the following entries to the <span class=\"hue-doc-codeph\">hive-site.xml</span> of the Hive\n            Metastore service.\n<div class=\"hue-doc-codeblock\"> &lt;property&gt;\n    &lt;name&gt;hive.metastore.transactional.event.listeners&lt;/name&gt;\n    &lt;value&gt;org.apache.hive.hcatalog.listener.DbNotificationListener&lt;/value&gt;\n  &lt;/property&gt;\n  &lt;property&gt;\n    &lt;name&gt;hive.metastore.dml.events&lt;/name&gt;\n    &lt;value&gt;true&lt;/true&gt;\n  &lt;/property&gt;</div></li><li>\n            Save <span class=\"hue-doc-codeph\">hive-site.xml</span>.\n          </li><li>\n            Set the <span class=\"hue-doc-codeph\">hive.metastore.dml.events</span> configuration key to\n            <span class=\"hue-doc-codeph\">true</span> in HiveServer2 service's <span class=\"hue-doc-codeph\">hive-site.xml</span>. This\n            configuration key needs to be set to <span class=\"hue-doc-codeph\">true</span> in both Hive services,\n            HiveServer2 and Hive Metastore.\n          </li><li>\n            If applicable, set the <span class=\"hue-doc-codeph\">hive.metastore.dml.events</span> configuration key\n            to <span class=\"hue-doc-codeph\">true</span> in <span class=\"hue-doc-codeph\">hive-site.xml</span> used by the Spark\n            applications (typically, <span class=\"hue-doc-codeph\">/etc/hive/conf/hive-site.xml</span>) so that the\n            <span class=\"hue-doc-codeph\">INSERT</span> events are generated when the Spark application inserts data\n            into existing tables and partitions.\n          </li><li>\n            Restart the HiveServer2, Hive Metastore, and Spark (if applicable) services.\n          </li></ol></div></div><div id=\"disable_event_based_metadata_sync\"><div class=\"hue-doc-title\">Disable Event Based Automatic Metadata Sync</div><div><p>\n          When the <span class=\"hue-doc-codeph\">‑‑hms_event_polling_interval_s</span> flag is set to a non-zero\n          value for your <span class=\"hue-doc-codeph\">catalogd</span>, the event-based automatic invalidation is\n          enabled for all databases and tables. If you wish to have the fine-grained control on\n          which tables or databases need to be synced using events, you can use the\n          <span class=\"hue-doc-codeph\">impala.disableHmsSync</span> property to disable the event processing at the\n          table or database level.\n        </p><p>\n          When you add the <span class=\"hue-doc-codeph\">DBPROPERTIES</span> or <span class=\"hue-doc-codeph\">TBLPROPERTIES</span> with\n          the <span class=\"hue-doc-codeph\">impala.disableHmsSync</span> key, the HMS event based sync is turned on\n          or off. The value of the <span class=\"hue-doc-codeph\">impala.disableHmsSync</span> property determines if\n          the event processing needs to be disabled for a particular table or database.\n        </p><ul><li>\n            If <span class=\"hue-doc-codeph\">'impala.disableHmsSync'='true'</span>, the events for that table or\n            database are ignored and not synced with HMS.\n          </li><li>\n            If <span class=\"hue-doc-codeph\">'impala.disableHmsSync'='false'</span> or if\n            <span class=\"hue-doc-codeph\">impala.disableHmsSync</span> is not set, the automatic sync with HMS is\n            enabled if the <span class=\"hue-doc-codeph\">‑‑hms_event_polling_interval_s</span> global flag is\n            set to non-zero.\n          </li></ul><ul><li>\n            To disable the event based HMS sync for a new database, set the\n            <span class=\"hue-doc-codeph\">impala.disableHmsSync</span> database properties in Hive as currently,\n            Impala does not support setting database properties:\n<div class=\"hue-doc-codeblock\">CREATE DATABASE &lt;name&gt; WITH DBPROPERTIES ('impala.disableHmsSync'='true');</div></li><li>\n            To enable or disable the event based HMS sync for a table:\n<div class=\"hue-doc-codeblock\">CREATE TABLE &lt;name&gt; WITH TBLPROPERTIES ('impala.disableHmsSync'='true' | 'false');</div></li><li>\n            To change the event based HMS sync at the table level:\n<div class=\"hue-doc-codeblock\">ALTER TABLE &lt;name&gt; WITH TBLPROPERTIES ('impala.disableHmsSync'='true' | 'false');</div></li></ul><p>\n          When both table and database level properties are set, the table level property takes\n          precedence. If the table level property is not set, then the database level property\n          is used to evaluate if the event needs to be processed or not.\n        </p><p>\n          If the property is changed from <span class=\"hue-doc-codeph\">true</span> (meaning events are skipped) to\n          <span class=\"hue-doc-codeph\">false</span> (meaning events are not skipped), you need to issue a manual\n          <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> command to reset event processor because it\n          doesn't know how many events have been skipped in the past and cannot know if the\n          object in the event is the latest. In such a case, the status of the event processor\n          changes to <span class=\"hue-doc-codeph\">NEEDS_INVALIDATE</span>.\n        </p></div></div><div id=\"event_processor_metrics\"><div class=\"hue-doc-title\">Metrics for Event Based Automatic Metadata Sync</div><div><p>\n          You can use the web UI of the <span class=\"hue-doc-codeph\">catalogd</span> to check the state of the\n          automatic invalidate event processor.\n        </p><p>\n          Under the web UI, there are two pages that presents the metrics for HMS event\n          processor that is responsible for the event based automatic metadata sync.\n          <ul><li><b>/metrics#events</b></li><li><b>/events</b><p>\n                This provides a detailed view of the metrics of the event processor, including\n                min, max, mean, median, of the durations and rate metrics for all the counters\n                listed on the <b>/metrics#events</b> page.\n              </p></li></ul></p></div><div id=\"concept_gch_xzm_1hb\"><div class=\"hue-doc-title\">/metrics#events Page</div><div><p>\n            The <b>/metrics#events</b> page provides the following metrics about the HMS event\n            processor.\n          </p><table id=\"events-tbl\"><thead><tr><td>\n                    Name\n                  </td><td>\n                    Description\n                  </td></tr></thead><tbody><tr><td>\n                    events-processor.avg-events-fetch-duration\n                  </td><td>\n                    Average duration to fetch a batch of events and process it.\n                  </td></tr><tr><td>\n                    events-processor.avg-events-process-duration\n                  </td><td>\n                    Average time taken to process a batch of events received from the Metastore.\n                  </td></tr><tr><td>\n                    events-processor.events-received\n                  </td><td>\n                    Total number of the Metastore events received.\n                  </td></tr><tr><td>\n                    events-processor.events-received-15min-rate\n                  </td><td>\n                    Exponentially weighted moving average (EWMA) of number of events received in\n                    last 15 min.\n\n                    <p>\n                      This rate of events can be used to determine if there are spikes in event\n                      processor activity during certain hours of the day.\n                    </p></td></tr><tr><td>\n                    events-processor.events-received-1min-rate\n                  </td><td>\n                    Exponentially weighted moving average (EWMA) of number of events received in\n                    last 1 min.\n\n                    <p>\n                      This rate of events can be used to determine if there are spikes in event\n                      processor activity during certain hours of the day.\n                    </p></td></tr><tr><td>\n                    events-processor.events-received-5min-rate\n                  </td><td>\n                    Exponentially weighted moving average (EWMA) of number of events received in\n                    last 5 min.\n\n                    <p>\n                      This rate of events can be used to determine if there are spikes in event\n                      processor activity during certain hours of the day.\n                    </p></td></tr><tr><td>\n                    events-processor.events-skipped\n                  </td><td>\n                    Total number of the Metastore events skipped.\n\n                    <p>\n                      Events can be skipped based on certain flags are table and database level.\n                      You can use this metric to make decisions, such as:\n                      <ul><li>\n                          If most of the events are being skipped, see if you might just turn\n                          off the event processing.\n                        </li><li>\n                          If most of the events are not skipped, see if you need to add flags on\n                          certain databases.\n                        </li></ul></p></td></tr><tr><td>\n                    events-processor.status\n                  </td><td>\n                    Metastore event processor status to see if there are events being received\n                    or not. Possible states are:\n\n                    <ul><li><span class=\"hue-doc-codeph\">PAUSED</span><p>\n                          The event processor is paused because catalog is being reset\n                          concurrently.\n                        </p></li><li><span class=\"hue-doc-codeph\">ACTIVE</span><p>\n                          The event processor is scheduled at a given frequency.\n                        </p></li><li><span class=\"hue-doc-codeph\">ERROR</span></li><li>\n                        The event processor is in error state and event processing has stopped.\n                      </li><li><span class=\"hue-doc-codeph\">NEEDS_INVALIDATE</span><p>\n                          The event processor could not resolve certain events and needs a\n                          manual <span class=\"hue-doc-codeph\">INVALIDATE</span> command to reset the state.\n                        </p></li><li><span class=\"hue-doc-codeph\">STOPPED</span><p>\n                          The event processing has been shutdown. No events will be processed.\n                        </p></li><li><span class=\"hue-doc-codeph\">DISABLED</span><p>\n                          The event processor is not configured to run.\n                        </p></li></ul></td></tr></tbody></table></div></div></div></div></div></div>","title":"Metadata Management"}