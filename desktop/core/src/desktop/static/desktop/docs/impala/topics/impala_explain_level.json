{"body":"<div><div id=\"explain_level\"><div class=\"hue-doc-title\">EXPLAIN_LEVEL Query Option</div><div><p> Controls the amount of detail provided in the output of the\n        <span class=\"hue-doc-codeph\">EXPLAIN</span> statement. The basic output can help you\n      identify high-level performance issues such as scanning a higher volume of\n      data or more partitions than you expect. The higher levels of detail show\n      how intermediate results flow between nodes and how different SQL\n      operations such as <span class=\"hue-doc-codeph\">ORDER BY</span>, <span class=\"hue-doc-codeph\">GROUP BY</span>,\n      joins, and <span class=\"hue-doc-codeph\">WHERE</span> clauses are implemented within a\n      distributed query. </p><p><b>Type:</b><span class=\"hue-doc-codeph\">STRING</span> or <span class=\"hue-doc-codeph\">INT</span></p><p><b>Default:</b><span class=\"hue-doc-codeph\">1</span></p><p><b>Arguments:</b></p><p>\n      The allowed range of numeric values for this option is 0 to 3:\n    </p><ul><li><span class=\"hue-doc-codeph\">0</span> or <span class=\"hue-doc-codeph\">MINIMAL</span>: A barebones list, one line per operation. Primarily useful\n        for checking the join order in very long queries where the regular <span class=\"hue-doc-codeph\">EXPLAIN</span> output is too\n        long to read easily.\n      </li><li><span class=\"hue-doc-codeph\">1</span> or <span class=\"hue-doc-codeph\">STANDARD</span>: The default level of detail, showing the logical way that\n        work is split up for the distributed query.\n      </li><li><span class=\"hue-doc-codeph\">2</span> or <span class=\"hue-doc-codeph\">EXTENDED</span>: Includes additional\n        detail about how the query planner uses statistics in its\n        decision-making process, to understand how a query could be tuned by\n        gathering statistics, using query hints, adding or removing predicates,\n        and so on. In Impala 3.2 and higher, the output\n        also includes the analyzed query with the cast information in the output\n        header, and the implicit cast info in the Predicate section.</li><li><span class=\"hue-doc-codeph\">3</span> or <span class=\"hue-doc-codeph\">VERBOSE</span>: The maximum level of detail, showing how work is split up\n        within each node into <q>query fragments</q> that are connected in a pipeline. This extra detail is\n        primarily useful for low-level performance testing and tuning within Impala itself, rather than for\n        rewriting the SQL code at the user level.\n      </li></ul><div class=\"hue-doc-note\">      Prior to Impala 1.3, the allowed argument range for <span class=\"hue-doc-codeph\">EXPLAIN_LEVEL</span> was 0 to 1: level 0 had\n      the mnemonic <span class=\"hue-doc-codeph\">NORMAL</span>, and level 1 was <span class=\"hue-doc-codeph\">VERBOSE</span>. In Impala 1.3 and higher,\n      <span class=\"hue-doc-codeph\">NORMAL</span> is not a valid mnemonic value, and <span class=\"hue-doc-codeph\">VERBOSE</span> still applies to the\n      highest level of detail but now corresponds to level 3. You might need to adjust the values if you have any\n      older <span class=\"hue-doc-codeph\">impala-shell</span> script files that set the <span class=\"hue-doc-codeph\">EXPLAIN_LEVEL</span> query option.\n    </div><p>\n      Changing the value of this option controls the amount of detail in the output of the <span class=\"hue-doc-codeph\">EXPLAIN</span>\n      statement. The extended information from level 2 or 3 is especially useful during performance tuning, when\n      you need to confirm whether the work for the query is distributed the way you expect, particularly for the\n      most resource-intensive operations such as join queries against large tables, queries against tables with\n      large numbers of partitions, and insert operations for Parquet tables. The extended information also helps to\n      check estimated resource usage when you use the admission control or resource management features explained\n      in <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_resource_management.xml\" data-doc-anchor-id=\"resource_management\">Resource Management</a>. See\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_explain.xml\" data-doc-anchor-id=\"explain\">EXPLAIN Statement</a> for the syntax of the <span class=\"hue-doc-codeph\">EXPLAIN</span> statement, and\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_explain_plan.xml\" data-doc-anchor-id=\"perf_explain\">Using the EXPLAIN Plan for Performance Tuning</a> for details about how to use the extended information.\n    </p><p id=\"usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      As always, read the <span class=\"hue-doc-codeph\">EXPLAIN</span> output from bottom to top. The lowest lines represent the\n      initial work of the query (scanning data files), the lines in the middle represent calculations done on each\n      node and how intermediate results are transmitted from one node to another, and the topmost lines represent\n      the final results being sent back to the coordinator node.\n    </p><p>\n      The numbers in the left column are generated internally during the initial planning phase and do not\n      represent the actual order of operations, so it is not significant if they appear out of order in the\n      <span class=\"hue-doc-codeph\">EXPLAIN</span> output.\n    </p><p>\n      At all <span class=\"hue-doc-codeph\">EXPLAIN</span> levels, the plan contains a warning if any tables in the query are missing\n      statistics. Use the <span class=\"hue-doc-codeph\">COMPUTE STATS</span> statement to gather statistics for each table and suppress\n      this warning. See <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_perf_stats.xml\" data-doc-anchor-id=\"perf_stats\">Table and Column Statistics</a> for details about how the statistics help\n      query performance.\n    </p><p>\n      The <span class=\"hue-doc-codeph\">PROFILE</span> command in <span class=\"hue-doc-cmdname\">impala-shell</span> always starts with an explain plan\n      showing full detail, the same as with <span class=\"hue-doc-codeph\">EXPLAIN_LEVEL=3</span>. <span class=\"hue-doc-ph\">After the explain\n      plan comes the executive summary, the same output as produced by the <span class=\"hue-doc-codeph\">SUMMARY</span> command in\n      <span class=\"hue-doc-cmdname\">impala-shell</span>.</span></p><p id=\"example_blurb\"><b>Examples:</b></p><p>\n      These examples use a trivial, empty table to illustrate how the essential aspects of query planning are shown\n      in <span class=\"hue-doc-codeph\">EXPLAIN</span> output:\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; create table t1 (x int, s string);\n[localhost:21000] &gt; set explain_level=1;\n[localhost:21000] &gt; explain select count(*) from t1;\n+------------------------------------------------------------------------+\n| Explain String                                                         |\n+------------------------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=10.00MB VCores=1               |\n| WARNING: The following tables are missing relevant table and/or column |\n|   statistics.                                                          |\n| explain_plan.t1                                                        |\n|                                                                        |\n| 03:AGGREGATE [MERGE FINALIZE]                                          |\n| |  output: sum(count(*))                                               |\n| |                                                                      |\n| 02:EXCHANGE [PARTITION=UNPARTITIONED]                                  |\n| |                                                                      |\n| 01:AGGREGATE                                                           |\n| |  output: count(*)                                                    |\n| |                                                                      |\n| 00:SCAN HDFS [explain_plan.t1]                                         |\n|    partitions=1/1 size=0B                                              |\n+------------------------------------------------------------------------+\n[localhost:21000] &gt; explain select * from t1;\n+------------------------------------------------------------------------+\n| Explain String                                                         |\n+------------------------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=-9223372036854775808B VCores=0 |\n| WARNING: The following tables are missing relevant table and/or column |\n|   statistics.                                                          |\n| explain_plan.t1                                                        |\n|                                                                        |\n| 01:EXCHANGE [PARTITION=UNPARTITIONED]                                  |\n| |                                                                      |\n| 00:SCAN HDFS [explain_plan.t1]                                         |\n|    partitions=1/1 size=0B                                              |\n+------------------------------------------------------------------------+\n[localhost:21000] &gt; set explain_level=2;\n[localhost:21000] &gt; explain select * from t1;\n+------------------------------------------------------------------------+\n| Explain String                                                         |\n+------------------------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=-9223372036854775808B VCores=0 |\n| WARNING: The following tables are missing relevant table and/or column |\n|   statistics.                                                          |\n| explain_plan.t1                                                        |\n|                                                                        |\n| 01:EXCHANGE [PARTITION=UNPARTITIONED]                                  |\n| |  hosts=0 per-host-mem=unavailable                                    |\n| |  tuple-ids=0 row-size=19B cardinality=unavailable                    |\n| |                                                                      |\n| 00:SCAN HDFS [explain_plan.t1, PARTITION=RANDOM]                       |\n|    partitions=1/1 size=0B                                              |\n|    table stats: unavailable                                            |\n|    column stats: unavailable                                           |\n|    hosts=0 per-host-mem=0B                                             |\n|    tuple-ids=0 row-size=19B cardinality=unavailable                    |\n+------------------------------------------------------------------------+\n[localhost:21000] &gt; set explain_level=3;\n[localhost:21000] &gt; explain select * from t1;\n+------------------------------------------------------------------------+\n| Explain String                                                         |\n+------------------------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=-9223372036854775808B VCores=0 |\n<b>| WARNING: The following tables are missing relevant table and/or column |</b><b>|   statistics.                                                          |</b><b>| explain_plan.t1                                                        |</b>\n|                                                                        |\n| F01:PLAN FRAGMENT [PARTITION=UNPARTITIONED]                            |\n|   01:EXCHANGE [PARTITION=UNPARTITIONED]                                |\n|      hosts=0 per-host-mem=unavailable                                  |\n|      tuple-ids=0 row-size=19B cardinality=unavailable                  |\n|                                                                        |\n| F00:PLAN FRAGMENT [PARTITION=RANDOM]                                   |\n|   DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=01, PARTITION=UNPARTITIONED] |\n|   00:SCAN HDFS [explain_plan.t1, PARTITION=RANDOM]                     |\n|      partitions=1/1 size=0B                                            |\n<b>|      table stats: unavailable                                          |</b><b>|      column stats: unavailable                                         |</b>\n|      hosts=0 per-host-mem=0B                                           |\n|      tuple-ids=0 row-size=19B cardinality=unavailable                  |\n+------------------------------------------------------------------------+\n</div><p>\n      As the warning message demonstrates, most of the information needed for Impala to do efficient query\n      planning, and for you to understand the performance characteristics of the query, requires running the\n      <span class=\"hue-doc-codeph\">COMPUTE STATS</span> statement for the table:\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; compute stats t1;\n+-----------------------------------------+\n| summary                                 |\n+-----------------------------------------+\n| Updated 1 partition(s) and 2 column(s). |\n+-----------------------------------------+\n[localhost:21000] &gt; explain select * from t1;\n+------------------------------------------------------------------------+\n| Explain String                                                         |\n+------------------------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=-9223372036854775808B VCores=0 |\n|                                                                        |\n| F01:PLAN FRAGMENT [PARTITION=UNPARTITIONED]                            |\n|   01:EXCHANGE [PARTITION=UNPARTITIONED]                                |\n|      hosts=0 per-host-mem=unavailable                                  |\n|      tuple-ids=0 row-size=20B cardinality=0                            |\n|                                                                        |\n| F00:PLAN FRAGMENT [PARTITION=RANDOM]                                   |\n|   DATASTREAM SINK [FRAGMENT=F01, EXCHANGE=01, PARTITION=UNPARTITIONED] |\n|   00:SCAN HDFS [explain_plan.t1, PARTITION=RANDOM]                     |\n|      partitions=1/1 size=0B                                            |\n<b>|      table stats: 0 rows total                                         |</b><b>|      column stats: all                                                 |</b>\n|      hosts=0 per-host-mem=0B                                           |\n|      tuple-ids=0 row-size=20B cardinality=0                            |\n+------------------------------------------------------------------------+\n</div><p>\n      Joins and other complicated, multi-part queries are the ones where you most commonly need to examine the\n      <span class=\"hue-doc-codeph\">EXPLAIN</span> output and customize the amount of detail in the output. This example shows the\n      default <span class=\"hue-doc-codeph\">EXPLAIN</span> output for a three-way join query, then the equivalent output with a\n      <span class=\"hue-doc-codeph\">[SHUFFLE]</span> hint to change the join mechanism between the first two tables from a broadcast\n      join to a shuffle join.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; set explain_level=1;\n[localhost:21000] &gt; explain select one.*, two.*, three.* from t1 one, t1 two, t1 three where one.x = two.x and two.x = three.x;\n+---------------------------------------------------------+\n| Explain String                                          |\n+---------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=4.00GB VCores=3 |\n|                                                         |\n| 07:EXCHANGE [PARTITION=UNPARTITIONED]                   |\n| |                                                       |\n<b>| 04:HASH JOIN [INNER JOIN, BROADCAST]                    |</b>\n| |  hash predicates: two.x = three.x                     |\n| |                                                       |\n<b>| |--06:EXCHANGE [BROADCAST]                              |</b>\n| |  |                                                    |\n| |  02:SCAN HDFS [explain_plan.t1 three]                 |\n| |     partitions=1/1 size=0B                            |\n| |                                                       |\n<b>| 03:HASH JOIN [INNER JOIN, BROADCAST]                    |</b>\n| |  hash predicates: one.x = two.x                       |\n| |                                                       |\n<b>| |--05:EXCHANGE [BROADCAST]                              |</b>\n| |  |                                                    |\n| |  01:SCAN HDFS [explain_plan.t1 two]                   |\n| |     partitions=1/1 size=0B                            |\n| |                                                       |\n| 00:SCAN HDFS [explain_plan.t1 one]                      |\n|    partitions=1/1 size=0B                               |\n+---------------------------------------------------------+\n[localhost:21000] &gt; explain select one.*, two.*, three.*\n                  &gt; from t1 one join [shuffle] t1 two join t1 three\n                  &gt; where one.x = two.x and two.x = three.x;\n+---------------------------------------------------------+\n| Explain String                                          |\n+---------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=4.00GB VCores=3 |\n|                                                         |\n| 08:EXCHANGE [PARTITION=UNPARTITIONED]                   |\n| |                                                       |\n<b>| 04:HASH JOIN [INNER JOIN, BROADCAST]                    |</b>\n| |  hash predicates: two.x = three.x                     |\n| |                                                       |\n<b>| |--07:EXCHANGE [BROADCAST]                              |</b>\n| |  |                                                    |\n| |  02:SCAN HDFS [explain_plan.t1 three]                 |\n| |     partitions=1/1 size=0B                            |\n| |                                                       |\n<b>| 03:HASH JOIN [INNER JOIN, PARTITIONED]                  |</b>\n| |  hash predicates: one.x = two.x                       |\n| |                                                       |\n<b>| |--06:EXCHANGE [PARTITION=HASH(two.x)]                  |</b>\n| |  |                                                    |\n| |  01:SCAN HDFS [explain_plan.t1 two]                   |\n| |     partitions=1/1 size=0B                            |\n| |                                                       |\n<b>| 05:EXCHANGE [PARTITION=HASH(one.x)]                     |</b>\n| |                                                       |\n| 00:SCAN HDFS [explain_plan.t1 one]                      |\n|    partitions=1/1 size=0B                               |\n+---------------------------------------------------------+\n</div><p>\n      For a join involving many different tables, the default <span class=\"hue-doc-codeph\">EXPLAIN</span> output might stretch over\n      several pages, and the only details you care about might be the join order and the mechanism (broadcast or\n      shuffle) for joining each pair of tables. In that case, you might set <span class=\"hue-doc-codeph\">EXPLAIN_LEVEL</span> to its\n      lowest value of 0, to focus on just the join order and join mechanism for each stage. The following example\n      shows how the rows from the first and second joined tables are hashed and divided among the nodes of the\n      cluster for further filtering; then the entire contents of the third table are broadcast to all nodes for the\n      final stage of join processing.\n    </p><div class=\"hue-doc-codeblock\">[localhost:21000] &gt; set explain_level=0;\n[localhost:21000] &gt; explain select one.*, two.*, three.*\n                  &gt; from t1 one join [shuffle] t1 two join t1 three\n                  &gt; where one.x = two.x and two.x = three.x;\n+---------------------------------------------------------+\n| Explain String                                          |\n+---------------------------------------------------------+\n| Estimated Per-Host Requirements: Memory=4.00GB VCores=3 |\n|                                                         |\n| 08:EXCHANGE [PARTITION=UNPARTITIONED]                   |\n<b>| 04:HASH JOIN [INNER JOIN, BROADCAST]                    |</b><b>| |--07:EXCHANGE [BROADCAST]                              |</b>\n| |  02:SCAN HDFS [explain_plan.t1 three]                 |\n<b>| 03:HASH JOIN [INNER JOIN, PARTITIONED]                  |</b><b>| |--06:EXCHANGE [PARTITION=HASH(two.x)]                  |</b>\n| |  01:SCAN HDFS [explain_plan.t1 two]                   |\n<b>| 05:EXCHANGE [PARTITION=HASH(one.x)]                     |</b>\n| 00:SCAN HDFS [explain_plan.t1 one]                      |\n+---------------------------------------------------------+\n</div></div></div></div>","title":"EXPLAIN_LEVEL Query Option"}