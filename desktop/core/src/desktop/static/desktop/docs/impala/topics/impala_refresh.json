{"body":"<div><div><div class=\"hue-doc-title\">REFRESH Statement</div><div><p>\n      The <span class=\"hue-doc-codeph\">REFRESH</span> statement reloads the metadata for the table from the\n      metastore database and does an incremental reload of the file and block metadata from the\n      HDFS NameNode. <span class=\"hue-doc-codeph\">REFRESH</span> is used to avoid inconsistencies between Impala\n      and external metadata sources, namely Hive Metastore (HMS) and NameNodes.\n    </p><p> The <span class=\"hue-doc-codeph\">REFRESH</span> statement is only required if you load data\n      from outside of Impala. Updated metadata, as a result of running\n        <span class=\"hue-doc-codeph\">REFRESH</span>, is broadcast to all Impala coordinators. </p><p>\n      See <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_hadoop.html#intro_metastore\" target=\"_blank\">Overview of Impala Metadata and the Metastore</a> for the information about the way\n      Impala uses metadata and how it shares the same metastore database as Hive.\n    </p><p>\n      Once issued, the <span class=\"hue-doc-codeph\">REFRESH</span> statement cannot be cancelled.\n    </p><p><b>Syntax:</b></p><div class=\"hue-doc-codeblock\">REFRESH [<span class=\"hue-doc-varname\">db_name</span>.]<span class=\"hue-doc-varname\">table_name</span> [PARTITION (<span class=\"hue-doc-varname\">key_col1</span>=<span class=\"hue-doc-varname\">val1</span> [, <span class=\"hue-doc-varname\">key_col2</span>=<span class=\"hue-doc-varname\">val2</span>...])]</div><p><b>Usage notes:</b></p><p>\n      The table name is a required parameter, and the table must already exist and be known to\n      Impala.\n    </p><p>\n      Only the metadata for the specified table is reloaded.\n    </p><p>\n      Use the <span class=\"hue-doc-codeph\">REFRESH</span> statement to load the latest metastore metadata for a\n      particular table after one of the following scenarios happens outside of Impala:\n    </p><ul><li>\n        Deleting or adding files.\n        <p>\n          For example, after loading new data files into the HDFS data directory for the table,\n          including inserting data from Hive via <span class=\"hue-doc-codeph\">INSERT</span> or <span class=\"hue-doc-codeph\">LOAD\n          DATA</span>.\n        </p></li><li>\n        Deleting, adding, or modifying partitions.\n        <p>\n          For example, after issuing <span class=\"hue-doc-codeph\">ALTER TABLE</span> or other table-modifying SQL\n          statement in Hive\n        </p></li></ul><div class=\"hue-doc-note\"><p>\n        In Impala 2.3 and higher, the <span class=\"hue-doc-codeph\">ALTER TABLE\n        <span class=\"hue-doc-varname\">table_name</span> RECOVER PARTITIONS</span> statement is a faster\n        alternative to <span class=\"hue-doc-codeph\">REFRESH</span> when you are only adding new partition\n        directories through Hive or manual HDFS operations. See\n        <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_alter_table.xml\" data-doc-anchor-id=\"alter_table\">ALTER TABLE Statement</a> for details.\n      </p></div><p><span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> and <span class=\"hue-doc-codeph\">REFRESH</span> are\n        counterparts:\n      <ul><li><span class=\"hue-doc-codeph\">INVALIDATE METADATA</span> is an asynchronous operations\n            that simply discards the loaded metadata from the catalog and\n            coordinator caches. After that operation, the catalog and all the\n            Impala coordinators only know about the existence of databases and\n            tables and nothing more. Metadata loading for tables is triggered by\n            any subsequent queries.\n          </li><li><span class=\"hue-doc-codeph\">REFRESH</span> reloads the metadata synchronously.\n              <span class=\"hue-doc-codeph\">REFRESH</span> is more lightweight than doing a full\n            metadata load after a table has been invalidated.\n              <span class=\"hue-doc-codeph\">REFRESH</span> cannot detect changes in block locations\n            triggered by operations like HDFS balancer, hence causing remote\n            reads during query execution with negative performance implications.\n          </li></ul></p><p><b>Refreshing a single partition:</b></p><p>\n      In Impala 2.7 and higher, the <span class=\"hue-doc-codeph\">REFRESH</span> statement\n      can apply to a single partition at a time, rather than the whole table. Include the\n      optional <span class=\"hue-doc-codeph\">PARTITION (<span class=\"hue-doc-varname\">partition_spec</span>)</span> clause and specify\n      values for each of the partition key columns.\n    </p><p>\n      The following rules apply:\n      <ul><li>\n          The <span class=\"hue-doc-codeph\">PARTITION</span> clause of the <span class=\"hue-doc-codeph\">REFRESH</span> statement must\n          include all the partition key columns.\n        </li><li>\n          The order of the partition key columns does not have to match the column order in the\n          table.\n        </li><li>\n          Specifying a nonexistent partition does not cause an error.\n        </li><li>\n          The partition can be one that Impala created and is already aware of, or a new\n          partition created through Hive.\n        </li></ul></p><p>\n      The following examples demonstrates the above rules.\n    </p><div class=\"hue-doc-codeblock\">\n-- Partition doesn't exist.\nrefresh p2 partition (y=0, z=3);\nrefresh p2 partition (y=0, z=-1)\n\n-- Key columns specified in a different order than the table definition.\nrefresh p2 partition (z=1, y=0)\n\n-- Incomplete partition spec causes an error.\nrefresh p2 partition (y=0)\nERROR: AnalysisException: Items in partition spec must exactly match the partition columns in the table definition: default.p2 (1 vs 2)\n</div><p>\n      For examples of using <span class=\"hue-doc-codeph\">REFRESH</span> and <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span>\n      with a combination of Impala and Hive operations, see\n      <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_tutorial.html#tutorial_impala_hive\" target=\"_blank\">Switching Back and Forth Between Impala and Hive</a>.\n    </p><p><b>Related impala-shell options:</b></p><p>\n      Due to the expense of reloading the metadata for all tables, the\n      <span class=\"hue-doc-cmdname\">impala-shell</span><span class=\"hue-doc-codeph\">-r</span> option is not recommended.\n    </p><p><b>HDFS permissions:</b></p><p>\n      All HDFS and Sentry permissions and privilege requirements are the same whether you\n      refresh the entire table or a single partition.\n    </p><p><b>HDFS considerations:</b></p><p>\n      The <span class=\"hue-doc-codeph\">REFRESH</span> statement checks HDFS permissions of the underlying data\n      files and directories, caching this information so that a statement can be cancelled\n      immediately if for example the <span class=\"hue-doc-codeph\">impala</span> user does not have permission to\n      write to the data directory for the table. Impala reports any lack of write permissions as\n      an <span class=\"hue-doc-codeph\">INFO</span> message in the log file.\n    </p><p>\n      If you change HDFS permissions to make data readable or writeable by the Impala user,\n      issue another <span class=\"hue-doc-codeph\">REFRESH</span> to make Impala aware of the change.\n    </p><p><b>Kudu considerations:</b></p><p>\n        Much of the metadata for Kudu tables is handled by the underlying\n        storage layer. Kudu tables have less reliance on the metastore\n        database, and require less metadata caching on the Impala side.\n        For example, information about partitions in Kudu tables is managed\n        by Kudu, and Impala does not cache any block locality metadata\n        for Kudu tables.\n      </p><p>\n        The <span class=\"hue-doc-codeph\">REFRESH</span> and <span class=\"hue-doc-codeph\">INVALIDATE METADATA</span>\n        statements are needed less frequently for Kudu tables than for\n        HDFS-backed tables. Neither statement is needed when data is\n        added to, removed, or updated in a Kudu table, even if the changes\n        are made directly to Kudu through a client program using the Kudu API.\n        Run <span class=\"hue-doc-codeph\">REFRESH <span class=\"hue-doc-varname\">table_name</span></span> or\n        <span class=\"hue-doc-codeph\">INVALIDATE METADATA <span class=\"hue-doc-varname\">table_name</span></span>\n        for a Kudu table only after making a change to the Kudu table schema,\n        such as adding or dropping a column.\n      </p><p><b>Related information:</b></p><p><a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_hadoop.html#intro_metastore\" target=\"_blank\">Overview of Impala Metadata and the Metastore</a>,\n      <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_invalidate_metadata.xml\" data-doc-anchor-id=\"invalidate_metadata\">INVALIDATE METADATA Statement</a></p></div></div></div>","title":"REFRESH Statement"}