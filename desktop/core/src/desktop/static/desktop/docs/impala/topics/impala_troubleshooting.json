{"body":"<div><div id=\"troubleshooting\"><div class=\"hue-doc-title\">Troubleshooting Impala</div><div><p>\n      Troubleshooting for Impala requires being able to diagnose and debug problems\n      with performance, network connectivity, out-of-memory conditions, disk space usage,\n      and crash or hang conditions in any of the Impala-related daemons.\n    </p></div><div id=\"trouble_sql\"><div class=\"hue-doc-title\">Troubleshooting Impala SQL Syntax Issues</div><div><p>\n        In general, if queries issued against Impala fail, you can try running these same queries against Hive.\n      </p><ul><li>\n          If a query fails against both Impala and Hive, it is likely that there is a problem with your query or\n          other elements of your CDH environment:\n          <ul><li>\n              Review the <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_langref.xml\" data-doc-anchor-id=\"langref\">Language Reference</a> to ensure your query is\n              valid.\n            </li><li>\n              Check <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_reserved_words.xml\" data-doc-anchor-id=\"reserved_words\">Impala Reserved Words</a> to see if any database, table,\n              column, or other object names in your query conflict with Impala reserved words.\n              Quote those names with backticks (<span class=\"hue-doc-codeph\">``</span>) if so.\n            </li><li>\n              Check <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_functions.xml\" data-doc-anchor-id=\"builtins\">Impala Built-In Functions</a> to confirm whether Impala supports all the\n              built-in functions being used by your query, and whether argument and return types are the\n              same as you expect.\n            </li><li>\n              Review the <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_logging.xml\" data-doc-anchor-id=\"logs_debug\">contents of the Impala logs</a> for any information that may be useful in identifying the\n              source of the problem.\n            </li></ul></li><li>\n          If a query fails against Impala but not Hive, it is likely that there is a problem with your Impala\n          installation.\n        </li></ul></div></div><div id=\"IMPALA-5605\"><div class=\"hue-doc-title\">Troubleshooting Crashes Caused by Memory Resource Limit</div><div><p>Under very high concurrency, Impala could encounter a serious error due\n        to usage of various operating system resources. Errors similar to the\n        following may be caused by operating system resource exhaustion:</p><div class=\"hue-doc-codeblock\">F0629 08:20:02.956413 29088 llvm-codegen.cc:111] LLVM hit fatal error: Unable to allocate section memory!\nterminate called after throwing an instance of 'boost::exception_detail::clone_impl&lt;boost::exception_detail::error_info_injector&lt;boost::thread_resource_error&gt; &gt;'</div><p>The KRPC implementation in Impala 2.12 / 3.0 greatly reduces thread\n        counts and the chances of hitting a resource limit.</p><p>If you still get an error similar to the above in Impala 3.0 and\n        higher, try increasing the <span class=\"hue-doc-codeph\">max_map_count</span> OS virtual\n        memory parameter. <span class=\"hue-doc-codeph\">max_map_count</span> defines the maximum\n        number of memory map areas that a process can use. Configure each host\n        running an <span class=\"hue-doc-codeph\">impalad</span> daemon with the command to increase\n          <span class=\"hue-doc-codeph\">max_map_count</span> to 8 GB.</p><div class=\"hue-doc-codeblock\">echo 8000000 &gt; /proc/sys/vm/max_map_count</div><p>To make the above settings durable, refer to your OS documentation. For\n        example, on RHEL 6.x:<ol><li>Add the following line to\n            <span class=\"hue-doc-codeph\">/etc/sysctl.conf</span>:<div class=\"hue-doc-codeblock\">vm.max_map_count=8000000</div></li><li>Run the following\n            command:<div class=\"hue-doc-codeblock\">sysctl -p</div></li></ol></p></div></div><div id=\"trouble_io\"><div class=\"hue-doc-title\">Troubleshooting I/O Capacity Problems</div><div><p> Impala queries are typically I/O-intensive. If there is an I/O problem\n        with storage devices, or with HDFS itself, Impala queries could show\n        slow response times with no obvious cause on the Impala side. Slow I/O\n        on even a single Impala daemon could result in an overall slowdown,\n        because queries involving clauses such as <span class=\"hue-doc-codeph\">ORDER BY</span>,\n          <span class=\"hue-doc-codeph\">GROUP BY</span>, or <span class=\"hue-doc-codeph\">JOIN</span> do not start\n        returning results until all executor Impala daemons have finished their\n        work. </p><p> To test whether the Linux I/O system itself is performing as expected,\n        run Linux commands like the following on each host Impala daemon is\n        running: </p><div class=\"hue-doc-codeblock\">$ sudo sysctl -w vm.drop_caches=3 vm.drop_caches=0\nvm.drop_caches = 3\nvm.drop_caches = 0\n$ sudo dd if=/dev/sda bs=1M of=/dev/null count=1k\n1024+0 records in\n1024+0 records out\n1073741824 bytes (1.1 GB) copied, 5.60373 s, 192 MB/s\n$ sudo dd if=/dev/sdb bs=1M of=/dev/null count=1k\n1024+0 records in\n1024+0 records out\n1073741824 bytes (1.1 GB) copied, 5.51145 s, 195 MB/s\n$ sudo dd if=/dev/sdc bs=1M of=/dev/null count=1k\n1024+0 records in\n1024+0 records out\n1073741824 bytes (1.1 GB) copied, 5.58096 s, 192 MB/s\n$ sudo dd if=/dev/sdd bs=1M of=/dev/null count=1k\n1024+0 records in\n1024+0 records out\n1073741824 bytes (1.1 GB) copied, 5.43924 s, 197 MB/s\n</div><p>\n        On modern hardware, a throughput rate of less than 100 MB/s typically indicates\n        a performance issue with the storage device. Correct the hardware problem before\n        continuing with Impala tuning or benchmarking.\n      </p></div></div><div id=\"trouble_cookbook\"><div class=\"hue-doc-title\">Impala Troubleshooting Quick Reference</div><div><p>\n        The following table lists common problems and potential solutions.\n      </p><table><thead><tr><td>\n                Symptom\n              </td><td>\n                Explanation\n              </td><td>\n                Recommendation\n              </td></tr></thead><tbody><tr><td>\n                Impala takes a long time to start.\n              </td><td>\n                Impala instances with large numbers of tables, partitions, or data files take longer to start\n                because the metadata for these objects is broadcast to all <span class=\"hue-doc-cmdname\">impalad</span> nodes and\n                cached.\n              </td><td>\n                Adjust timeout and synchronicity settings.\n              </td></tr><tr><td><p>\n                  Joins fail to complete.\n                </p></td><td><p>\n                  There may be insufficient memory. During a join, data from the second, third, and so on sets to\n                  be joined is loaded into memory. If Impala chooses an inefficient join order or join mechanism,\n                  the query could exceed the total memory available.\n                </p></td><td><p>\n                  Start by gathering statistics with the <span class=\"hue-doc-codeph\">COMPUTE STATS</span> statement for each table\n                  involved in the join. Consider specifying the <span class=\"hue-doc-codeph\">[SHUFFLE]</span> hint so that data from\n                  the joined tables is split up between nodes rather than broadcast to each node. If tuning at the\n                  SQL level is not sufficient, add more memory to your system or join smaller data sets.\n                </p></td></tr><tr><td><p>\n                  Queries return incorrect results.\n                </p></td><td><p>\n                  Impala metadata may be outdated after changes are performed in Hive.\n                </p></td><td><p>\n                  Where possible, use the appropriate Impala statement (<span class=\"hue-doc-codeph\">INSERT</span>, <span class=\"hue-doc-codeph\">LOAD\n                  DATA</span>, <span class=\"hue-doc-codeph\">CREATE TABLE</span>, <span class=\"hue-doc-codeph\">ALTER TABLE</span>, <span class=\"hue-doc-codeph\">COMPUTE\n                  STATS</span>, and so on) rather than switching back and forth between Impala and Hive. Impala\n                  automatically broadcasts the results of DDL and DML operations to all Impala nodes in the\n                  cluster, but does not automatically recognize when such changes are made through Hive. After\n                  inserting data, adding a partition, or other operation in Hive, refresh the metadata for the\n                  table as described in <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_refresh.xml\" data-doc-anchor-id=\"refresh\">REFRESH Statement</a>.\n                </p></td></tr><tr><td><p>\n                  Queries are slow to return results.\n                </p></td><td><p>\n                  Some <span class=\"hue-doc-codeph\">impalad</span> instances may not have started. Using a browser, connect to the\n                  host running the Impala state store. Connect using an address of the form\n                  <span class=\"hue-doc-codeph\">http://<span class=\"hue-doc-varname\">hostname</span>:<span class=\"hue-doc-varname\">port</span>/metrics</span>.\n                </p><p><div class=\"hue-doc-note\"> Replace <span class=\"hue-doc-varname\">hostname</span> and\n                      <span class=\"hue-doc-varname\">port</span> with the hostname and port of your\n                    Impala state store host machine and web server port. The\n                    default port is 25010. </div> The number of\n                    <span class=\"hue-doc-codeph\">impalad</span> instances listed should match the\n                  expected number of <span class=\"hue-doc-codeph\">impalad</span> instances\n                  installed in the cluster. There should also be one\n                    <span class=\"hue-doc-codeph\">impalad</span> instance installed on each\n                  DataNode.</p></td><td><p>\n                  Ensure Impala is installed on all DataNodes. Start any <span class=\"hue-doc-codeph\">impalad</span> instances that\n                  are not running.\n                </p></td></tr><tr><td><p>\n                  Queries are slow to return results.\n                </p></td><td><p>\n                  Impala may not be configured to use native checksumming. Native checksumming uses\n                  machine-specific instructions to compute checksums over HDFS data very quickly. Review Impala\n                  logs. If you find instances of \"<span class=\"hue-doc-codeph\">INFO util.NativeCodeLoader: Loaded the\n                  native-hadoop</span>\" messages, native checksumming is not enabled.\n                </p></td><td><p>\n                  Ensure Impala is configured to use native checksumming as described in\n                  <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_config_performance.html#config_performance\" target=\"_blank\">Post-Installation Configuration for Impala</a>.\n                </p></td></tr><tr><td><p>\n                  Queries are slow to return results.\n                </p></td><td><p>\n                  Impala may not be configured to use data locality tracking.\n                </p></td><td><p>\n                  Test Impala for data locality tracking and make configuration changes as necessary. Information\n                  on this process can be found in <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_config_performance.html#config_performance\" target=\"_blank\">Post-Installation Configuration for Impala</a>.\n                </p></td></tr><tr><td><p>\n                  Attempts to complete Impala tasks such as executing INSERT-SELECT actions fail. The Impala logs\n                  include notes that files could not be opened due to permission denied.\n                </p></td><td><p>\n                  This can be the result of permissions issues. For example, you could use the Hive shell as the\n                  hive user to create a table. After creating this table, you could attempt to complete some\n                  action, such as an INSERT-SELECT on the table. Because the table was created using one user and\n                  the INSERT-SELECT is attempted by another, this action may fail due to permissions issues.\n                </p></td><td><p>\n                  In general, ensure the Impala user has sufficient permissions. In the preceding example, ensure\n                  the Impala user has sufficient permissions to the table that the Hive user created.\n                </p></td></tr><tr><td><p>\n                  Impala fails to start up, with the <span class=\"hue-doc-cmdname\">impalad</span> logs referring to errors connecting\n                  to the statestore service and attempts to re-register.\n                </p></td><td><p>\n                  A large number of databases, tables, partitions, and so on can require metadata synchronization,\n                  particularly on startup, that takes longer than the default timeout for the statestore service.\n                </p></td><td><p>\n                  Configure the statestore timeout value and possibly other settings related to the frequency of\n                  statestore updates and metadata loading. See\n                  <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_timeouts.html#statestore_timeout\" target=\"_blank\">Increasing the Statestore Timeout</a> and\n                  <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"topics/impala_scalability.xml\" data-doc-anchor-id=\"statestore_scalability\">Scalability Considerations for the Impala Statestore</a>.\n                </p></td></tr></tbody></table></div></div><div style=\"display:none;\" id=\"core_dumps\"><div class=\"hue-doc-title\">Enabling Core Dumps for Impala</div><div><p>\n          Fill in details, then unhide.\n        </p><p>\n          From <a class=\"hue-doc-external-link\" href=\"https://www.cloudera.com/documentation/enterprise/latest/topics/impala_config_options.html#config_options\" target=\"_blank\">Modifying Impala Startup Options</a>:\n        </p><div class=\"hue-doc-codeblock\">export ENABLE_CORE_DUMPS=${ENABLE_COREDUMPS:-false}</div><div class=\"hue-doc-note\" id=\"core_dump_considerations\"><ul><li><p>\n              The location of core dump files may vary according to your operating system\n              configuration.\n            </p></li><li><p>\n              Other security settings may prevent Impala from writing core dumps even when this\n              option is enabled.\n            </p></li></ul></div><p/></div></div><div style=\"display:none;\" id=\"io_throughput\"><div class=\"hue-doc-title\">Verifying I/O Throughput</div><div><p>\n        Optimal Impala query performance depends on being able to perform I/O across multiple storage devices\n        in parallel, with the data transferred at or close to the maximum throughput for each device.\n        If a hardware or configuration issue causes a reduction in I/O throughput, even if the problem only\n        affects a subset of storage devices, you might experience\n        slow query performance that cannot be improved by using regular SQL tuning techniques.\n      </p><p>\n        As a general guideline, expect each commodity storage device (for example, a standard rotational\n        hard drive) to be able to transfer approximately 100 MB per second. If you see persistent slow query\n        perormance, examine the Impala logs to check\n      </p><div class=\"hue-doc-codeblock\">Useful test for I/O throughput of hardware.\n\nSymptoms:\n* Queries running slow\n* Scan rate of IO in Impala logs show noticeably less than expected IO rate for each disk (typical commodity disk should provide ~100 MB/s\n\nActions:\n* Validate disk read from OS to confirm no issue at hardware or OS level\n* Validate disk read at HDFS to see if issue at HDFS config\n\nSpecifics:\nTesting Linux and hardware IO:\n# First running:\nsudo sysctl -w vm.drop_caches=3 vm.drop_caches=0\n\n# Then Running:\nsudo dd if=/dev/sda bs=1M of=/dev/null count=1k\n&amp; sudo dd if=/dev/sdb bs=1M of=/dev/null count=1k\n&amp; sudo dd if=/dev/sdc bs=1M of=/dev/null count=1k\n&amp; sudo dd if=/dev/sdd bs=1M of=/dev/null count=1k &amp; wait\n\nTesting HDFS IO:\n# You can use TestDFSIO. Its documented here ; http://answers.oreilly.com/topic/460-how-to-benchmark-a-hadoop-cluster/\n# You can also use sar, dd and iostat for monitoring the disk.\n\n# writes 10 files each of 1000 MB\nhadoop jar $HADOOP_INSTALL/hadoop-*-test.jar TestDFSIO -write -nrFiles 10 -fileSize 1000\n\n# run the read benchmark\nhadoop jar $HADOOP_INSTALL/hadoop-*-test.jar TestDFSIO -read -nrFiles 10 -fileSize 1000\n\n# clean up the data\nhadoop jar $HADOOP_INSTALL/hadoop-*-test.jar TestDFSIO -clean\n</div></div></div></div></div>","title":"Troubleshooting Impala"}