{"body":"<div><div>\n        <div id=\"title\">\n                        <h1 class=\"hue-doc-title-hive\">Union</h1>\n        </div>\n\n        <!--<div id=\"toc\" class=\"content prepend-top\">\n            <h1>Table of Contents</h1>\n            $replacement.render(\"toc\")\n        </div>-->\n\n        <div id=\"src-27362049\">\n            <p>\n                </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-UnionSyntax\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Union Syntax</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-UNIONwithinaFROMClause\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">UNION within a FROM Clause</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-UnionsinDDLandInsertStatements\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Unions in DDL and Insert Statements</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-ApplyingSubclauses\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Applying Subclauses</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-ColumnAliasesforSchemaMatching\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Column Aliases for Schema Matching</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-ColumnTypeConversion\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Column Type Conversion</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-VersionInformation\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">Version Information</a>            </p>\n    </li></ul></li></ul>    <div id=\"src-27362049_LanguageManualUnion-UnionSyntax\">\n        <h2><span>Union Syntax</span></h2>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select_statement UNION [ALL | DISTINCT] select_statement UNION [ALL | DISTINCT] select_statement ...\n</div>\n    </div>\n            <p>\n    UNION is used to combine the result from multiple SELECT statements into a single result set.            </p>\n    <ul><li>            <p>\n    Hive versions prior to <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-9039\" target=\"_blank\">1.2.0</a> only support UNION ALL (bag union), in which duplicate rows are not eliminated.            </p>\n    </li><li>            <p>\n    In Hive <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-9039\" target=\"_blank\">1.2.0</a> and later, the default behavior for UNION is that duplicate rows are removed from the result. The optional DISTINCT keyword has no effect other than the default because it also specifies duplicate-row removal. With the optional ALL keyword, duplicate-row removal does not occur and the result includes all matching rows from all the SELECT statements.            </p>\n    </li></ul>            <p>\n    You can mix UNION ALL and UNION DISTINCT in the same query. Mixed UNION types are treated such that a DISTINCT union overrides any ALL union to its left. A DISTINCT union can be produced explicitly by using UNION DISTINCT or implicitly by using UNION with no following DISTINCT or ALL keyword.            </p>\n                <p>\n    The number and names of columns returned by each <i>select_statement</i> have to be the same. Otherwise, a schema error is thrown.            </p>\n        <div id=\"src-27362049_LanguageManualUnion-UNIONwithinaFROMClause\">\n        <h3><span>UNION within a FROM Clause</span></h3>\n            <p>\n    If some additional processing has to be done on the result of the UNION, the entire statement expression can be embedded in a FROM clause like below:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT *\nFROM (\n  select_statement\n  UNION ALL\n  select_statement\n) unionResult\n</div>\n    </div>\n            <p>\n    For example, if we suppose there are two different tables that track which user has published a video and which user has published a comment, the following query joins the results of a UNION ALL with the user table to create a single annotated stream for all the video publishing and comment publishing events:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">    SELECT u.id, actions.date\n    FROM (\n        SELECT av.uid AS uid \n        FROM action_video av \n        WHERE av.date = '2008-06-03' \n        UNION ALL \n        SELECT ac.uid AS uid \n        FROM action_comment ac \n        WHERE ac.date = '2008-06-03' \n     ) actions JOIN users u ON (u.id = actions.uid) \n</div>\n    </div>\n    </div>\n    <div id=\"src-27362049_LanguageManualUnion-UnionsinDDLandInsertStatements\">\n        <h3><span>Unions in DDL and Insert Statements</span></h3>\n            <p>\n    Unions can be used in views, inserts, and CTAS (create table as select) statements. A query can contain multiple UNION clauses, as shown in the <a data-doc-anchor-id=\"src-27362049_LanguageManualUnion-UnionSyntax\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362049\">syntax</a> above.            </p>\n        </div>\n    <div id=\"src-27362049_LanguageManualUnion-ApplyingSubclauses\">\n        <h3><span>Applying Subclauses</span></h3>\n            <p>\n    To apply ORDER BY, SORT BY, CLUSTER BY, DISTRIBUTE BY or LIMIT to an individual SELECT, place the clause inside the parentheses that enclose the SELECT:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT key FROM (SELECT key FROM src ORDER BY key LIMIT <span class=\"hue-doc-varname\">10</span>)subq1\nUNION\nSELECT key FROM (SELECT key FROM src1 ORDER BY key LIMIT <span class=\"hue-doc-varname\">10</span>)subq2\n</div>\n    </div>\n            <p>\n    To apply an ORDER BY, SORT BY, CLUSTER BY, DISTRIBUTE BY or LIMIT clause to the entire UNION result, place the ORDER BY, SORT BY, CLUSTER BY, DISTRIBUTE BY or LIMIT after the last one. The following example uses both ORDER BY and LIMIT clauses:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT key FROM src\nUNION\nSELECT key FROM src1Â \nORDER BY key LIMIT <span class=\"hue-doc-varname\">10</span>\n</div>\n    </div>\n    </div>\n    <div id=\"src-27362049_LanguageManualUnion-ColumnAliasesforSchemaMatching\">\n        <h3><span>Column Aliases for Schema Matching</span></h3>\n            <p>\n    UNION expects the same schema on both sides of the expression list. As a result, the following query may fail with an error message such as \"FAILED: SemanticException 4:47 Schema of both sides of union should match.\"            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">INSERT OVERWRITE TABLE target_table\n  SELECT name, id, category FROM source_table_1\n  UNION ALL\n  SELECT name, id, \"Category159\" FROM source_table_2\n</div>\n    </div>\n            <p>\n    In such cases, column aliases can be used to force equal schemas:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">INSERT OVERWRITE TABLE target_table\n  SELECT name, id, category FROM source_table_1\n  UNION ALL\n  SELECT name, id, \"Category159\" as category FROM source_table_2\n</div>\n    </div>\n    </div>\n    <div id=\"src-27362049_LanguageManualUnion-ColumnTypeConversion\">\n        <h3><span>Column Type Conversion</span></h3>\n            <p>\n    Before <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-14251\" target=\"_blank\">HIVE-14251</a> in release 2.2.0, Hive tries to perform implicit conversion across Hive type groups. With the change of <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-14251\" target=\"_blank\">HIVE-14251</a>, Hive will only perform implicit conversion within each type group including string group, number group or date group, not across groups. In order to union the types from different groups such as a string type and a date type, an explicit cast from string to date or from date to string is needed in the query.            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">  SELECT name, id, cast('2001-01-01' as date) d FROM source_table_1\n  UNION ALL\n  SELECT name, id, hiredate as d FROM source_table_2\n</div>\n    </div>\n            <p>\n                </p>\n        </div>\n    <div id=\"src-27362049_LanguageManualUnion-VersionInformation\">\n        <h3><span>Version Information</span></h3>\n    <div class=\"hue-doc-note-hive\">\n            <div>Version information</div>\n                    <p>\n    In Hive 0.12.0 and earlier releases, unions can only be used within a subquery such as \"SELECT * FROM (<i>select_statement</i> UNION ALL <i>select_statement</i> UNION ALL ...) <i>unionResult</i>\".            </p>\n                <p>\n    As of Hive 0.13.0, unions can also be used in a top-level query: \"<i>select_statement</i> UNION ALL <i>select_statement</i> UNION ALL ...\". (See <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-6189\" target=\"_blank\">HIVE-6189</a>.)            </p>\n                <p>\n    Before Hive 1.2.0, only UNION ALL (bag union) is supported. UNION (or UNION DISTINCT) is supported since Hive 1.2.0. (See <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-9039\" target=\"_blank\">HIVE-9039</a>.)            </p>\n        </div>\n                <p>\n                </p>\n                <p>\n                </p>\n        </div>\n    </div>\n        </div>\n    </div></div>","title":"Union"}