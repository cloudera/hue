{"body":"<div><div>\n        <div id=\"title\">\n                        <h1 class=\"hue-doc-title-hive\">LZO Compression</h1>\n        </div>\n\n        <!--<div id=\"toc\" class=\"content prepend-top\">\n            <h1>Table of Contents</h1>\n            $replacement.render(\"toc\")\n        </div>-->\n\n        <div id=\"src-33298193\">\n            <p>\n                </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-LZOCompression\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">LZO Compression</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-GeneralLZOConcepts\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">General LZO Concepts</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-Prerequisites\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Prerequisites</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tTHpvL0x6b3BJbnN0YWxsYXRpb25z\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Lzo/Lzop Installations</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-core-site.xml\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">core-site.xml</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-TableDefinition\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Table Definition</a>            </p>\n    </li></ul></li><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_LanguageManualLZO-HiveQueries\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Hive Queries</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tT3B0aW9uMTpEaXJlY3RseUNyZWF0ZUxaT0ZpbGVz\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Option 1: Directly Create LZO Files</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tT3B0aW9uMjpXcml0ZUN1c3RvbUphdmF0b0NyZWF0ZUxaT0ZpbGVz\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_33298193\">Option 2: Write Custom Java to Create LZO Files</a>            </p>\n    </li></ul></li></ul></li></ul>    <div id=\"src-33298193_LanguageManualLZO-GeneralLZOConcepts\">\n        <h2><span>General LZO Concepts</span></h2>\n            <p>\n    LZO is a lossless data compression library that favors speed over compression ratio. See <a class=\"hue-doc-external-link\" href=\"http://www.oberhumer.com/opensource/lzo\" target=\"_blank\">http://www.oberhumer.com/opensource/lzo</a> and <a class=\"hue-doc-external-link\" href=\"http://www.lzop.org\" target=\"_blank\">http://www.lzop.org</a> for general information about LZO and see <a class=\"hue-doc-external-link\" href=\"https://cwiki.apache.org/confluence/display/Hive/CompressedStorage\" target=\"_blank\">Compressed Data Storage</a> for information about compression in Hive.            </p>\n                <p>\n    Imagine a simple data file that has three columns            </p>\n    <ul><li>            <p>\n    id            </p>\n    </li><li>            <p>\n    first name            </p>\n    </li><li>            <p>\n    last name            </p>\n    </li></ul>            <p>\n    Let's populate a data file containing 4 records:            </p>\n        <div>\n                <div>\n        <pre><code>19630001     john          lennon\n19630002     paul          mccartney\n19630003     george        harrison\n19630004     ringo         starr</code></pre>\n        </div>\n    </div>\n            <p>\n    Let's call the data file <tt>/path/to/dir/names.txt</tt>.            </p>\n                <p>\n    In order to make it into an LZO file, we can use the lzop utility and it will create a <tt>names.txt.lzo</tt> file.            </p>\n                <p>\n    Now copy the file <tt>names.txt.lzo</tt> to HDFS.            </p>\n        </div>\n    <div id=\"src-33298193_LanguageManualLZO-Prerequisites\">\n        <h2><span>Prerequisites</span></h2>\n    <div id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tTHpvL0x6b3BJbnN0YWxsYXRpb25z\">\n        <h3><span>Lzo/Lzop Installations</span></h3>\n            <p>\n    <tt>lzo</tt> and <tt>lzop</tt> need to be installed on every node in the Hadoop cluster. The details of these installations are beyond the scope of this document.            </p>\n        </div>\n    <div id=\"src-33298193_LanguageManualLZO-core-site.xml\">\n        <h3><span>core-site.xml</span></h3>\n            <p>\n    Add the following to your <tt>core-site.xml</tt>:            </p>\n    <ul><li>            <p>\n    <tt>com.hadoop.compression.lzo.LzoCodec</tt>            </p>\n    </li><li>            <p>\n    <tt>com.hadoop.compression.lzo.LzopCodec</tt>            </p>\n    </li></ul>            <p>\n    For example:            </p>\n                <p>\n    <tt>&lt;property&gt;</tt><br><tt>&lt;name&gt;io.compression.codecs&lt;/name&gt;</tt><br><tt>&lt;value&gt;org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.BZip2Codec,</tt>    <span style=\"color: #ff0000;\">\ncom.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec    </span>\n<tt>&lt;/value&gt;</tt><br><tt>&lt;/property&gt;</tt>            </p>\n                <p>\n    <tt>&lt;property&gt;</tt><br><tt>&lt;name&gt;io.compression.codec.lzo.class&lt;/name&gt;</tt><br><tt>&lt;value&gt;</tt>    <span style=\"color: #ff0000;\">\ncom.hadoop.compression.lzo.LzoCodec    </span>\n<tt>&lt;/value&gt;</tt><br><tt>&lt;/property&gt;</tt>            </p>\n                <p>\n    Next we run the command to create an LZO index file:            </p>\n        <div>\n                <div>\n        <pre><code>hadoop jar /path/to/jar/hadoop-lzo-cdh4-0.4.15-gplextras.jar com.hadoop.compression.lzo.LzoIndexer  /path/to/HDFS/dir/containing/lzo/files</code></pre>\n        </div>\n    </div>\n            <p>\n    This creates <tt>names.txt.lzo</tt> on HDFS.            </p>\n        </div>\n    <div id=\"src-33298193_LanguageManualLZO-TableDefinition\">\n        <h3><span>Table Definition</span></h3>\n            <p>\n    The following <tt>hive -e</tt> command creates an LZO-compressed external table:            </p>\n        <div>\n                <div>\n        <pre><code>hive -e \"CREATE EXTERNAL TABLE IF NOT EXISTS hive_table_name (column_1  datatype_1......column_N datatype_N)\n         PARTITIONED BY (partition_col_1 datatype_1 ....col_P  datatype_P)\n         ROW FORMAT DELIMITED FIELDS TERMINATED BY '\\t'\n         STORED AS INPUTFORMAT  \\\"com.hadoop.mapred.DeprecatedLzoTextInputFormat\\\"\n                   OUTPUTFORMAT \\\"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\\\";</code></pre>\n        </div>\n    </div>\n            <p>\n    Note: The double quotes have to be escaped so that the '<tt>hive -e</tt>' command works correctly.            </p>\n                <p>\n    See <a data-doc-anchor-id=\"src-27362034_LanguageManualDDL-CreateTable\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362034\">CREATE TABLE</a> and <a class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362033\">Hive CLI</a> for information about command syntax.            </p>\n        </div>\n    </div>\n    <div id=\"src-33298193_LanguageManualLZO-HiveQueries\">\n        <h2><span>Hive Queries</span></h2>\n    <div id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tT3B0aW9uMTpEaXJlY3RseUNyZWF0ZUxaT0ZpbGVz\">\n        <h3><span>Option 1: Directly Create LZO Files</span></h3>\n<ol><li>            <p>\n    Directly create LZO files as the output of the Hive query.            </p>\n    </li><li>            <p>\n    Use <tt>lzop</tt> command utility or your custom Java to generate <tt>.lzo.index</tt> for the <tt>.lzo</tt> files.            </p>\n    </li></ol>            <p>\n    <strong>Hive Query Parameters</strong>            </p>\n        <div>\n                <div>\n        <pre><code>SET mapreduce.output.fileoutputformat.compress.codec=com.hadoop.compression.lzo.LzoCodec\nSET hive.exec.compress.output=true\nSET mapreduce.output.fileoutputformat.compress=true</code></pre>\n        </div>\n    </div>\n            <p>\n    For example:            </p>\n        <div>\n                <div>\n        <pre><code>hive -e \"SET mapreduce.output.fileoutputformat.compress.codec=com.hadoop.compression.lzo.LzoCodec; SET hive.exec.compress.output=true;SET mapreduce.output.fileoutputformat.compress=true; &lt;query-string&gt;\"</code></pre>\n        </div>\n    </div>\n            <p>\n    <i></i>    <span style=\"color: #ff6600;\">\n<i>Note: If the data sets are large or number of output files are large , then this option does not work.</i>    </span>\n            </p>\n        </div>\n    <div id=\"src-33298193_safe-id-TGFuZ3VhZ2VNYW51YWxMWk8tT3B0aW9uMjpXcml0ZUN1c3RvbUphdmF0b0NyZWF0ZUxaT0ZpbGVz\">\n        <h3><span>Option 2: Write Custom Java to Create LZO Files</span></h3>\n<ol><li>            <p>\n    Create text files as the output of the Hive query.            </p>\n    </li><li>            <p>\n    Write custom Java code to            </p>\n    <ol><li>            <p>\n    convert Hive query generated text files to <tt>.lzo</tt> files            </p>\n    </li><li>            <p>\n    generate <tt>.lzo.index</tt> files for the <tt>.lzo</tt> files generated above            </p>\n    </li></ol></li></ol>            <p>\n    <strong>Hive Query Parameters</strong>            </p>\n                <p>\n    Prefix the query string with these parameters:            </p>\n        <div>\n                <div>\n        <pre><code>SET hive.exec.compress.output=false\nSET mapreduce.output.fileoutputformat.compress=false</code></pre>\n        </div>\n    </div>\n            <p>\n    For example:            </p>\n        <div>\n                <div>\n        <pre><code>hive -e \"SET hive.exec.compress.output=false;SET mapreduce.output.fileoutputformat.compress=false;&lt;query-string&gt;\"</code></pre>\n        </div>\n    </div>\n    </div>\n    </div>\n        </div>\n    </div></div>","title":"LZO"}