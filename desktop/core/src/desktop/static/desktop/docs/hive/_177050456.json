{"body":"<div><div>\n        <div id=\"title\">\n                        <h1 class=\"hue-doc-title-hive\">Datasketches Integration</h1>\n        </div>\n\n        <!--<div id=\"toc\" class=\"content prepend-top\">\n            <h1>Table of Contents</h1>\n            $replacement.render(\"toc\")\n        </div>-->\n\n        <div id=\"src-177050456\">\n            <p>\n                </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-Sketchfunctions\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Sketch functions</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-Namingconvention\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Naming convention</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-Listdeclaredsketchfunctions\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">List declared sketch functions</a>            </p>\n    </li></ul></li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-Integrationwithmaterializedviews\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Integration with materialized views</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-BImode\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">BI mode</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZUNPVU5UKERJU1RJTkNUKFgpKQ\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Rewrite COUNT(DISTINCT(X))</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZXBlcmNlbnRpbGVfZGlzYyhwKXdpdGhpbmdncm91cChvcmRlcmJ5eCk\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Rewrite percentile_disc(p) withing group(order by x)</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZWN1bWVfZGlzdCgpb3ZlcihvcmRlcmJ5aWQp\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Rewrite cume_dist() over (order by id)</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-RewriteNTILE\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Rewrite NTILE</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-RewriteRANK\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Rewrite RANK</a>            </p>\n    </li></ul></li><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-Examples\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Examples</a>            </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-177050456_DatasketchesIntegration-SimpledistinctcountingexamplesusingHLL\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_177050456\">Simple distinct counting examples using HLL</a>            </p>\n    </li></ul></li></ul>            <p>\n                </p>\n                <p>\n    Apache DataSketches (<a class=\"hue-doc-external-link\" href=\"https://datasketches.apache.org/\" target=\"_blank\">https://datasketches.apache.org/</a>) is integrated into Hive via <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-22939\" target=\"_blank\">HIVE-22939</a>.<br>This enables various kind of sketch operations thru regular sql statement.            </p>\n        <div id=\"src-177050456_DatasketchesIntegration-Sketchfunctions\">\n        <h2><span>Sketch functions</span></h2>\n    <div id=\"src-177050456_DatasketchesIntegration-Namingconvention\">\n        <h3><span>Naming convention</span></h3>\n            <p>\n    All sketch functions are registered using the following naming convention:            </p>\n                <p>\n    <strong>ds_{sketchType}_{functionName}</strong>            </p>\n                <p>\n    For example we have a function called: <strong>ds_hll_estimate</strong> which could be used to estimate the distinct values from an hll sketch.            </p>\n        <div id=\"src-177050456_DatasketchesIntegration-sketchType\">\n        <h4><span>sketchType</span></h4>\n            <p>\n    For detailed info about the sketches themself please refer to the datasketches site!            </p>\n    <ul><li>            <p>\n    frequency            </p>\n    <ul><li>            <p>\n    hll            </p>\n    </li><li>            <p>\n    cpc            </p>\n    </li><li>            <p>\n    theta            </p>\n    </li></ul></li><li>            <p>\n    frequent items            </p>\n    <ul><li>            <p>\n    freq            </p>\n    </li></ul></li><li>            <p>\n    histograms            </p>\n    <ul><li>            <p>\n    kll            </p>\n    </li></ul></li></ul>    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-functionName\">\n        <h4><span>functionName</span></h4>\n    <div>\n        <table class=\"hue-doc-table-hive\">\n                            <colgroup>\n                                            <col width=\"9.74967%\">\n                                            <col width=\"90.2503%\">\n                                    </colgroup>\n            <thead>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    name            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    description            </p>\n                </td>\n        </tr>\n</thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    sketch            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    generates sketch data from input            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    estimate            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    computes the estimate for frequency related sketches            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    union            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    aggregate function to merge multiple sketches            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    union_f            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    unions 2 sketches given in the arguments            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    n            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    number of elements            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    cdf            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    cumulative distribution            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    rank            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    estimates the rank of the given element; returns a value in the range of 0~1            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    intersect            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    aggregate to intersect multiple sketches            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    intersect_f            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    intersect 2 sketches given in the arguments            </p>\n                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    stringify            </p>\n                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n                <p>\n    returns the the sketch in a more readable form            </p>\n                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-Listdeclaredsketchfunctions\">\n        <h3><span>List declared sketch functions</span></h3>\n            <p>\n    Given that we have ~60 functions registered I would recommend to also consider listing/getting info about a single udf.            </p>\n                <p>\n    You could list all functions prefixed by ds_ using:            </p>\n                <p>\n    <strong>show functions like 'ds_%';</strong>            </p>\n                <p>\n    And you can access the description of a function like:            </p>\n                <p>\n    <strong>desc function ds_freq_sketch;</strong>            </p>\n        </div>\n    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-Integrationwithmaterializedviews\">\n        <h2><span>Integration with materialized views</span></h2>\n            <p>\n    Sketch aggregation(s) are exposed to Calcite by some extensions - which could enable both the usage of an MV in a smaller dimension query; or could help in incremental updates.            </p>\n        </div>\n    <div id=\"src-177050456_DatasketchesIntegration-BImode\">\n        <h2><span>BI mode</span></h2>\n            <p>\n    Usage of sketches can give a performance boost in case we could afford to loose some accuracy. Which could come very handy in case of charts or live dashboards.<br>The BI mode is about making rewrites automatically to sketch functions if possible.            </p>\n                <p>\n    The BI mode can be enabled using:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">set hive.optimize.bi.enabled=true;\n</div>\n    </div>\n    <div id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZUNPVU5UKERJU1RJTkNUKFgpKQ\">\n        <h3><span>Rewrite COUNT(DISTINCT(X))</span></h3>\n            <p>\n    This feature can be toggled using the <strong>hive.optimize.bi.rewrite.countdistinct.enabled</strong> conf key            </p>\n                <p>\n    The used distinct sketch family can be configured using: <strong>hive.optimize.bi.rewrite.countdistinct.sketch</strong> (currently only hll is available).            </p>\n                <p>\n    This feature could rewrite            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select category, count(distinct id) from sketch_input group by category\n</div>\n    </div>\n            <p>\n    to use a distinct count sketch to answer the query by rewriting it to            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select category, round(ds_hll_estimate(ds_hll_sketch(id))) from sketch_input\n</div>\n    </div>\n    </div>\n    <div id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZXBlcmNlbnRpbGVfZGlzYyhwKXdpdGhpbmdncm91cChvcmRlcmJ5eCk\">\n        <h3><span>Rewrite percentile_disc(p) withing group(order by x)</span></h3>\n            <p>\n    This feature can be toggled using the<strong> hive.optimize.bi.rewrite.percentile_disc.enabled</strong> conf key            </p>\n                <p>\n    The used histogram sketch family can be configured using: <strong>hive.optimize.bi.rewrite.percentile_disc.sketch</strong> (currently only kll is available).            </p>\n                <p>\n    This feature could rewrite            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select percentile_disc(0.3) within group(order by id) from sketch_input\n</div>\n    </div>\n            <p>\n    to use a histogram sketch to answer the query by rewriting to            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select ds_kll_quantile(ds_kll_sketch(id), 0.3) from sketch_input\n</div>\n    </div>\n    </div>\n    <div id=\"src-177050456_safe-id-RGF0YXNrZXRjaGVzSW50ZWdyYXRpb24tUmV3cml0ZWN1bWVfZGlzdCgpb3ZlcihvcmRlcmJ5aWQp\">\n        <h3><span>Rewrite cume_dist() over (order by id)</span></h3>\n            <p>\n    This feature can be toggled using the<strong> <a class=\"hue-doc-external-link\" href=\"http://hive.optimize.bi\" target=\"_blank\">hive.optimize.bi</a>.rewrite.cume_dist.enabled</strong> conf key            </p>\n                <p>\n    The used histogram sketch family can be configured using: <a class=\"hue-doc-external-link\" href=\"http://hive.optimize.bi\" target=\"_blank\">hive.optimize.bi</a>.rewrite.cume_dist.sketch (currently only kll is available).            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select id,cume_dist() over (order by id) from sketch_input\n</div>\n    </div>\n            <p>\n    to use a histogram sketch to answer the query by rewriting to            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT id, CAST(DS_KLL_RANK(t2.sketch, idVal) AS DOUBLE) \nFROM (SELECT id, CAST(COALESCE(CAST(id AS FLOAT), 340282346638528860000000000000000000000) AS FLOAT) AS idVal FROM sketch_input) AS t,\n(SELECT DS_KLL_SKETCH(CAST(`id` AS FLOAT)) AS `sketch` FROM sketch_input) AS t2\n</div>\n    </div>\n    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-RewriteNTILE\">\n        <h3><span>Rewrite NTILE</span></h3>\n            <p>\n    This feature can be toggled using the <strong><a class=\"hue-doc-external-link\" href=\"http://hive.optimize.bi\" target=\"_blank\">hive.optimize.bi</a>.rewrite.ntile.enabled</strong> conf key            </p>\n                <p>\n    The used histogram sketch family can be configured using: <a class=\"hue-doc-external-link\" href=\"http://hive.optimize.bi\" target=\"_blank\">hive.optimize.bi</a>.rewrite.ntile.sketch (currently only kll is available).            </p>\n                <p>\n    This feature can rewrite            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select id,\n       ntile(4) over (order by id\nfrom sketch_input\norder by id\n</div>\n    </div>\n            <p>\n    To use a histogram sketch to calculate the NTILE's value:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select id,\n        case when ceil(ds_kll_cdf(ds, CAST(id AS FLOAT) )[0]*4) </div>\n    </div>\n    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-RewriteRANK\">\n        <h3><span>Rewrite RANK</span></h3>\n            <p>\n    This feature can be toggled using the <strong>hive.optimize.bi.rewrite.rank.enabled</strong> conf key            </p>\n                <p>\n    The used histogram sketch family can be configured using: <strong>hive.optimize.bi.rewrite.rank.sketch</strong> (currently only kll is available).            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select id,\n       rank() over (order by id)\nfrom sketch_input\norder by id\n</div>\n    </div>\n            <p>\n    is rewritten to            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select id,\n       case when ds_kll_n(ds) </div>\n    </div>\n    </div>\n    </div>\n    <div id=\"src-177050456_DatasketchesIntegration-Examples\">\n        <h2><span>Examples</span></h2>\n            <p>\n                </p>\n        <div id=\"src-177050456_DatasketchesIntegration-SimpledistinctcountingexamplesusingHLL\">\n        <h3><span>Simple distinct counting examples using HLL</span></h3>\n            <p>\n                </p>\n    <ul><li>            <p>\n    Prepare sample table            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">create table sketch_input (id int, category char(1))\nSTORED AS ORC\nTBLPROPERTIES ('transactional'='true');\n \ninsert into table sketch_input values\n  (1,'a'),(1, 'a'), (2, 'a'), (3, 'a'), (4, 'a'), (5, 'a'), (6, 'a'), (7, 'a'), (8, 'a'), (9, 'a'), (10, 'a'),\n  (6,'b'),(6, 'b'), (7, 'b'), (8, 'b'), (9, 'b'), (10, 'b'), (11, 'b'), (12, 'b'), (13, 'b'), (14, 'b'), (15, 'b')\n; \n</div>\n    </div>\n</li><li>    <h4 id=\"src-177050456_DatasketchesIntegration-UseHLLtocomputedistinctvaluesusinganintermediatetable\"><span>Use HLL to compute distinct values using an intermediate table</span></h4>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">-- build sketches per category\ncreate temporary table sketch_intermediate (category char(1), sketch binary);\ninsert into sketch_intermediate select category, ds_hll_sketch(id) from sketch_input group by category;\n \n-- get unique count estimates per category\nselect category, ds_hll_estimate(sketch) from sketch_intermediate;\n \n-- union sketches across categories and get overall unique count estimate\nselect ds_hll_estimate(ds_hll_union(sketch)) from sketch_intermediate;\n</div>\n    </div>\n</li><li>    <h4 id=\"src-177050456_DatasketchesIntegration-UseHLLtocomputedistinctvalueswithoutintermediatetable\"><span>Use HLL to compute distinct values without intermediate table</span></h4>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">select category, ds_hll_estimate(ds_hll_sketch(id)) from sketch_input group by category;\nselect ds_hll_estimate(ds_hll_sketch(id)) from sketch_input;\n</div>\n    </div>\n</li><li>    <h4 id=\"src-177050456_DatasketchesIntegration-UseHLLtocomputedistinctvaluestransparentlythruBImode\"><span>Use HLL to compute distinct values transparently thru BI mode</span></h4>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">set hive.optimize.bi.enabled=true;\nselect category,count(distinct id) from sketch_input group by category;\nselect count(distinct id) from sketch_input;\n</div>\n    </div>\n</li><li>    <h4 id=\"src-177050456_DatasketchesIntegration-UseHLLtocomputedistinctvaluestransparentlythruBImode-whileutilizingaMaterializedViewtostoretheintermediatesketches.\"><span>Use HLL to compute distinct values transparently thru BI mode - while utilizing a Materialized View to store the intermediate sketches.</span></h4>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">-- create an MV to store precomputed HLL values\ncreate  materialized view mv_1 as\n  select category, ds_hll_sketch(id) from sketch_input group by category;\n \nset hive.optimize.bi.enabled=true;\nselect category,count(distinct id) from sketch_input group by category;\nselect count(distinct id) from sketch_input;\n</div>\n    </div>\n</li></ul>    </div>\n    </div>\n        </div>\n    </div></div>","title":"Datasketches Integration"}