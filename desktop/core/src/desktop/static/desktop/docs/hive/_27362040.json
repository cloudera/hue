{"body":"<div><div>\n        <div id=\"title\">\n                        <h1 class=\"hue-doc-title-hive\">LateralView</h1>\n        </div>\n\n        <!--<div id=\"toc\" class=\"content prepend-top\">\n            <h1>Table of Contents</h1>\n            $replacement.render(\"toc\")\n        </div>-->\n\n        <div id=\"src-27362040\">\n            <p>\n                </p>\n    <ul><li>            <p>\n    <a data-doc-anchor-id=\"src-27362040_LanguageManualLateralView-LateralViewSyntax\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362040\">Lateral View Syntax</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362040_LanguageManualLateralView-Description\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362040\">Description</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362040_LanguageManualLateralView-Example\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362040\">Example</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362040_LanguageManualLateralView-MultipleLateralViews\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362040\">Multiple Lateral Views</a>            </p>\n    </li><li>            <p>\n    <a data-doc-anchor-id=\"src-27362040_LanguageManualLateralView-OuterLateralViews\" class=\"hue-doc-internal-link\" href=\"javascript:void(0);\" data-doc-ref=\"_27362040\">Outer Lateral Views</a>            </p>\n    </li></ul>    <div id=\"src-27362040_LanguageManualLateralView-LateralViewSyntax\">\n        <h2><span>Lateral View Syntax</span></h2>\n    <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">lateralView: LATERAL VIEW udtf(expression) tableAlias AS columnAlias (',' columnAlias)*\nfromClause: FROM baseTable (lateralView)*\n</div>\n    </div>\n    </div>\n    <div id=\"src-27362040_LanguageManualLateralView-Description\">\n        <h2><span>Description</span></h2>\n            <p>\n    Lateral view is used in conjunction with user-defined table generating functions such as <tt>explode()</tt>. As mentioned in <a class=\"hue-doc-external-link\" href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-Built-inTable-GeneratingFunctions(UDTF)\" target=\"_blank\">Built-in Table-Generating Functions</a>, a UDTF generates zero or more output rows for each input row. A lateral view first applies the UDTF to each row of base table and then joins resulting output rows to the input rows to form a virtual table having the supplied table alias.            </p>\n        <div class=\"hue-doc-note-hive\">\n            <div>Version</div>\n                    <p>\n    Prior to Hive 0.6.0, lateral view did not support the predicate push-down optimization. In Hive 0.5.0 and earlier, if you used a WHERE clause your query may not have compiled. A workaround was to add <tt>set hive.optimize.ppd=false;</tt> before your query. The fix was made in Hive 0.6.0; see <a class=\"hue-doc-external-link\" href=\"https://issues.apache.org/jira/browse/HIVE-1056\" target=\"_blank\">https://issues.apache.org/jira/browse/HIVE-1056</a>: Predicate push down does not work with UDTF's.            </p>\n        </div>\n        <div class=\"hue-doc-note-hive\">\n            <div>Version</div>\n                    <p>\n    From Hive 0.12.0, column aliases can be omitted. In this case, aliases are inherited from field names of StructObjectInspector which is returned from UTDF.            </p>\n        </div>\n        </div>\n    <div id=\"src-27362040_LanguageManualLateralView-Example\">\n        <h2><span>Example</span></h2>\n            <p>\n    Consider the following base table named <tt>pageAds</tt>. It has two columns: <tt>pageid</tt> (name of the page) and <tt>adid_list</tt> (an array of ads appearing on the page):            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Column name                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Column type                </td>\n        </tr>\n</thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        pageid                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        STRING                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        adid_list                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Array&lt;int&gt;                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n            <p>\n    An example table with two rows:            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        pageid                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        adid_list                </td>\n        </tr>\n</thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        front_page                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [1, 2, 3]                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        contact_page                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [3, 4, 5]                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n            <p>\n    and the user would like to count the total number of times an ad appears across all pages.            </p>\n                <p>\n    A lateral view with <a class=\"hue-doc-external-link\" href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-explode\" target=\"_blank\">explode()</a> can be used to convert <tt>adid_list</tt> into separate rows using the query:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT pageid, adid\nFROM pageAds LATERAL VIEW explode(adid_list) adTable AS adid;\n</div>\n    </div>\n            <p>\n    The resulting output will be            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        pageid (string)                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        adid (int)                </td>\n        </tr>\n</thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"front_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"front_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"front_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"contact_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"contact_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"contact_page\"                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        5                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n            <p>\n    Then in order to count the number of times a particular ad appears, count/group by can be used:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT adid, count(<span class=\"hue-doc-varname\">1</span>)\nFROM pageAds LATERAL VIEW explode(adid_list) adTable AS adid\nGROUP BY adid;\n</div>\n    </div>\n    <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead></thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        int adid                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        count(1)                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        5                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div id=\"src-27362040_LanguageManualLateralView-MultipleLateralViews\">\n        <h2><span>Multiple Lateral Views</span></h2>\n            <p>\n    A FROM clause can have multiple LATERAL VIEW clauses. Subsequent LATERAL VIEWS can reference columns from any of the tables appearing to the left of the LATERAL VIEW.            </p>\n                <p>\n    For example, the following could be a valid query:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT * FROM exampleTable\nLATERAL VIEW explode(col1) myTable1 AS myCol1\nLATERAL VIEW explode(myCol1) myTable2 AS myCol2;\n</div>\n    </div>\n            <p>\n    LATERAL VIEW clauses are applied in the order that they appear. For example with the following base table:            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead></thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Array&lt;int&gt; col1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Array&lt;string&gt; col2                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [1, 2]                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [a\", \"b\", \"c\"]                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [3, 4]                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [d\", \"e\", \"f\"]                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n            <p>\n    The query:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT myCol1, col2 FROM baseTable\nLATERAL VIEW explode(col1) myTable1 AS myCol1;\n</div>\n    </div>\n            <p>\n    Will produce:            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead></thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        int mycol1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        Array&lt;string&gt; col2                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [a\", \"b\", \"c\"]                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [a\", \"b\", \"c\"]                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [d\", \"e\", \"f\"]                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        [d\", \"e\", \"f\"]                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n            <p>\n    A query that adds an additional LATERAL VIEW:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT myCol1, myCol2 FROM baseTable\nLATERAL VIEW explode(col1) myTable1 AS myCol1\nLATERAL VIEW explode(col2) myTable2 AS myCol2;\n</div>\n    </div>\n            <p>\n    Will produce:            </p>\n        <div>\n        <table class=\"hue-doc-table-hive\">\n            <thead></thead><tfoot></tfoot><tbody>    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        int myCol1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        string myCol2                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"a\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"b\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        1                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"c\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"a\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"b\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        2                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"c\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"d\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"e\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        3                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"f\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"d\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"e\"                </td>\n        </tr>\n    <tr class=\"hue-doc-tr-hive\">\n            <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        4                </td>\n                <td rowspan=\"1\" colspan=\"1\" class=\"hue-doc-td-hive\">\n        \"f\"                </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    </div>\n    <div id=\"src-27362040_LanguageManualLateralView-OuterLateralViews\">\n        <h2><span>Outer Lateral Views</span></h2>\n    <div class=\"hue-doc-note-hive\">\n            <div>Version</div>\n                    <p>\n    Introduced in Hive version 0.12.0            </p>\n        </div>\n                <p>\n    The user can specify the optional <tt>OUTER</tt> keyword to generate rows even when a <tt>LATERAL VIEW</tt> usually would not generate a row. This happens when the UDTF used does not generate any rows which happens easily with <tt>explode</tt> when the column to explode is empty. In this case the source row would never appear in the results. <tt>OUTER</tt> can be used to prevent that and rows will be generated with <tt>NULL</tt> values in the columns coming from the UDTF.            </p>\n                <p>\n    For example, the following query returns an empty result:            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELEC * FROM src LATERAL VIEW explode(array()) C AS a limit 10;\n</div>\n    </div>\n            <p>\n    But with the <tt>OUTER</tt> keyword            </p>\n        <div style=\"counter-reset: scroll-code-numbering 1\">\n                <div class=\"hue-doc-codeblock\">SELECT * FROM src LATERAL VIEW OUTER explode(array()) C AS a limit 10;\n</div>\n    </div>\n            <p>\n    it will produce:            </p>\n                <p>\n    238 val_238 NULL<br>86 val_86 NULL<br>311 val_311 NULL<br>27 val_27 NULL<br>165 val_165 NULL<br>409 val_409 NULL<br>255 val_255 NULL<br>278 val_278 NULL<br>98 val_98 NULL<br>...            </p>\n        </div>\n        </div>\n    </div></div>","title":"LateralView"}