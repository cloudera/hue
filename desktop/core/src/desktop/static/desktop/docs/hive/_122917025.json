{"body":"<div><div>\n        <div id=\"title\">\n                        <h1 class=\"hue-doc-title-hive\">CAST...FORMAT with SQL:2016 datetime formats</h1>\n        </div>\n\n        <!--<div id=\"toc\" class=\"content prepend-top\">\n            <h1>Table of Contents</h1>\n            $replacement.render(\"toc\")\n        </div>-->\n\n        <div id=\"src-122917025\">\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1Vc2FnZQ\">\n        <h2><span>Usage</span></h2>\n<pre>CAST(&lt;timestamp/date&gt; AS &lt;varchar/char/string&gt; [FORMAT &lt;template&gt;])<br>CAST(&lt;varchar/char/string&gt; AS &lt;timestamp/date&gt; [FORMAT &lt;template&gt;])</pre>    </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1FeGFtcGxl\">\n        <h2><span>Example</span></h2>\n<pre>select cast(dt as string format 'DD-MM-YYYY')<br>select cast('01-05-2017' as date format 'DD-MM-YYYY')</pre>    </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1UZW1wbGF0ZWVsZW1lbnRzLGEuay5hLlRva2VucyxhLmsuYVBhdHRlcm5zYS5rLmFTUUw6MjAxNkRhdGV0aW1lRm9ybWF0cw\">\n        <h2><span>Template elements, a.k.a. Tokens, a.k.a Patterns a.k.a SQL:2016 Datetime Formats</span></h2>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1Ob3Rlcw\">\n        <h3><span>Notes</span></h3>\n            <p>\n    For all tokens:<br>- Patterns are case-insensitive, except AM/PM and T/Z. See these sections for more details.<br>- For string to datetime conversion, no duplicate format tokens are allowed, including tokens<br>that have the same meaning but different lengths (\"Y\" and \"YY\" conflict) or different<br>behaviors (\"RR\" and \"YY\" conflict).            </p>\n                <p>\n    For all numeric tokens:<br>- The \"expected length\" of input/output is the number of tokens in the character (e.g. \"YYY\": 3,<br>\"Y\": 1, and so on), with some exceptions (see map SPECIAL_LENGTHS).<br>- For string to datetime conversion, inputs of fewer digits than expected are accepted if<br>followed by a delimiter, e.g. format=\"YYYY-MM-DD\", input=\"19-1-1\", output=2019-01-01 00:00:00.<br>- For datetime to string conversion, output is left padded with zeros, e.g. format=\"DD SSSSS\",<br>input=2019-01-01 00:00:03, output=\"01 00003\".            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1BY2NlcHRlZGZvcm1hdHRva2Vucw\">\n        <h3><span>Accepted format tokens</span></h3>\n            <p>\n    Note: - \"|\" means \"or\".<br>- \"Delimiter\" for numeric tokens means any non-numeric character or end of input.<br>- The words token and pattern are used interchangeably.            </p>\n        <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1BLjEuTnVtZXJpY3RlbXBvcmFsdG9rZW5z\">\n        <h4><span>A.1. Numeric temporal tokens</span></h4>\n            <p>\n    YYYY<br>4-digit year<br>- For string to datetime conversion, prefix digits for 1, 2, and 3-digit inputs are obtained<br>from current date<br>E.g. input=‘9-01-01’, pattern =‘YYYY-MM-DD’, current year=2020, output=2029-01-01 00:00:00            </p>\n                <p>\n    YYY<br>Last 3 digits of a year<br>- Gets the prefix digit from current date.<br>- Can accept fewer digits than 3, similarly to YYYY.            </p>\n                <p>\n    YY<br>Last 2 digits of a year<br>- Gets the 2 prefix digits from current date.<br>- Can accept fewer digits than 2, similarly to YYYY.            </p>\n                <p>\n    Y<br>Last digit of a year<br>- Gets the 3 prefix digits from current date.            </p>\n                <p>\n    RRRR<br>4-digit rounded year<br>- String to datetime conversion:<br>- If 2 digits are provided then acts like RR.<br>- If 1,3 or 4 digits provided then acts like YYYY.<br>- For datetime to string conversion, acts like YYYY.            </p>\n                <p>\n    RR<br>2-digit rounded year<br>-String to datetime conversion:<br>- Semantics:<br>Input: Last 2 digits of current year: First 2 digits of output:<br>0 to 49 00 to 49 First 2 digits of current year<br>0 to 49 50 to 99 First 2 digits of current year + 1<br>50 to 99 00 to 49 First 2 digits of current year - 1<br>50 to 99 50 to 99 First 2 digits of current year<br>- If 1-digit year is provided followed by a delimiter, falls back to YYYY with 1-digit year<br>input.<br>- For datetime to string conversion, acts like YY.            </p>\n                <p>\n    MM<br>Month (1-12)<br>- For string to datetime conversion, conflicts with DDD, MONTH, MON.            </p>\n                <p>\n    DD<br>Day of month (1-31)<br>- For string to datetime conversion, conflicts with DDD.            </p>\n                <p>\n    DDD<br>Day of year (1-366)<br>- For string to datetime conversion, conflicts with DD and MM.            </p>\n                <p>\n    HH<br>Hour of day (1-12)<br>- If no AM/PM provided then defaults to AM.<br>- In string to datetime conversion, conflicts with SSSSS and HH24.            </p>\n                <p>\n    HH12<br>Hour of day (1-12)<br>See HH.            </p>\n                <p>\n    HH24<br>Hour of day (0-23)<br>- In string to datetime conversion, conflicts with SSSSS, HH12 and AM/PM.            </p>\n                <p>\n    MI<br>Minute of hour (0-59)<br>- In string to datetime conversion, conflicts with SSSSS.            </p>\n                <p>\n    SS<br>Second of minute (0-59)<br>- In string to datetime conversion, conflicts with SSSSS.            </p>\n                <p>\n    SSSSS<br>Second of Day (0-86399)<br>- In string to datetime conversion, conflicts with SS, HH, HH12, HH24, MI, AM/PM.            </p>\n                <p>\n    FF[1..9]<br>Fraction of second<br>- 1..9 indicates the number of decimal digits. \"FF\" (no number of digits specified) is also<br>accepted.<br>- In datetime to string conversion, \"FF\" will omit trailing zeros, or output \"0\" if subsecond<br>value is 0.<br>- In string to datetime conversion, fewer digits than expected are accepted if followed by a<br>delimiter. \"FF\" acts like \"FF9\".            </p>\n                <p>\n    AM|A.M.|PM|P.M.<br>Meridiem indicator (or AM/PM)<br>- Datetime to string conversion:<br>- AM and PM mean the exact same thing in the pattern.<br>e.g. input=2019-01-01 20:00, format=“AM”, output=“PM”.<br>- Retains the exact format (capitalization and length) provided in the pattern string. If p.m.<br>is in the pattern, we expect a.m. or p.m. in the output; if AM is in the pattern, we expect<br>AM or PM in the output. If the case is mixed (Am or aM) then the output case will match the<br>case of the pattern's first character (Am =&gt; AM, aM =&gt; am).<br>- String to datetime conversion:<br>- Conflicts with HH24 and SSSSS.<br>- It doesn't matter which meridian indicator is in the pattern.<br>E.g. input=\"2019-01-01 11:00 p.m.\", pattern=\"YYYY-MM-DD HH12:MI AM\",<br>output=2019-01-01 23:00:00<br>- If FX is enabled, input length has to match the pattern's length. e.g. pattern=AM input=A.M.<br>is not accepted, but input=pm is.<br>- Not listed as a character temporal because of special status: does not get padded with spaces<br>upon formatting, and case is handled differently at datetime to string conversion.            </p>\n                <p>\n    D<br>Day of week (1-7)<br>- 1 means Sunday, 2 means Monday, and so on.<br>- Not allowed in string to datetime conversion.            </p>\n                <p>\n    Q<br>Quarter of year (1-4)<br>- Not allowed in string to datetime conversion.            </p>\n                <p>\n    WW<br>Aligned week of year (1-53)<br>- 1st week begins on January 1st and ends on January 7th, and so on.<br>- Not allowed in string to datetime conversion.            </p>\n                <p>\n    W<br>Aligned week of month (1-5)<br>- 1st week starts on the 1st of the month and ends on the 7th, and so on.<br>- Not allowed in string to datetime conversion.            </p>\n                <p>\n    IYYY<br>4-digit ISO 8601 week-numbering year<br>- Returns the year relating to the ISO week number (IW), which is the full week (Monday to<br>Sunday) which contains January 4 of the Gregorian year.<br>- Behaves similarly to YYYY in that for datetime to string conversion, prefix digits for 1, 2,<br>and 3-digit inputs are obtained from current week-numbering year.<br>- For string to datetime conversion, requires IW and ID|DAY|DY. Conflicts with all other date<br>patterns (see \"List of Date-Based Patterns\").            </p>\n                <p>\n    IYY<br>Last 3 digits of ISO 8601 week-numbering year<br>- See IYYY.<br>- Behaves similarly to YYY in that for datetime to string conversion, prefix digit is obtained<br>from current week-numbering year and can accept 1 or 2-digit input.            </p>\n                <p>\n    IY<br>Last 2 digits of ISO 8601 week-numbering year<br>- See IYYY.<br>- Behaves similarly to YY in that for datetime to string conversion, prefix digits are obtained<br>from current week-numbering year and can accept 1-digit input.            </p>\n                <p>\n    I<br>Last digit of ISO 8601 week-numbering year<br>- See IYYY.<br>- Behaves similarly to Y in that for datetime to string conversion, prefix digits are obtained<br>from current week-numbering year.            </p>\n                <p>\n    IW<br>ISO 8601 week of year (1-53)<br>- Begins on the Monday closest to January 1 of the year.<br>- For string to datetime conversion, if the input week does not exist in the input year, an<br>error will be thrown. e.g. the 2019 week-year has 52 weeks; with pattern=\"iyyy-iw-id\"<br>input=\"2019-53-2\" is not accepted.<br>- For string to datetime conversion, requires IYYY|IYY|IY|I and ID|DAY|DY. Conflicts with all other<br>date patterns (see \"List of Date-Based Patterns\").            </p>\n                <p>\n    ID<br>ISO 8601 day of week (1-7)<br>- 1 is Monday, and so on.<br>- For string to datetime conversion, requires IYYY|IYY|IY|I and IW. Conflicts with all other<br>date patterns (see \"List of Date-Based Patterns\").            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1BLjIuQ2hhcmFjdGVydGVtcG9yYWxz\">\n        <h4><span>A.2. Character temporals</span></h4>\n            <p>\n    Temporal elements, but spelled out.<br>- For datetime to string conversion, the pattern's case must match one of the listed formats<br>(e.g. mOnTh is not accepted) to avoid ambiguity. Output is right padded with trailing spaces<br>unless the pattern is marked with the fill mode modifier (FM).<br>- For string to datetime conversion, the case of the pattern does not matter.            </p>\n                <p>\n    MONTH|Month|month<br>Name of month of year<br>- For datetime to string conversion, will include trailing spaces up to length 9 (length of<br>longest month of year name: \"September\"). Case is taken into account according to the<br>following example (pattern =&gt; output):<br>- MONTH =&gt; JANUARY<br>- Month =&gt; January<br>- month =&gt; january<br>- For string to datetime conversion, neither the case of the pattern nor the case of the input<br>are taken into account.<br>- For string to datetime conversion, conflicts with MM and MON.            </p>\n                <p>\n    MON|Mon|mon<br>Abbreviated name of month of year<br>- For datetime to string conversion, case is taken into account according to the following<br>example (pattern =&gt; output):<br>- MON =&gt; JAN<br>- Mon =&gt; Jan<br>- mon =&gt; jan<br>- For string to datetime conversion, neither the case of the pattern nor the case of the input<br>are taken into account.<br>- For string to datetime conversion, conflicts with MM and MONTH.            </p>\n                <p>\n    DAY|Day|day<br>Name of day of week<br>- For datetime to string conversion, will include trailing spaces until length is 9 (length of<br>longest day of week name: \"Wednesday\"). Case is taken into account according to the following<br>example (pattern =&gt; output):<br>- DAY = SUNDAY<br>- Day = Sunday<br>- day = sunday<br>- For string to datetime conversion, neither the case of the pattern nor the case of the input<br>are taken into account.<br>- Not allowed in string to datetime conversion except with IYYY|IYY|IY|I and IW.            </p>\n                <p>\n    DY|Dy|dy<br>Abbreviated name of day of week<br>- For datetime to string conversion, case is taken into account according to the following<br>example (pattern =&gt; output):<br>- DY = SUN<br>- Dy = Sun<br>- dy = sun<br>- For string to datetime conversion, neither the case of the pattern nor the case of the input<br>are taken into account.<br>- Not allowed in string to datetime conversion except with IYYY|IYY|IY|I and IW.            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1CLlRpbWV6b25ldG9rZW5z\">\n        <h4><span>B. Time zone tokens</span></h4>\n            <p>\n    TZH<br>Time zone offset hour (-15 to +15)<br>- 3-character-long input is expected: 1 character for the sign and 2 digits for the value.<br>e.g. “+10”, “-05”<br>- 2-digit input is accepted without the sign, e.g. “04”.<br>- Both these 2 and 3-digit versions are accepted even if not followed by separators.<br>- Disabled for timestamp to string and date to string conversion, as timestamp and date are time<br>zone agnostic.            </p>\n                <p>\n    TZM<br>Time zone offset minute (0-59)<br>- For string to datetime conversion:<br>- TZH token is required.<br>- Unsigned; sign comes from TZH.<br>- Therefore time zone offsets like “-30” minutes should be expressed thus: input=“-00:30”<br>pattern=“TZH:TZM”.<br>- Disabled for timestamp to string and date to string conversion, as timestamp and date are time<br>zone agnostic.            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1DLlNlcGFyYXRvcnM\">\n        <h4><span>C. Separators</span></h4>\n            <p>\n    -|.|/|,|'|;|:|&lt;space&gt;<br>Separator<br>- Uses loose matching. Existence of a sequence of separators in the format should match the<br>existence of a sequence of separators in the input regardless of the types of the separator or<br>the length of the sequence where length &gt; 1. E.g. input=“2019-. ;10/10”, pattern=“YYYY-MM-DD”<br>is valid; input=“20191010”, pattern=“YYYY-MM-DD” is not valid.<br>- If the last separator character in the separator substring is \"-\" and is immediately followed<br>by a time zone hour (tzh) token, it's a negative sign and not counted as a separator, UNLESS<br>this is the only possible separator character in the separator substring (in which case it is<br>not counted as the tzh's negative sign).<br>- If the whole pattern string is delimited by single quotes (''), then the apostrophe separator<br>(') must be escaped with a single backslash: (\\').            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1ELklTTzg2MDFkZWxpbWl0ZXJz\">\n        <h4><span>D. ISO 8601 delimiters</span></h4>\n            <p>\n    T|Z<br>ISO 8601 delimiter<br>- Serves as a delimiter.<br>- Function is to support formats like “YYYY-MM-DDTHH24:MI:SS.FF9Z”, “YYYY-MM-DD-HH24:MI:SSZ”<br>- For datetime to string conversion, output is always capitalized (\"T\"), even if lowercase (\"t\")<br>is provided in the pattern.<br>- For string to datetime conversion, case of input and pattern may differ.            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1FLk5lc3RlZHN0cmluZ3MoVGV4dCk\">\n        <h4><span>E. Nested strings (Text)</span></h4>\n            <p>\n    – Surround with double quotes (\") in the pattern. Note, if the whole pattern string is delimited<br>by double quotes, then the double quotes must be escaped with a single backslash: (\\\").<br>- In order to include a literal double quote character within the nested string, the double<br>quote character must be escaped with a double backslash: (\\\\”). If the whole pattern string is<br>delimited by double quotes, then escape with a triple backslash: (\\\\\\\")<br>- If the whole pattern string is delimited by single quotes, literal single<br>quotes/apostrophes (') in the nested string must be escaped with a single backslash: (\\')<br>- For datetime to string conversion, we simply include the string in the output, preserving the<br>characters' case.<br>- For string to datetime conversion, the information is lost as the nested string won’t be part<br>of the resulting datetime object. However, the nested string has to match the related part of<br>the input string, except case may differ.            </p>\n        </div>\n    <div id=\"src-122917025_safe-id-Q0FTVC4uLkZPUk1BVHdpdGhTUUw6MjAxNmRhdGV0aW1lZm9ybWF0cy1GLkZvcm1hdG1vZGlmaWVydG9rZW5z\">\n        <h4><span>F. Format modifier tokens</span></h4>\n            <p>\n    FM<br>Fill mode modifier<br>- Default for string to datetime conversion. Inputs of fewer digits than expected are accepted<br>if followed by a delimiter:<br>e.g. format=\"YYYY-MM-DD\", input=\"19-1-1\", output=2019-01-01 00:00:00<br>- For datetime to string conversion, padding (trailing spaces for text data and leading zeroes<br>for numeric data) is omitted for the temporal element immediately following an \"FM\" in the<br>pattern string. If the element following is not a temporal element (for example, if \"FM\"<br>precedes a separator), an error will be thrown.<br>e.g. pattern=FMHH12:MI:FMSS, input=2019-01-01 01:01:01, output=1:01:1<br>- Modifies FX so that lack of leading zeroes are accepted for the element immediately following<br>an \"FM\" in the pattern string.            </p>\n                <p>\n    FX<br>Format exact modifier<br>- Default for datetime to string conversion. Numeric output is left padded with zeros, and<br>non-numeric output except for AM/PM is right padded with spaces up to expected length.<br>- Applies to the whole pattern.<br>- Rules applied at string to datetime conversion:<br>- Separators must match exactly, down to the character.<br>- Numeric input can't omit leading zeroes. This rule does not apply to elements (tokens)<br>immediately preceded by an \"FM.\"<br>- AM/PM input length has to match the pattern's length. e.g. pattern=AM input=A.M. is not<br>accepted, but input=pm is.            </p>\n        </div>\n    </div>\n    </div>\n        </div>\n    </div></div>","title":"CAST...FORMAT with SQL:2016 datetime formats"}