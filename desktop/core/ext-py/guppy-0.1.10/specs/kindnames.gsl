.kind:: ObjectClassifier
.kind:: NodeSet

.kind:: callable
.kind:: int
.kind:: integer
..d: When it is not specified if an attribute is an int or long,
it is specified as integer.

.kind:: iterable
.kind:: iterator
.kind:: list
.kind:: string

.kind:: notnegative
..d: This is non-negative integer, int or long.

.kind:: Any
.kind:: RelationStructure
.kind:: boolean
.kind:: frame
.kind:: None

.kind:: CommonSet
.kind:: ImmNodeSet
.kind:: MutNodeSet
.kind:: HeapView
.kind:: NodeGraph

.kind:: guppy

.kind:: guppy_Root

.superkind:: Guppy Glue+
..eg: _GLUECLAMP_
...in context:
class _GLUECLAMP_:
    # Example module description class.
    # It must be named _GLUECLAMP_ to be recognized by Guppy Glue.

    # Tuple of on-demand imports.

    _imports_ = (
	'_root:os',		# Import os as self.os
	'_parent:module',	# Import a module from the parent of my module, as self.module
	'_parent.module.method' # Import a method, as self.method
	)

    # Tuple of changable attributes.

    _chgable_ = ('config',)    	# Allow self.config to be written
	
    # A 'normal' attribute.

    config = 'A'

    # Methods beginning with _get_ will be called to automatically
    # create the attribute with the name after _get_.

    def _get_table(self):      	# Create the table attribute on demand
	return {}	       	# It is automatically memoized as self.table

.superkind:: int+
..eg: 0

.superkind:: None+
..eg: None

.superkind:: notnegative+
..eg: 0

.superkind:: positive+
..eg: 1

.superkind:: iterable+
..eg: [1]

.superkind:: Any+
..eg: ()

.superkind:: dict+
..eg: {}

.superkind:: Exception+
..eg: ValueError

.superkind:: NodeGraph+
..eg: NodeGraph()
...in context:
from guppy.heapy.heapyc import NodeGraph

.superkind:: NodeSet+
..eg: immnodeset()
...in context:
from guppy.sets import immnodeset

.superkind:: string+
..eg: ""

.superkind:: ObjectClassifier+
..eg: hv.cli_none()
...in context:
from guppy.heapy.heapyc import HeapView
hv = HeapView((), ())

.superkind:: boolean+
..eg: True

.superkind:: type+
..eg: int

.superkind:: type_with_hiding_tag+
..eg: MutNodeSet
...in context:
from guppy.sets import MutNodeSet

