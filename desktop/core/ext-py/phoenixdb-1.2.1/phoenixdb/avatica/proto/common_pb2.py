# -*- coding: utf-8 -*-
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x63ommon.proto\"\xc0\x01\n\x14\x43onnectionProperties\x12\x10\n\x08is_dirty\x18\x01 \x01(\x08\x12\x13\n\x0b\x61uto_commit\x18\x02 \x01(\x08\x12\x17\n\x0fhas_auto_commit\x18\x07 \x01(\x08\x12\x11\n\tread_only\x18\x03 \x01(\x08\x12\x15\n\rhas_read_only\x18\x08 \x01(\x08\x12\x1d\n\x15transaction_isolation\x18\x04 \x01(\r\x12\x0f\n\x07\x63\x61talog\x18\x05 \x01(\t\x12\x0e\n\x06schema\x18\x06 \x01(\t\"S\n\x0fStatementHandle\x12\x15\n\rconnection_id\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\r\x12\x1d\n\tsignature\x18\x03 \x01(\x0b\x32\n.Signature\"\xb0\x01\n\tSignature\x12 \n\x07\x63olumns\x18\x01 \x03(\x0b\x32\x0f.ColumnMetaData\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12%\n\nparameters\x18\x03 \x03(\x0b\x32\x11.AvaticaParameter\x12&\n\x0e\x63ursor_factory\x18\x04 \x01(\x0b\x32\x0e.CursorFactory\x12%\n\rstatementType\x18\x05 \x01(\x0e\x32\x0e.StatementType\"\xad\x03\n\x0e\x43olumnMetaData\x12\x0f\n\x07ordinal\x18\x01 \x01(\r\x12\x16\n\x0e\x61uto_increment\x18\x02 \x01(\x08\x12\x16\n\x0e\x63\x61se_sensitive\x18\x03 \x01(\x08\x12\x12\n\nsearchable\x18\x04 \x01(\x08\x12\x10\n\x08\x63urrency\x18\x05 \x01(\x08\x12\x10\n\x08nullable\x18\x06 \x01(\r\x12\x0e\n\x06signed\x18\x07 \x01(\x08\x12\x14\n\x0c\x64isplay_size\x18\x08 \x01(\r\x12\r\n\x05label\x18\t \x01(\t\x12\x13\n\x0b\x63olumn_name\x18\n \x01(\t\x12\x13\n\x0bschema_name\x18\x0b \x01(\t\x12\x11\n\tprecision\x18\x0c \x01(\r\x12\r\n\x05scale\x18\r \x01(\r\x12\x12\n\ntable_name\x18\x0e \x01(\t\x12\x14\n\x0c\x63\x61talog_name\x18\x0f \x01(\t\x12\x11\n\tread_only\x18\x10 \x01(\x08\x12\x10\n\x08writable\x18\x11 \x01(\x08\x12\x1b\n\x13\x64\x65\x66initely_writable\x18\x12 \x01(\x08\x12\x19\n\x11\x63olumn_class_name\x18\x13 \x01(\t\x12\x1a\n\x04type\x18\x14 \x01(\x0b\x32\x0c.AvaticaType\"}\n\x0b\x41vaticaType\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\x03rep\x18\x03 \x01(\x0e\x32\x04.Rep\x12 \n\x07\x63olumns\x18\x04 \x03(\x0b\x32\x0f.ColumnMetaData\x12\x1f\n\tcomponent\x18\x05 \x01(\x0b\x32\x0c.AvaticaType\"\x91\x01\n\x10\x41vaticaParameter\x12\x0e\n\x06signed\x18\x01 \x01(\x08\x12\x11\n\tprecision\x18\x02 \x01(\r\x12\r\n\x05scale\x18\x03 \x01(\r\x12\x16\n\x0eparameter_type\x18\x04 \x01(\r\x12\x11\n\ttype_name\x18\x05 \x01(\t\x12\x12\n\nclass_name\x18\x06 \x01(\t\x12\x0c\n\x04name\x18\x07 \x01(\t\"\xb3\x01\n\rCursorFactory\x12#\n\x05style\x18\x01 \x01(\x0e\x32\x14.CursorFactory.Style\x12\x12\n\nclass_name\x18\x02 \x01(\t\x12\x13\n\x0b\x66ield_names\x18\x03 \x03(\t\"T\n\x05Style\x12\n\n\x06OBJECT\x10\x00\x12\n\n\x06RECORD\x10\x01\x12\x15\n\x11RECORD_PROJECTION\x10\x02\x12\t\n\x05\x41RRAY\x10\x03\x12\x08\n\x04LIST\x10\x04\x12\x07\n\x03MAP\x10\x05\"9\n\x05\x46rame\x12\x0e\n\x06offset\x18\x01 \x01(\x04\x12\x0c\n\x04\x64one\x18\x02 \x01(\x08\x12\x12\n\x04rows\x18\x03 \x03(\x0b\x32\x04.Row\"\"\n\x03Row\x12\x1b\n\x05value\x18\x01 \x03(\x0b\x32\x0c.ColumnValue\"3\n\x10\x44\x61tabaseProperty\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tfunctions\x18\x02 \x03(\t\"4\n\x0bWireMessage\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x17\n\x0fwrapped_message\x18\x02 \x01(\x0c\"\x87\x01\n\x0b\x43olumnValue\x12\x1a\n\x05value\x18\x01 \x03(\x0b\x32\x0b.TypedValue\x12 \n\x0b\x61rray_value\x18\x02 \x03(\x0b\x32\x0b.TypedValue\x12\x17\n\x0fhas_array_value\x18\x03 \x01(\x08\x12!\n\x0cscalar_value\x18\x04 \x01(\x0b\x32\x0b.TypedValue\"\xf2\x01\n\nTypedValue\x12\x12\n\x04type\x18\x01 \x01(\x0e\x32\x04.Rep\x12\x12\n\nbool_value\x18\x02 \x01(\x08\x12\x14\n\x0cstring_value\x18\x03 \x01(\t\x12\x14\n\x0cnumber_value\x18\x04 \x01(\x12\x12\x13\n\x0b\x62ytes_value\x18\x05 \x01(\x0c\x12\x14\n\x0c\x64ouble_value\x18\x06 \x01(\x01\x12\x0c\n\x04null\x18\x07 \x01(\x08\x12 \n\x0b\x61rray_value\x18\x08 \x03(\x0b\x32\x0b.TypedValue\x12\x1c\n\x0e\x63omponent_type\x18\t \x01(\x0e\x32\x04.Rep\x12\x17\n\x0fimplicitly_null\x18\n \x01(\x08\"\xa6\x02\n\x19MetaDataOperationArgument\x12\x14\n\x0cstring_value\x18\x01 \x01(\t\x12\x12\n\nbool_value\x18\x02 \x01(\x08\x12\x11\n\tint_value\x18\x03 \x01(\x11\x12\x1b\n\x13string_array_values\x18\x04 \x03(\t\x12\x18\n\x10int_array_values\x18\x05 \x03(\x11\x12\x35\n\x04type\x18\x06 \x01(\x0e\x32\'.MetaDataOperationArgument.ArgumentType\"^\n\x0c\x41rgumentType\x12\n\n\x06STRING\x10\x00\x12\x08\n\x04\x42OOL\x10\x01\x12\x07\n\x03INT\x10\x02\x12\x13\n\x0fREPEATED_STRING\x10\x03\x12\x10\n\x0cREPEATED_INT\x10\x04\x12\x08\n\x04NULL\x10\x05\"\xb0\x01\n\nQueryState\x12\x18\n\x04type\x18\x01 \x01(\x0e\x32\n.StateType\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x1e\n\x02op\x18\x03 \x01(\x0e\x32\x12.MetaDataOperation\x12(\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x1a.MetaDataOperationArgument\x12\x10\n\x08has_args\x18\x05 \x01(\x08\x12\x0f\n\x07has_sql\x18\x06 \x01(\x08\x12\x0e\n\x06has_op\x18\x07 \x01(\x08*\x9f\x01\n\rStatementType\x12\n\n\x06SELECT\x10\x00\x12\n\n\x06INSERT\x10\x01\x12\n\n\x06UPDATE\x10\x02\x12\n\n\x06\x44\x45LETE\x10\x03\x12\n\n\x06UPSERT\x10\x04\x12\t\n\x05MERGE\x10\x05\x12\r\n\tOTHER_DML\x10\x06\x12\n\n\x06\x43REATE\x10\x07\x12\x08\n\x04\x44ROP\x10\x08\x12\t\n\x05\x41LTER\x10\t\x12\r\n\tOTHER_DDL\x10\n\x12\x08\n\x04\x43\x41LL\x10\x0b*\xe2\x03\n\x03Rep\x12\x15\n\x11PRIMITIVE_BOOLEAN\x10\x00\x12\x12\n\x0ePRIMITIVE_BYTE\x10\x01\x12\x12\n\x0ePRIMITIVE_CHAR\x10\x02\x12\x13\n\x0fPRIMITIVE_SHORT\x10\x03\x12\x11\n\rPRIMITIVE_INT\x10\x04\x12\x12\n\x0ePRIMITIVE_LONG\x10\x05\x12\x13\n\x0fPRIMITIVE_FLOAT\x10\x06\x12\x14\n\x10PRIMITIVE_DOUBLE\x10\x07\x12\x0b\n\x07\x42OOLEAN\x10\x08\x12\x08\n\x04\x42YTE\x10\t\x12\r\n\tCHARACTER\x10\n\x12\t\n\x05SHORT\x10\x0b\x12\x0b\n\x07INTEGER\x10\x0c\x12\x08\n\x04LONG\x10\r\x12\t\n\x05\x46LOAT\x10\x0e\x12\n\n\x06\x44OUBLE\x10\x0f\x12\x0f\n\x0b\x42IG_INTEGER\x10\x19\x12\x0f\n\x0b\x42IG_DECIMAL\x10\x1a\x12\x11\n\rJAVA_SQL_TIME\x10\x10\x12\x16\n\x12JAVA_SQL_TIMESTAMP\x10\x11\x12\x11\n\rJAVA_SQL_DATE\x10\x12\x12\x12\n\x0eJAVA_UTIL_DATE\x10\x13\x12\x0f\n\x0b\x42YTE_STRING\x10\x14\x12\n\n\x06STRING\x10\x15\x12\n\n\x06NUMBER\x10\x16\x12\n\n\x06OBJECT\x10\x17\x12\x08\n\x04NULL\x10\x18\x12\t\n\x05\x41RRAY\x10\x1b\x12\n\n\x06STRUCT\x10\x1c\x12\x0c\n\x08MULTISET\x10\x1d*^\n\x08Severity\x12\x14\n\x10UNKNOWN_SEVERITY\x10\x00\x12\x12\n\x0e\x46\x41TAL_SEVERITY\x10\x01\x12\x12\n\x0e\x45RROR_SEVERITY\x10\x02\x12\x14\n\x10WARNING_SEVERITY\x10\x03*\xd7\x04\n\x11MetaDataOperation\x12\x12\n\x0eGET_ATTRIBUTES\x10\x00\x12\x1b\n\x17GET_BEST_ROW_IDENTIFIER\x10\x01\x12\x10\n\x0cGET_CATALOGS\x10\x02\x12\x1e\n\x1aGET_CLIENT_INFO_PROPERTIES\x10\x03\x12\x19\n\x15GET_COLUMN_PRIVILEGES\x10\x04\x12\x0f\n\x0bGET_COLUMNS\x10\x05\x12\x17\n\x13GET_CROSS_REFERENCE\x10\x06\x12\x15\n\x11GET_EXPORTED_KEYS\x10\x07\x12\x18\n\x14GET_FUNCTION_COLUMNS\x10\x08\x12\x11\n\rGET_FUNCTIONS\x10\t\x12\x15\n\x11GET_IMPORTED_KEYS\x10\n\x12\x12\n\x0eGET_INDEX_INFO\x10\x0b\x12\x14\n\x10GET_PRIMARY_KEYS\x10\x0c\x12\x19\n\x15GET_PROCEDURE_COLUMNS\x10\r\x12\x12\n\x0eGET_PROCEDURES\x10\x0e\x12\x16\n\x12GET_PSEUDO_COLUMNS\x10\x0f\x12\x0f\n\x0bGET_SCHEMAS\x10\x10\x12\x19\n\x15GET_SCHEMAS_WITH_ARGS\x10\x11\x12\x14\n\x10GET_SUPER_TABLES\x10\x12\x12\x13\n\x0fGET_SUPER_TYPES\x10\x13\x12\x18\n\x14GET_TABLE_PRIVILEGES\x10\x14\x12\x0e\n\nGET_TABLES\x10\x15\x12\x13\n\x0fGET_TABLE_TYPES\x10\x16\x12\x11\n\rGET_TYPE_INFO\x10\x17\x12\x0c\n\x08GET_UDTS\x10\x18\x12\x17\n\x13GET_VERSION_COLUMNS\x10\x19*\"\n\tStateType\x12\x07\n\x03SQL\x10\x00\x12\x0c\n\x08METADATA\x10\x01\x42\"\n org.apache.calcite.avatica.protob\x06proto3')

_STATEMENTTYPE = DESCRIPTOR.enum_types_by_name['StatementType']
StatementType = enum_type_wrapper.EnumTypeWrapper(_STATEMENTTYPE)
_REP = DESCRIPTOR.enum_types_by_name['Rep']
Rep = enum_type_wrapper.EnumTypeWrapper(_REP)
_SEVERITY = DESCRIPTOR.enum_types_by_name['Severity']
Severity = enum_type_wrapper.EnumTypeWrapper(_SEVERITY)
_METADATAOPERATION = DESCRIPTOR.enum_types_by_name['MetaDataOperation']
MetaDataOperation = enum_type_wrapper.EnumTypeWrapper(_METADATAOPERATION)
_STATETYPE = DESCRIPTOR.enum_types_by_name['StateType']
StateType = enum_type_wrapper.EnumTypeWrapper(_STATETYPE)
SELECT = 0
INSERT = 1
UPDATE = 2
DELETE = 3
UPSERT = 4
MERGE = 5
OTHER_DML = 6
CREATE = 7
DROP = 8
ALTER = 9
OTHER_DDL = 10
CALL = 11
PRIMITIVE_BOOLEAN = 0
PRIMITIVE_BYTE = 1
PRIMITIVE_CHAR = 2
PRIMITIVE_SHORT = 3
PRIMITIVE_INT = 4
PRIMITIVE_LONG = 5
PRIMITIVE_FLOAT = 6
PRIMITIVE_DOUBLE = 7
BOOLEAN = 8
BYTE = 9
CHARACTER = 10
SHORT = 11
INTEGER = 12
LONG = 13
FLOAT = 14
DOUBLE = 15
BIG_INTEGER = 25
BIG_DECIMAL = 26
JAVA_SQL_TIME = 16
JAVA_SQL_TIMESTAMP = 17
JAVA_SQL_DATE = 18
JAVA_UTIL_DATE = 19
BYTE_STRING = 20
STRING = 21
NUMBER = 22
OBJECT = 23
NULL = 24
ARRAY = 27
STRUCT = 28
MULTISET = 29
UNKNOWN_SEVERITY = 0
FATAL_SEVERITY = 1
ERROR_SEVERITY = 2
WARNING_SEVERITY = 3
GET_ATTRIBUTES = 0
GET_BEST_ROW_IDENTIFIER = 1
GET_CATALOGS = 2
GET_CLIENT_INFO_PROPERTIES = 3
GET_COLUMN_PRIVILEGES = 4
GET_COLUMNS = 5
GET_CROSS_REFERENCE = 6
GET_EXPORTED_KEYS = 7
GET_FUNCTION_COLUMNS = 8
GET_FUNCTIONS = 9
GET_IMPORTED_KEYS = 10
GET_INDEX_INFO = 11
GET_PRIMARY_KEYS = 12
GET_PROCEDURE_COLUMNS = 13
GET_PROCEDURES = 14
GET_PSEUDO_COLUMNS = 15
GET_SCHEMAS = 16
GET_SCHEMAS_WITH_ARGS = 17
GET_SUPER_TABLES = 18
GET_SUPER_TYPES = 19
GET_TABLE_PRIVILEGES = 20
GET_TABLES = 21
GET_TABLE_TYPES = 22
GET_TYPE_INFO = 23
GET_UDTS = 24
GET_VERSION_COLUMNS = 25
SQL = 0
METADATA = 1


_CONNECTIONPROPERTIES = DESCRIPTOR.message_types_by_name['ConnectionProperties']
_STATEMENTHANDLE = DESCRIPTOR.message_types_by_name['StatementHandle']
_SIGNATURE = DESCRIPTOR.message_types_by_name['Signature']
_COLUMNMETADATA = DESCRIPTOR.message_types_by_name['ColumnMetaData']
_AVATICATYPE = DESCRIPTOR.message_types_by_name['AvaticaType']
_AVATICAPARAMETER = DESCRIPTOR.message_types_by_name['AvaticaParameter']
_CURSORFACTORY = DESCRIPTOR.message_types_by_name['CursorFactory']
_FRAME = DESCRIPTOR.message_types_by_name['Frame']
_ROW = DESCRIPTOR.message_types_by_name['Row']
_DATABASEPROPERTY = DESCRIPTOR.message_types_by_name['DatabaseProperty']
_WIREMESSAGE = DESCRIPTOR.message_types_by_name['WireMessage']
_COLUMNVALUE = DESCRIPTOR.message_types_by_name['ColumnValue']
_TYPEDVALUE = DESCRIPTOR.message_types_by_name['TypedValue']
_METADATAOPERATIONARGUMENT = DESCRIPTOR.message_types_by_name['MetaDataOperationArgument']
_QUERYSTATE = DESCRIPTOR.message_types_by_name['QueryState']
_CURSORFACTORY_STYLE = _CURSORFACTORY.enum_types_by_name['Style']
_METADATAOPERATIONARGUMENT_ARGUMENTTYPE = _METADATAOPERATIONARGUMENT.enum_types_by_name['ArgumentType']
ConnectionProperties = _reflection.GeneratedProtocolMessageType('ConnectionProperties', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONPROPERTIES,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:ConnectionProperties)
  })
_sym_db.RegisterMessage(ConnectionProperties)

StatementHandle = _reflection.GeneratedProtocolMessageType('StatementHandle', (_message.Message,), {
  'DESCRIPTOR' : _STATEMENTHANDLE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:StatementHandle)
  })
_sym_db.RegisterMessage(StatementHandle)

Signature = _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
  'DESCRIPTOR' : _SIGNATURE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:Signature)
  })
_sym_db.RegisterMessage(Signature)

ColumnMetaData = _reflection.GeneratedProtocolMessageType('ColumnMetaData', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNMETADATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:ColumnMetaData)
  })
_sym_db.RegisterMessage(ColumnMetaData)

AvaticaType = _reflection.GeneratedProtocolMessageType('AvaticaType', (_message.Message,), {
  'DESCRIPTOR' : _AVATICATYPE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:AvaticaType)
  })
_sym_db.RegisterMessage(AvaticaType)

AvaticaParameter = _reflection.GeneratedProtocolMessageType('AvaticaParameter', (_message.Message,), {
  'DESCRIPTOR' : _AVATICAPARAMETER,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:AvaticaParameter)
  })
_sym_db.RegisterMessage(AvaticaParameter)

CursorFactory = _reflection.GeneratedProtocolMessageType('CursorFactory', (_message.Message,), {
  'DESCRIPTOR' : _CURSORFACTORY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:CursorFactory)
  })
_sym_db.RegisterMessage(CursorFactory)

Frame = _reflection.GeneratedProtocolMessageType('Frame', (_message.Message,), {
  'DESCRIPTOR' : _FRAME,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:Frame)
  })
_sym_db.RegisterMessage(Frame)

Row = _reflection.GeneratedProtocolMessageType('Row', (_message.Message,), {
  'DESCRIPTOR' : _ROW,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:Row)
  })
_sym_db.RegisterMessage(Row)

DatabaseProperty = _reflection.GeneratedProtocolMessageType('DatabaseProperty', (_message.Message,), {
  'DESCRIPTOR' : _DATABASEPROPERTY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:DatabaseProperty)
  })
_sym_db.RegisterMessage(DatabaseProperty)

WireMessage = _reflection.GeneratedProtocolMessageType('WireMessage', (_message.Message,), {
  'DESCRIPTOR' : _WIREMESSAGE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:WireMessage)
  })
_sym_db.RegisterMessage(WireMessage)

ColumnValue = _reflection.GeneratedProtocolMessageType('ColumnValue', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNVALUE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:ColumnValue)
  })
_sym_db.RegisterMessage(ColumnValue)

TypedValue = _reflection.GeneratedProtocolMessageType('TypedValue', (_message.Message,), {
  'DESCRIPTOR' : _TYPEDVALUE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:TypedValue)
  })
_sym_db.RegisterMessage(TypedValue)

MetaDataOperationArgument = _reflection.GeneratedProtocolMessageType('MetaDataOperationArgument', (_message.Message,), {
  'DESCRIPTOR' : _METADATAOPERATIONARGUMENT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:MetaDataOperationArgument)
  })
_sym_db.RegisterMessage(MetaDataOperationArgument)

QueryState = _reflection.GeneratedProtocolMessageType('QueryState', (_message.Message,), {
  'DESCRIPTOR' : _QUERYSTATE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:QueryState)
  })
_sym_db.RegisterMessage(QueryState)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n org.apache.calcite.avatica.proto'
  _STATEMENTTYPE._serialized_start=2426
  _STATEMENTTYPE._serialized_end=2585
  _REP._serialized_start=2588
  _REP._serialized_end=3070
  _SEVERITY._serialized_start=3072
  _SEVERITY._serialized_end=3166
  _METADATAOPERATION._serialized_start=3169
  _METADATAOPERATION._serialized_end=3768
  _STATETYPE._serialized_start=3770
  _STATETYPE._serialized_end=3804
  _CONNECTIONPROPERTIES._serialized_start=17
  _CONNECTIONPROPERTIES._serialized_end=209
  _STATEMENTHANDLE._serialized_start=211
  _STATEMENTHANDLE._serialized_end=294
  _SIGNATURE._serialized_start=297
  _SIGNATURE._serialized_end=473
  _COLUMNMETADATA._serialized_start=476
  _COLUMNMETADATA._serialized_end=905
  _AVATICATYPE._serialized_start=907
  _AVATICATYPE._serialized_end=1032
  _AVATICAPARAMETER._serialized_start=1035
  _AVATICAPARAMETER._serialized_end=1180
  _CURSORFACTORY._serialized_start=1183
  _CURSORFACTORY._serialized_end=1362
  _CURSORFACTORY_STYLE._serialized_start=1278
  _CURSORFACTORY_STYLE._serialized_end=1362
  _FRAME._serialized_start=1364
  _FRAME._serialized_end=1421
  _ROW._serialized_start=1423
  _ROW._serialized_end=1457
  _DATABASEPROPERTY._serialized_start=1459
  _DATABASEPROPERTY._serialized_end=1510
  _WIREMESSAGE._serialized_start=1512
  _WIREMESSAGE._serialized_end=1564
  _COLUMNVALUE._serialized_start=1567
  _COLUMNVALUE._serialized_end=1702
  _TYPEDVALUE._serialized_start=1705
  _TYPEDVALUE._serialized_end=1947
  _METADATAOPERATIONARGUMENT._serialized_start=1950
  _METADATAOPERATIONARGUMENT._serialized_end=2244
  _METADATAOPERATIONARGUMENT_ARGUMENTTYPE._serialized_start=2150
  _METADATAOPERATIONARGUMENT_ARGUMENTTYPE._serialized_end=2244
  _QUERYSTATE._serialized_start=2247
  _QUERYSTATE._serialized_end=2423
# @@protoc_insertion_point(module_scope)
