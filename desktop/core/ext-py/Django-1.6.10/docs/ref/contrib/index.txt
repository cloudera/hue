====================
``contrib`` packages
====================

Django aims to follow Python's `"batteries included" philosophy`_. It ships
with a variety of extra, optional tools that solve common Web-development
problems.

This code lives in ``django/contrib`` in the Django distribution. This document
gives a rundown of the packages in ``contrib``, along with any dependencies
those packages have.

.. admonition:: Note

    For most of these add-ons -- specifically, the add-ons that include either
    models or template tags -- you'll need to add the package name (e.g.,
    ``'django.contrib.admin'``) to your :setting:`INSTALLED_APPS` setting and
    re-run ``manage.py syncdb``.

.. _"batteries included" philosophy: http://docs.python.org/tutorial/stdlib.html#batteries-included

.. toctree::
   :maxdepth: 1

   admin/index
   auth
   comments/index
   contenttypes
   csrf
   flatpages
   formtools/index
   gis/index
   humanize
   messages
   redirects
   sitemaps
   sites
   staticfiles
   syndication
   webdesign

admin
=====

The automatic Django administrative interface. For more information, see
:doc:`Tutorial 2 </intro/tutorial02>` and the
:doc:`admin documentation </ref/contrib/admin/index>`.

Requires the auth_ and contenttypes_ contrib packages to be installed.

auth
====

Django's authentication framework.

See :doc:`/topics/auth/index`.

comments
========

A simple yet flexible comments system. See :doc:`/ref/contrib/comments/index`.

contenttypes
============

A light framework for hooking into "types" of content, where each installed
Django model is a separate content type.

See the :doc:`contenttypes documentation </ref/contrib/contenttypes>`.

csrf
====

A middleware for preventing Cross Site Request Forgeries

See the :doc:`csrf documentation </ref/contrib/csrf>`.

flatpages
=========

A framework for managing simple "flat" HTML content in a database.

See the :doc:`flatpages documentation </ref/contrib/flatpages>`.

Requires the sites_ contrib package to be installed as well.

formtools
=========

A set of high-level abstractions for Django forms (django.forms).

django.contrib.formtools.preview
--------------------------------

An abstraction of the following workflow:

"Display an HTML form, force a preview, then do something with the submission."

See the :doc:`form preview documentation </ref/contrib/formtools/form-preview>`.

django.contrib.formtools.wizard
-------------------------------

Splits forms across multiple Web pages.

See the :doc:`form wizard documentation </ref/contrib/formtools/form-wizard>`.

gis
====

A world-class geospatial framework built on top of Django, that enables
storage, manipulation and display of spatial data.

See the :doc:`/ref/contrib/gis/index` documentation for more.

humanize
========

A set of Django template filters useful for adding a "human touch" to data.

See the :doc:`humanize documentation </ref/contrib/humanize>`.

messages
========

A framework for storing and retrieving temporary cookie- or session-based
messages

See the :doc:`messages documentation </ref/contrib/messages>`.

redirects
=========

A framework for managing redirects.

See the :doc:`redirects documentation </ref/contrib/redirects>`.

sessions
========

A framework for storing data in anonymous sessions.

See the :doc:`sessions documentation </topics/http/sessions>`.

sites
=====

A light framework that lets you operate multiple Web sites off of the same
database and Django installation. It gives you hooks for associating objects to
one or more sites.

See the :doc:`sites documentation </ref/contrib/sites>`.

sitemaps
========

A framework for generating Google sitemap XML files.

See the :doc:`sitemaps documentation </ref/contrib/sitemaps>`.

syndication
===========

A framework for generating syndication feeds, in RSS and Atom, quite easily.

See the :doc:`syndication documentation </ref/contrib/syndication>`.

webdesign
=========

Helpers and utilities targeted primarily at Web *designers* rather than
Web *developers*.

See the :doc:`Web design helpers documentation </ref/contrib/webdesign>`.

Other add-ons
=============

If you have an idea for functionality to include in ``contrib``, let us know!
Code it up, and post it to the |django-users| mailing list.
