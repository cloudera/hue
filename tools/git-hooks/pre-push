#!/bin/bash
# Licensed to Cloudera, Inc. under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  Cloudera, Inc. licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e
ERRORS=false

COMMITS=$(git log @{u}..HEAD --pretty=format:%h)

for COMMIT in $COMMITS; do
    FILES_IN_COMMIT=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
    for FILE in $FILES_IN_COMMIT; do
        if [[ "$FILE" =~ ^.+(py)$ ]]; then
            if [ "grep 'distinct()' $FILE" ]; then  # HUE-3191: Check if distinct() exists in any Python files
                ERRORS=true
                echo -e "[WARNING] $FILE: The file contains distinct() which case cause Oracle to fail if the object contains a TextField (CLOB). Ensure that you use defer() on any TextFields in the query or avoid distinct().\n"
            fi

            if [ "grep 'pdb.set_trace()' $FILE" ]; then
                ERRORS=true
                echo -e "[ERROR] $FILE: Found pdb.set_trace() debug statements in file.\n"
            fi
        elif [[ "$FILE" =~ ^.+(js|jsx|ts|tsx)$ ]]; then
            FOLDERS_PATTERN="^(desktop/core/src/desktop/js|tools/sql-docs|tools/jison)/"
            echo "Running ESLint for $FILE..."
            if [[ "$FILE" =~ $FOLDERS_PATTERN ]]; then  # Check if file is inside one of the desired folders
                eslint "$FILE"  # Run ESLint for JavaScript/JSX files
                if [ $? -ne 0 ]; then
                    ERRORS=true
                    echo -e "[ERROR] ESLint found issues in $FILE.\n"
                fi
            fi
        fi
    done
done

if $ERRORS; then
    echo -e "To ignore these warnings, commit with --no-verify\n"
    exit 1
fi

exit
